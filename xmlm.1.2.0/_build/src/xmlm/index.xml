<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></html></base>Xmlm</root><digest>4d5ef5e09c300c06b4a0d20d2f202e97</digest><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>src/xmlm.mli</file><dir>/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build</dir><digest>63f390637718dd7513df8e3869f69518</digest></source><doc>Streaming XML codec.<newline/>A well-formed sequence of <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></element>signals</reference> represents an
<reference><link>http://www.w3.org/TR/REC-xml</link>XML</reference> document tree traversal in
depth first order (this has nothing to do with XML
well-formedness). Input pulls a well-formed sequence of signals
from a data source and output pushes a well-formed sequence of
signals to a data destination. Functions are provided to easily
transform sequences of signals to/from arborescent data structures.<newline/>Consult the <reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>io</label></identifier></resolved></element>features and limitations</reference> and <reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>ex</label></identifier></resolved></element>examples</reference>
of use.<newline/><emphasize>Release 1.2.0 — Daniel Bünzli &lt;daniel.buenzl i@erratique.ch&gt;</emphasize><newline/><title level="3">References</title>
<list><item>Tim Bray.
<emphasize><reference><link>http://www.xml.com/axml/axml.html</link>The annotated XML Specification</reference></emphasize>,
1998.</item><item>Tim Bray et al.
<emphasize><reference><link>http://www.w3.org/TR/xml-names11</link>Namespaces in XML 1.1 (2nd ed.)</reference></emphasize>,
2006.</item></list></doc><comment><title level="1">Basic types and values</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>encoding</type><doc>The type for character encodings. For <code>`UTF_16</code>, endianness is
determined from the
<reference><link>http://www.unicode.org/unicode/faq/utf_bom.html#BOM</link>BOM</reference>.</doc><poly_variant><fixed/><constructor>UTF_8<constant/></constructor><constructor>UTF_16<constant/></constructor><constructor>UTF_16BE<constant/></constructor><constructor>UTF_16LE<constant/></constructor><constructor>ISO_8859_1<constant/></constructor><constructor>US_ASCII<constant/></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>dtd</type><doc>The type for the optional
<reference><link>http://www.w3.org/TR/REC-xml/#dt-doctype</link>DTD</reference>.</doc><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>name</type><doc>The type for attribute and element's
<reference><link>http://www.w3.org/TR/xml-names11/#dt-expname</link>expanded names</reference>
<code>(uri,local)</code>. An empty <code>uri</code> represents a name without a
namespace name, i.e. an unprefixed name
that is not under the scope of a default namespace.</doc><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>attribute</type><doc>The type for attributes. Name and attribute data.</doc><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>name</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>tag</type><doc>The type for an element tag. Tag name and attribute list.</doc><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>name</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>attribute</type></identifier></resolved></path></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type><doc>The type for signals. A <emphasize>well-formed</emphasize> sequence of signals belongs
to the language of the <code>doc</code> grammar :
<precode>doc ::= `Dtd tree
tree ::= `El_start child `El_end
child ::= `Data | tree | epsilon</precode>
Input and output deal only with well-formed sequences or
exceptions are raised.</doc><poly_variant><fixed/><constructor>Dtd<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>dtd</type></identifier></resolved></path></constructor><constructor>El_start<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>tag</type></identifier></resolved></path></constructor><constructor>El_end<constant/></constructor><constructor>Data<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>ns_xml</value><doc>Namespace name <reference><link>http://www.w3.org/XML/1998/namespace</link>value</reference> bound to the
reserved <code>&quot;xml&quot;</code> prefix.</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>ns_xmlns</value><doc>Namespace name <reference><link>http://www.w3.org/2000/xmlns/</link>value</reference> bound to the
reserved <code>&quot;xmlns&quot;</code> prefix.</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value><comment><title level="1">Input</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>pos</type><doc>The type for input positions. Line and column number, both start
with 1.</doc><tuple><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>error</type><doc>The type for input errors.</doc><poly_variant><fixed/><constructor>Max_buffer_size<constant/></constructor><constructor>Unexpected_eoi<constant/></constructor><constructor>Malformed_char_stream<constant/></constructor><constructor>Unknown_encoding<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>Unknown_entity_ref<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>Unknown_ns_prefix<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>Illegal_char_ref<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>Illegal_char_seq<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>Expected_char_seqs<tuple><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></constructor><constructor>Expected_root_element<constant/></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>error_message</value><doc>Converts the error to an english error message.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>error</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><exception><exception><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Error</exception><doc>Raised on input errors.</doc><arguments><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>pos</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>error</type></identifier></resolved></path></arguments></exception><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>source</type><doc>The type for input sources. For <code>`String</code> starts reading at the
given integer position. For <code>`Fun</code> the function must return the
next <emphasize>byte</emphasize> as an <code>int</code> and raise <code>End_of_file</code> if there is no
such byte.</doc><poly_variant><fixed/><constructor>Channel<path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>in_channel</type></resolved></path></constructor><constructor>String<tuple><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></constructor><constructor>Fun<arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type><doc>The type for input abstractions.</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>make_input</value><doc>Returns a new input abstraction reading from the given source.
<list><item><code>enc</code>, character encoding of the document, <reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inenc</label></identifier></resolved></element>details</reference>.
Defaults to <code>None</code>.</item><item><code>strip</code>, strips whitespace in character data, <reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inwspace</label></identifier></resolved></element>details</reference>.
Defaults to <code>false</code>.</item><item><code>ns</code> is called to bind undeclared namespace prefixes,
<reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inns</label></identifier></resolved></element>details</reference>. Default returns always <code>None</code>.</item><item><code>entity</code> is called to resolve non predefined entity references,
<reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inentity</label></identifier></resolved></element>details</reference>. Default returns always <code>None</code>.</item></list></doc><arrow><optional>enc</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>encoding</type></identifier></resolved></path></path><arrow><optional>strip</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>ns</optional><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow><arrow><optional>entity</optional><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>source</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</value><doc>Inputs a signal. Repeated invocation of the function with the same
input abstraction will generate a <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></element>well-formed</reference> sequence
of signals or an <reference><element><resolved><identifier><exception><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Error</exception></identifier></resolved></element></reference> is raised. Furthermore there will be no
two consecutive <code>`Data</code> signals in the sequence and their string
is always non empty.<newline/><bold>Deprecated</bold> After a well-formed sequence was input another may
be input, see <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>eoi</value></identifier></resolved></element></reference> and <reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>iseq</label></identifier></resolved></element>details</reference>.<newline/><bold>Raises</bold> <reference><element><resolved><identifier><exception><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Error</exception></identifier></resolved></element></reference> on input errors.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input_tree</value><doc>If the next signal is a :
<list><item><code>`Data</code> signal, inputs it and invokes <code>data</code> with the character data.</item><item><code>`El_start</code> signal, inputs the sequence of signals until its
matching <code>`El_end</code> and invokes <code>el</code> and <code>data</code> as follows
<list><item><code>el</code>, is called on each <code>`El_end</code> signals with the corresponding
<code>`El_start</code> tag and the result of the callback invocation for the
element's children.</item><item><code>data</code>, is called on each <code>`Data</code> signals with the character data.
This function won't be called twice consecutively or with the empty
string.</item></list></item><item>Other signals, raises <code>Invalid_argument</code>.</item></list><newline/><bold>Raises</bold> <reference><element><resolved><identifier><exception><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Error</exception></identifier></resolved></element></reference> on input errors and <code>Invalid_argument</code>
if the next signal is not <code>`El_start</code> or <code>`Data</code>.</doc><arrow><label>el</label><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>tag</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><var>a</var></arrow></arrow><arrow><label>data</label><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><var>a</var></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></path><var>a</var></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input_doc_tree</value><doc>Same as <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input_tree</value></identifier></resolved></element></reference> but reads a complete <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></element>well-formed</reference>
sequence of signals.<newline/><bold>Raises</bold> <reference><element><resolved><identifier><exception><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Error</exception></identifier></resolved></element></reference> on input errors and <code>Invalid_argument</code>
if the next signal is not <code>`Dtd</code>.</doc><arrow><label>el</label><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>tag</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><var>a</var></arrow></arrow><arrow><label>data</label><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><var>a</var></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>dtd</type></identifier></resolved></path><var>a</var></tuple></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>peek</value><doc>Same as <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></element></reference> but doesn't remove the signal from the sequence.<newline/><bold>Raises</bold> <reference><element><resolved><identifier><exception><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Error</exception></identifier></resolved></element></reference> on input errors.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>eoi</value><doc>Returns <code>true</code> if the end of input is reached. See <reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>iseq</label></identifier></resolved></element>details</reference>.<newline/><bold>Raises</bold> <reference><element><resolved><identifier><exception><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Error</exception></identifier></resolved></element></reference> on input errors.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>pos</value><doc>Current position in the input abstraction.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>pos</type></identifier></resolved></path></arrow></value><comment><title level="1">Output</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>frag</type><doc>The type for deconstructing data structures of type <code>'a</code>.</doc><param>a</param><poly_variant><fixed/><constructor>El<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>tag</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path></tuple></constructor><constructor>Data<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>dest</type><doc>The type for output destinations. For <code>`Buffer</code>, the buffer won't
be cleared. For <code>`Fun</code> the function is called with the output <emphasize>bytes</emphasize> as <code>int</code>s.</doc><poly_variant><fixed/><constructor>Channel<path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>out_channel</type></resolved></path></constructor><constructor>Buffer<path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.xml"><cmti name="Buffer" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/buffer.cmti" digest="a579f4a57e300ec755f84af883c1e51b"/></xml></html></base>Buffer</root></identifier>t</type></resolved></path></constructor><constructor>Fun<arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type><doc>The type for output abstractions.</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>make_output</value><doc>Returns a new output abstraction writing to the given destination.
<list><item><code>decl</code>, if <code>true</code> the <reference><link>http://www.w3.org/TR/REC-xml/#NT-XMLDecl</link>XML
declaration</reference> is output (defaults to <code>true</code>).</item><item><code>nl</code>, if <code>true</code> a newline is output when the root's element <code>`El_end</code>
signal is output.
Defaults to <code>false</code>.</item><item><code>indent</code>, identation behaviour, see <reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>outindent</label></identifier></resolved></element>details</reference>. Defaults to
<code>None</code>.</item><item><code>ns_prefix</code>, undeclared namespace prefix bindings,
see <reference><element><resolved><identifier><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>outns</label></identifier></resolved></element>details</reference>. Default returns always <code>None</code>.</item></list></doc><arrow><optional>decl</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>nl</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>indent</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path><arrow><optional>ns_prefix</optional><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>dest</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</value><doc>Outputs a signal.<newline/><bold>Deprecated.</bold> After a well-formed sequence of signals was output
a new well-formed sequence can be output.<newline/><bold>Raises</bold> <code>Invalid_argument</code> if the resulting signal sequence on
the output abstraction is not <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></element>well-formed</reference> or if a
namespace name could not be bound to a prefix.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output_depth</value><doc><code>output_depth o</code> is <code>o</code>'s current element nesting level (undefined
before the first <code>`El_start</code> and after the last <code>`El_end</code>).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output_tree</value><doc>Outputs signals corresponding to a value by recursively
applying the given value deconstructor.<newline/><bold>Raises</bold> see <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type></identifier></resolved></element></reference>.</doc><arrow><arrow><var>a</var><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>frag</type></identifier></resolved><var>a</var></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type></identifier></resolved></path><arrow><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output_doc_tree</value><doc>Same as <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output_tree</value></identifier></resolved></element></reference> but outputs a complete <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></element>well-formed</reference>
sequence of signals.<newline/><bold>Raises</bold> see <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type></identifier></resolved></element></reference>.</doc><arrow><arrow><var>a</var><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>frag</type></identifier></resolved><var>a</var></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type></identifier></resolved></path><arrow><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>dtd</type></identifier></resolved></path><var>a</var></tuple><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><comment><title level="1"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>sto</label>Functorial interface (deprecated)</title><newline/><bold>WARNING.</bold> The functioral interface is deprecated and will be
removed.<newline/><reference><element><resolved><identifier><module><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Make</module></identifier></resolved></element></reference> allows client to specify types for strings and internal
buffers. Among other things this can be used to perform
hash-consing or to process the character stream, e.g. to normalize
unicode characters or to convert to a custom encoding.</comment><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>std_string</type><path><resolved><identifier><type>string</type></identifier></resolved></path></type><type><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>std_buffer</type><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.xml"><cmti name="Buffer" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/buffer.cmti" digest="a579f4a57e300ec755f84af883c1e51b"/></xml></html></base>Buffer</root></identifier>t</type></resolved></path></type><module_type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type><doc>Input signature for strings.</doc><signature><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type><doc>The type for strings.</doc></type><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>empty</value><doc>The empty string.</doc><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>length</value><doc>Returns the length of the string.</doc><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>append</value><doc>Concatenates two strings.</doc><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>lowercase</value><doc>New string with uppercase letter translated
to lowercase (correctness is only needed for ASCII
<reference><link>http://www.unicode.org/glossary/#code_point</link>code point</reference>).</doc><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>iter</value><doc>Iterates over the unicode
<reference><link>http://www.unicode.org/glossary/#code_point</link>code point</reference>
of the given string.</doc><arrow><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>of_string</value><doc>String from an OCaml string.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>std_string</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>to_utf_8</value><doc><code>to_utf_8 f v s</code>, is <code>f (... (f (f v s1) s2) ...) sn</code>. Where the
concatenation of <code>s1</code>, <code>s2</code>, ... <code>sn</code> is <code>s</code> as an UTF-8 stream.</doc><arrow><arrow><var>a</var><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>std_string</type></identifier></resolved></path><var>a</var></arrow></arrow><arrow><var>a</var><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path><var>a</var></arrow></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>compare</value><doc>String comparison. Binary comparison is sufficent.</doc><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow></value></signature></module_type><module_type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type><doc>Input signature for internal buffers.</doc><signature><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>string</type><doc>The type for strings.</doc></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>t</type><doc>The type for buffers.</doc></type><exception><exception><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>Full</exception><doc>Raised if the buffer cannot be grown.</doc></exception><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>create</value><doc>Creates a buffer of the given size.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>t</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>add_uchar</value><doc>Adds the given (guaranteed valid) unicode
<reference><link>http://www.unicode.org/glossary/#code_point</link>code point</reference> to a
buffer.<newline/><bold>Raises</bold> <reference><element><resolved><identifier><exception><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>Full</exception></identifier></resolved></element></reference> if the buffer cannot be grown.</doc><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>clear</value><doc>Clears the buffer.</doc><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>contents</value><doc>Returns the buffer contents.</doc><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>string</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>length</value><doc>Returns the number of characters contained in the buffer.</doc><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value></signature></module_type><module_type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type><doc>Output signature of <reference><element><resolved><identifier><module><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Make</module></identifier></resolved></element></reference>.</doc><signature><comment><title level="1">Basic types and values</title></comment><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>encoding</type><poly_variant><fixed/><constructor>UTF_8<constant/></constructor><constructor>UTF_16<constant/></constructor><constructor>UTF_16BE<constant/></constructor><constructor>UTF_16LE<constant/></constructor><constructor>ISO_8859_1<constant/></constructor><constructor>US_ASCII<constant/></constructor></poly_variant></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>dtd</type><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></path></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>name</type><tuple><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></tuple></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>attribute</type><tuple><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>name</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></tuple></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>tag</type><tuple><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>name</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>attribute</type></identifier></resolved></path></path></tuple></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>signal</type><poly_variant><fixed/><constructor>Dtd<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>dtd</type></identifier></resolved></path></constructor><constructor>El_start<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>tag</type></identifier></resolved></path></constructor><constructor>El_end<constant/></constructor><constructor>Data<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></constructor></poly_variant></type><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>ns_xml</value><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>ns_xmlns</value><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></value><comment><title level="1">Input</title></comment><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>pos</type><tuple><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>error</type><poly_variant><fixed/><constructor>Max_buffer_size<constant/></constructor><constructor>Unexpected_eoi<constant/></constructor><constructor>Malformed_char_stream<constant/></constructor><constructor>Unknown_encoding<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></constructor><constructor>Unknown_entity_ref<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></constructor><constructor>Unknown_ns_prefix<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></constructor><constructor>Illegal_char_ref<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></constructor><constructor>Illegal_char_seq<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></constructor><constructor>Expected_char_seqs<tuple><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></tuple></constructor><constructor>Expected_root_element<constant/></constructor></poly_variant></type><exception><exception><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>Error</exception><arguments><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>pos</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>error</type></identifier></resolved></path></arguments></exception><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>error_message</value><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>error</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></arrow></value><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>source</type><poly_variant><fixed/><constructor>Channel<path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>in_channel</type></resolved></path></constructor><constructor>String<tuple><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>std_string</type></identifier></resolved></path></tuple></constructor><constructor>Fun<arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></constructor></poly_variant></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</type></type><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>make_input</value><arrow><optional>enc</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>encoding</type></identifier></resolved></path></path><arrow><optional>strip</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>ns</optional><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></path></arrow><arrow><optional>entity</optional><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></path></arrow><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>source</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</value><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>signal</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input_tree</value><arrow><label>el</label><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>tag</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><var>a</var></arrow></arrow><arrow><label>data</label><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path><var>a</var></arrow><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</type></identifier></resolved></path><var>a</var></arrow></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input_doc_tree</value><arrow><label>el</label><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>tag</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><var>a</var></arrow></arrow><arrow><label>data</label><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path><var>a</var></arrow><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</type></identifier></resolved></path><tuple><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>dtd</type></identifier></resolved></path><var>a</var></tuple></arrow></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>peek</value><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>signal</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>eoi</value><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>pos</value><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>input</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>pos</type></identifier></resolved></path></arrow></value><comment><title level="1">Output</title></comment><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>frag</type><param>a</param><poly_variant><fixed/><constructor>El<tuple><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>tag</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path></tuple></constructor><constructor>Data<path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></constructor></poly_variant></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>dest</type><poly_variant><fixed/><constructor>Channel<path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>out_channel</type></resolved></path></constructor><constructor>Buffer<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>std_buffer</type></identifier></resolved></path></constructor><constructor>Fun<arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></constructor></poly_variant></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output</type></type><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>make_output</value><arrow><optional>decl</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>nl</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>indent</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path><arrow><optional>ns_prefix</optional><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>string</type></identifier></resolved></path></path></arrow><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>dest</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output_depth</value><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output</value><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output</type></identifier></resolved></path><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>signal</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output_tree</value><arrow><arrow><var>a</var><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>frag</type></identifier></resolved><var>a</var></path></arrow><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output</type></identifier></resolved></path><arrow><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output_doc_tree</value><arrow><arrow><var>a</var><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>frag</type></identifier></resolved><var>a</var></path></arrow><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>output</type></identifier></resolved></path><arrow><tuple><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type>dtd</type></identifier></resolved></path><var>a</var></tuple><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value></signature></module_type><module><module><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Make</module><doc>Functor building streaming XML IO with the given strings and buffers.</doc><type><functor><argument><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Make</module>String</argument><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>String</module_type></identifier></resolved></argument><argument><argument pos="2"><module><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Make</module>Buffer</argument><with><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Buffer</module_type></identifier></resolved><type><resolved><type><root/>string</type></resolved><path><resolved><type><identifier><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Make</module>String</argument></identifier>t</type></resolved></path></type></with></argument><with><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>S</module_type></identifier></resolved><type><resolved><type><root/>string</type></resolved><path><resolved><type><identifier><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>Make</module>String</argument></identifier>t</type></resolved></path></type></with></functor></type></module><comment><title level="1"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>io</label>Features and limitations</title><newline/>The module assumes strings are immutable, thus strings
the client gives or receives <emphasize>during</emphasize> the input and output process
must not be modified.
<title level="2"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</label>Input</title>
<title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inenc</label>Encoding</title><newline/>The parser supports ASCII, US-ASCII,
<reference><link>http://www.faqs.org/rfcs/rfc3629.html</link>UTF-8</reference>,
<reference><link>http://www.faqs.org/rfcs/rfc2781.html</link>UTF-16</reference>,
<reference><link>http://www.faqs.org/rfcs/rfc2781.html</link>UTF-16LE</reference>,
<reference><link>http://www.faqs.org/rfcs/rfc2781.html</link>UTF-16BE</reference> and
<reference><link>http://anubis.dkuug.dk/JTC1/SC2/WG3/docs/n411.pdf</link>ISO-8559-1</reference>
(Latin-1) encoded documents. But strings returned by
the library are <bold>always</bold> UTF-8 encoded.<newline/>The encoding can be specified explicitly using the optional
argument <code>enc</code>. Otherwise the parser uses UTF-16 or UTF-8 if there is a
<reference><link>http://www.unicode.org/unicode/faq/utf_bom.html#BOM</link>BOM</reference> at the
beginning of the document. If there is no BOM it uses the encoding
specified in the <reference><link>http://www.w3.org/TR/REC-xml/#NT-XMLDecl</link>XML
declaration</reference>. Finally, if there is no XML declaration UTF-8 is assumed.
<title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inwspace</label>White space handling</title><newline/>The parser performs
<reference><link>http://www.w3.org/TR/REC-xml/#AVNormalize</link>attribute data
normalization</reference> on <emphasize>every</emphasize> attribute data. This means that
attribute data does not have leading and trailling white space and that
any white space is collapsed and transformed to a single space
character (<code>U+0020</code>).<newline/>White space handling of character data depends on the <code>strip</code>
argument. If <code>strip</code> is <code>true</code>, character data is treated like
attribute data, white space before and after elements is removed
and any white space is collapsed and transformed to a single
space character (<code>U+0020</code>), except if the data is under the scope of a <emphasize>xml:space</emphasize> attribute whose value is <emphasize>preserve</emphasize>. If <code>strip</code> is
<code>false</code> all white space data is preserved as present in the
document (however all kinds of
<reference><link>http://www.w3.org/TR/REC-xml/#sec-line-ends</link>line ends</reference> are
translated to the newline character (<code>U+000A</code>). <title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inns</label>Namespaces</title><newline/>Xmlm's <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>name</type></identifier></resolved></element>names</reference> are
<reference><link>http://www.w3.org/TR/xml-names11/#dt-expname</link>expanded names</reference>.
The parser automatically handles the document's namespace
declarations. Undeclared namespace prefixes can be bound via the
callback <code>ns</code>, which must return a namespace name. If <code>ns</code> returns
<code>None</code> an <code>`Unknown_ns_prefix</code> error is raised.<newline/>Attributes used for namespace declarations are preserved by the
parser. They are in the <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>ns_xmlns</value></identifier></resolved></element></reference> namespace. Default namespace
declarations made with <italic>xmlns</italic> have the attribute name
<code>(Xmlm.ns_xmlns, &quot;xmlns&quot;)</code>. Prefix declarations have the prefix as
the local name, for example <italic>xmlns:ex</italic> results in the attribute name
<code>(Xmlm.ns_xmlns, &quot;ex&quot;)</code>.<newline/>Regarding constraints on the usage of the <italic>xml</italic> and <italic>xmlns</italic>
prefixes by documents, the parser does not report errors on violations
of the <italic>must</italic> constraints listed in
<reference><link>http://www.w3.org/TR/xml-names11/#xmlReserved</link>this paragraph</reference>.<newline/><title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inentity</label>Character and entity references</title><newline/><reference><link>http://www.w3.org/TR/REC-xml/#dt-charref</link>Character references</reference>
and <reference><link>http://www.w3.org/TR/REC-xml/#sec-predefined-ent</link>predefined
entities</reference> are automatically resolved. Other entity references can
be resolved by the callback <code>entity</code>, which must return an UTF-8
string corresponding to the
replacement character data. The replacement data is <emphasize>not</emphasize>
analysed for further references, it is added to the data as such
modulo white space stripping. If <code>entity</code> returns <code>None</code> the error
<code>`Unknown_entity_ref</code> is returned.<newline/><title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>iseq</label>Sequences of documents (deprecated)</title><newline/><bold>WARNING.</bold> This feature is deprecated and will be removed.<newline/>When a well-formed sequence of signals is input, no data is consumed beyond
the closing <code>'&gt;'</code> of the document's root element.<newline/>If you want to parse a document as
<reference><link>http://www.w3.org/TR/REC-xml/#NT-document</link>defined</reference> in the XML
specification, call <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>eoi</value></identifier></resolved></element></reference> after a well-formed sequence of
signals, it must return <code>true</code>. If you expect another document on
the same input abstraction a new well-formed sequence of signals
can be <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>input</type></identifier></resolved></element></reference>. Use <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>eoi</value></identifier></resolved></element></reference> to check if a document follows (this
may consume data).<newline/>Invoking <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>eoi</value></identifier></resolved></element></reference> after a well-formed sequence of signals skips
whitespaces, comments and processing instructions until it gets to
either an <reference><link>http://www.w3.org/TR/REC-xml/#NT-XMLDecl</link>XML
declaration</reference> or a <reference><link>http://www.w3.org/TR/REC-xml/#dt-doctype</link>DTD</reference>
or the start of a new element or the end of input (in which case
<reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>eoi</value></identifier></resolved></element></reference> returns <code>true</code>). If there is a new document but there is no
XML declaration or the declaration specifies UTF-16, the same
encoding as for the previous document is used.<newline/><title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>inmisc</label>Miscellaneous</title>
<list><item>Parses the more liberal and simpler XML 1.1
<reference><link>http://www.w3.org/TR/xml11/#NT-Name</link>Name</reference> definition (minus <code>':'</code> because
of namespaces).</item><item>The <reference><link>http://www.w3.org/TR/REC-xml/#dt-doctype</link>DTD</reference> is parsed
roughly (no guarantee it is well formed) and its information is ignored.</item><item>The parser drops
<reference><link>http://www.w3.org/TR/REC-xml/#dt-comment</link>comments</reference>,
<reference><link>http://www.w3.org/TR/REC-xml/#dt-pi</link>processing instructions</reference>, and
<reference><link>http://www.w3.org/TR/REC-xml/#sec-rmd</link>standalone declaration</reference>.</item><item>Element attributes are not checked for uniqueness.</item><item>Attribute and character data chunks are limited by
<code>Sys.max_string_length</code>.
The error <code>`Max_buffer_size</code> is raised if the limit is hit.</item><item>Tail recursive.</item><item>Non validating.</item></list><newline/><title level="2"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</label>Output</title>
<title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>outenc</label>Encoding</title><newline/>Outputs only <reference><link>http://www.faqs.org/rfcs/rfc3629.html</link>UTF-8</reference>
encoded documents. Strings given to
output functions <bold>must be</bold> UTF-8 encoded, no checks are
performed. Unicode characters that are not legal XML
<reference><link>http://www.w3.org/TR/REC-xml/#NT-Char</link>characters</reference> are replaced
by the <reference><link>http://unicode.org/glossary/#replacement_character</link>Unicode
replacement character</reference>.<newline/><title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>outns</label>Namespaces</title><newline/>Xmlm's <reference><link>#TYPEname</link>names</reference> are
<reference><link>http://www.w3.org/TR/xml-names11/#dt-expname</link>expanded names</reference>.
Expanded names are automatically converted to
<reference><link>http://www.w3.org/TR/xml-names11/#dt-qualname</link>qualified
names</reference> by the output abstraction. There is no particular api to specify
prefixes and default namespaces,
the actual result depends solely on the output
of attributes belonging to the <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>ns_xmlns</value></identifier></resolved></element></reference> namespace. For example to set
the default namespace of an element to <italic>http://example.org/myns</italic>,
use the following attribute :
<precode>(* xmlns='http://example.org/myns' *)
let default_ns = (Xmlm.ns_xmlns, &quot;xmlns&quot;), &quot;http://example.org/myns&quot;</precode>
To bind the prefix <code>&quot;ex&quot;</code> to <italic>http://example.org/ex</italic>, use the
following attribute :
<precode>(* xmlns:ex='http://example.org/ex' *)
let ex_ns = (Xmlm.ns_xmlns, &quot;ex&quot;), &quot;http://example.org/ex&quot;</precode>
Note that outputing input signals without
touching namespace declaration attributes will preserve existing
prefixes and bindings provided the same namespace name is not
bound to different prefixes in a given context.<newline/>The callback <code>ns_prefix</code> of an output abstraction can be used to
give a prefix to a namespace name lacking a prefix binding in the
current output scope. Given a namespace name the function must return
the prefix to use. Note that this
will <bold>not</bold> add any namespace declaration attribute to the
output. If the function returns <code>None</code>, <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>output</type></identifier></resolved></element></reference> will raise
<code>Invalid_argument</code>. The default function returns always <code>None</code>.
<title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>outindent</label>Indentation</title><newline/>Output can be indented by specifying the <code>indent</code> argument when an
output abstraction is created. If <code>indent</code> is <code>None</code> (default)
signal output does not introduce any extra white space. If
<code>ident</code> is <code>Some c</code>, each <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>signal</type></identifier></resolved></element></reference> is output on its own line
(for empty elements <code>`El_start</code> and <code>`El_end</code> are collapsed on a single
line) and nested elements are indented with <code>c</code> space
characters.<newline/><title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>oseq</label>Sequences of documents (deprecated)</title><newline/><bold>WARNING.</bold> This feature is deprecated and will be removed.<newline/>After a well-formed sequence of signals was output, the output
abstraction can be reused to output a new well-formed sequence of
signals.<newline/><title level="3"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>outmisc</label>Miscellaneous</title>
<list><item>Output on a channel does not flush it.</item><item>In attribute and character data you provide, markup
delimiters <code>'&lt;'</code>,<code>'&gt;'</code>,<code>'&amp;'</code>, and <code>'\&quot;'</code> are
automatically escaped to
<reference><link>http://www.w3.org/TR/REC-xml/#sec-predefined-ent</link>predefined
entities</reference>.</item><item>No checks are peformed on the prefix and local part of output
names to verify they are
<reference><link>http://www.w3.org/TR/xml-names11/#NT-NCName</link>NCName</reference>s.
For example using the tag name <code>(&quot;&quot;,&quot;dip d&quot;)</code> will produce
a non well-formed document because of the space character.</item><item>Tail recursive.</item></list><newline/><title level="2">Tips</title>
<list><item>The best options to do an input/output round trip
and preserve as much information as possible is to
input with <code>strip = false</code> and output with <code>indent = None</code>.</item><item>Complete whitespace control on output is achieved
with <code>indent = None</code> and suitable <code>`Data</code> signals</item></list><newline/><title level="1"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>ex</label>Examples</title><newline/><title level="2"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>exseq</label>Sequential processing</title><newline/>Sequential processing has the advantage that you don't need to get
the whole document tree in memory to process it.<newline/>The following function reads a <emphasize>single</emphasize> document on an
input channel and outputs it.
<precode>let id ic oc = 
  let i = Xmlm.make_input (`Channel ic) in 
  let o = Xmlm.make_output (`Channel oc) in 
  let rec pull i o depth = 
    Xmlm.output o (Xmlm.peek i);
    match Xmlm.input i with 
    | `El_start _ -&gt; pull i o (depth + 1)
    | `El_end -&gt; if depth = 1 then () else pull i o (depth - 1)
    | `Data _ -&gt; pull i o depth 
    | `Dtd _ -&gt; assert false
  in
  Xmlm.output o (Xmlm.input i); (* `Dtd *)
  pull i o 0;
  if not (Xmlm.eoi i) then invalid_arg &quot;document not well-formed&quot;</precode><newline/>The following function reads a <emphasize>sequence</emphasize> of documents on an
input channel and outputs it.
<precode>let id_seq ic oc = 
  let i = Xmlm.make_input (`Channel ic) in 
  let o = Xmlm.make_output ~nl:true (`Channel oc) in 
  while not (Xmlm.eoi i) do Xmlm.output o (Xmlm.input i) done</precode>
The following function reads a <emphasize>sequence</emphasize> of documents on the
input channel. In each document's tree it prunes non root elements
whose name belongs to <code>prune_list</code>.
<precode>let prune_docs prune_list ic oc = 
  let i = Xmlm.make_input (`Channel ic) in
  let o = Xmlm.make_output ~nl:true (`Channel oc) in
  let copy i o = Xmlm.output o (Xmlm.input i) in
  let prune (name, _) = List.mem name prune_list in
  let rec process i o d = 
    let rec skip i d = match Xmlm.input i with
    | `El_start _ -&gt; skip i (d + 1)
    | `El_end -&gt; if d = 1 then () else skip i (d - 1)
    | s -&gt; skip i d
    in
    match Xmlm.peek i with 
    | `El_start tag when prune tag -&gt; skip i 0; process i o d
    | `El_start _ -&gt; copy i o; process i o (d + 1)
    | `El_end -&gt; copy i o; if d = 0 then () else process i o (d - 1)
    | `Data _ -&gt; copy i o; process i o d
    | `Dtd _ -&gt; assert false
  in
  let rec docs i o = 
    copy i o; (* `Dtd *)
    copy i o; (* root start *)
    process i o 0;
    if Xmlm.eoi i then () else docs i o
  in
  docs i o</precode><newline/><title level="2"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>extree</label>Tree processing</title><newline/>A document's sequence of signals can be easily converted
to an arborescent data structure. Assume your trees are defined by :
<precode>type tree = E of Xmlm.tag * tree list | D of string</precode>
The following functions input/output xml documents from/to abstractions
as value of type <code>tree</code>.
<precode>let in_tree i = 
  let el tag childs = E (tag, childs)  in
  let data d = D d in
  Xmlm.input_doc_tree ~el ~data i

let out_tree o t = 
  let frag = function
  | E (tag, childs) -&gt; `El (tag, childs) 
  | D d -&gt; `Data d 
  in
  Xmlm.output_doc_tree frag o t</precode><newline/><title level="2"><label><root><base><xml src="index.xml"><cmti name="Xmlm" src="/home/dsheets/.opam/doc/build/xmlm.1.2.0/_build/src/xmlm.cmti" digest="4d5ef5e09c300c06b4a0d20d2f202e97"/></xml></base>Xmlm</root>exrow</label>Tabular data processing</title><newline/>We show how to process XML data that represents tabular data (some
people like do that).<newline/>The file we need to deal with represents nominal data about
<reference><link>http://www.w3.org/</link>W3C bureaucrats</reference>. There are no namespaces
and attributes are ignored. The element structure of the document
is :
<list><item>&lt;list&gt;
<list><item>&lt;bureaucrat&gt; represents a W3C bureaucrat
(zero or more).<newline/>A bureaucrat contains the following elements, in order.
<list><item>&lt;name&gt; its name (mandatory, string).</item><item>&lt;surname&gt; its surname (mandatory, string).</item><item>&lt;honest&gt; present iff he implemented one of its spec
(optional, empty).</item><item>&lt;obfuscation_level&gt; its grade on the
open scale of obfuscation (mandatory, float).</item><item>&lt;tr&gt; (zero or more, string), technical reports he
worked on.</item></list></item></list></item></list><newline/>In OCaml we represent a W3C bureaucrat by this type :
<precode>type w3c_bureaucrat = { 
    name : string; 
    surname : string; 
    honest : bool; 
    obfuscation_level : float;
    trs : string list; }</precode>
The following functions input and output W3C bureaucrats as lists
of values of type <code>w3c_bureaucrat</code>.
<precode>let in_w3c_bureaucrats src = 
  let i = Xmlm.make_input ~strip:true src in
  let tag n = (&quot;&quot;, n), [] in
  let error () = invalid_arg &quot;parse error&quot; in
  let accept s i = if Xmlm.input i = s then () else error () in
  let rec i_seq el acc i = match Xmlm.peek i with 
  | `El_start _ -&gt; i_seq el ((el i) :: acc) i
  | `El_end -&gt; List.rev acc
  | _ -&gt; error ()
  in
  let i_el n i = 
    accept (`El_start (tag n)) i;
    let d = match Xmlm.peek i with
    | `Data d -&gt; ignore (Xmlm.input i); d
    | `El_end -&gt; &quot;&quot;
    | _ -&gt; error ()
    in
    accept (`El_end) i;
    d
  in
  let i_bureaucrat i = 
    try
      accept (`El_start (tag &quot;bureaucrat&quot;)) i;
      let name = i_el &quot;name&quot; i in
      let surname = i_el &quot;surname&quot; i in
      let honest = match Xmlm.peek i with
      | `El_start ((&quot;&quot;, &quot;honest&quot;), []) -&gt; ignore (i_el &quot;honest&quot; i); true
      | _ -&gt; false
      in
      let obf = float_of_string (i_el &quot;obfuscation_level&quot; i) in
      let trs = i_seq (i_el &quot;tr&quot;) [] i in
      accept (`El_end) i;
      { name = name; surname = surname; honest = honest; 
        obfuscation_level = obf; trs = trs }
    with
    | Failure _ -&gt; error () (* float_of_string *)
  in
  accept (`Dtd None) i;
  accept (`El_start (tag &quot;list&quot;)) i;
  let bl = i_seq i_bureaucrat [] i in
  accept (`El_end) i;
  if not (Xmlm.eoi i) then invalid_arg &quot;more than one document&quot;;
  bl

let out_w3c_bureaucrats dst bl = 
  let tag n = (&quot;&quot;, n), [] in
  let o = Xmlm.make_output ~nl:true ~indent:(Some 2) dst in
  let out = Xmlm.output o in
  let o_el n d = 
    out (`El_start (tag n)); 
    if d &lt;&gt; &quot;&quot; then out (`Data d); 
    out `El_end 
  in
  let o_bureaucrat b = 
    out (`El_start (tag &quot;bureaucrat&quot;));
    o_el &quot;name&quot; b.name;
    o_el &quot;surname&quot; b.surname;
    if b.honest then o_el &quot;honest&quot; &quot;&quot;;
    o_el &quot;obfuscation_level&quot; (string_of_float b.obfuscation_level);
    List.iter (o_el &quot;tr&quot;) b.trs;
    out `El_end
  in
  out (`Dtd None);
  out (`El_start (tag &quot;list&quot;));
  List.iter o_bureaucrat bl;
  out (`El_end)</precode></comment></unit>