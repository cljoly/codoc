<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></html></base>Cudf_checker</root><digest>1c36a0fedb6769c72b63b1c414e2192d</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Cudf<digest>96758eeba4c5ad5c2939e119b23320c6</digest></import><import>Cudf_types<digest>22cf93bcf40ff0d52823351ba0f5f0cb</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>cudf_checker.mli</file><dir>/home/dsheets/.opam/doc/build/cudf.0.7/_build</dir><digest>660a50511abad2c846cf6c7735267804</digest></source><doc>Checkers for CUDF documents<newline/>Consistency and problem-solution matching.</doc><type><type><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>inconsistency_reason</type><poly_variant><fixed/><constructor>Unsat_dep<tuple><tuple><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>pkgname</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>version</type></resolved></path></tuple><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkgformula</type></resolved></path></tuple></constructor><constructor>Conflict<tuple><tuple><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>pkgname</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>version</type></resolved></path></tuple><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkglist</type></resolved></path></tuple></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>bad_solution_reason</type><poly_variant><fixed/><type><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>inconsistency_reason</type></identifier></resolved></path></type><constructor>Missing_install<path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkglist</type></resolved></path></constructor><constructor>Missing_upgrade<path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkglist</type></resolved></path></constructor><constructor>Unremoved<path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkglist</type></resolved></path></constructor><constructor>Downgrade<path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkglist</type></resolved></path></constructor><constructor>Multi_upgrade<path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>pkgname</type></resolved></path></path></constructor><constructor>Not_kept<tuple><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>pkgname</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>version</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>enum_keep</type></resolved></path></tuple></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>explain_reason</value><doc>provide a string explaining a given reason, meant for error messages</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>bad_solution_reason</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>satisfy_formula</value><doc>check whether a given package formula is satisfied by a given
package status<return><code>true, []</code> if the formula is satisfied; <code>false, f</code>
otherwise, where f is a sub-formula of the input denoting an
unsatisfiable formula (ideally, a witness of the unsatisfiability
of the input formula)</return></doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkgformula</type></resolved></path><tuple><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkgformula</type></resolved></path></tuple></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>disjoint</value><doc>check whether a package list is not satisfied by a given package
status<return><code>true, []</code> if the list is disjoint; <code>false, l</code>
otherwise, where l is a list of packages satisfied by the universe
(ideally, the reason of the non-disjointness)</return></doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><arrow><optional>ignore</optional><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>package</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkglist</type></resolved></path><tuple><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>vpkglist</type></resolved></path></tuple></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>is_consistent</value><doc><return><code>true, None</code> if the given installation is consistent,
<code>false, Some r</code> otherwise, where r is the inconsistency reason</return></doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><tuple><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>inconsistency_reason</type></identifier></resolved></path></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>is_solution</value><doc><code>is_solution (status, req) sol</code> checks whether <code>sol</code> fulfills the CUDF
upgrade scenario described by <code>(status, req)</code><newline/><bold>Note</bold>: the <code>sol</code> package universe must contain all relevant package
metadata (e.g. Depends, Conflicts, etc.), copied from <code>status</code>, a compact
universe only containing package names and versions won't be enough. To
load compact universes see <reference><element><resolved><value><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_parser/index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root></identifier>load_solution</value></resolved></element></reference>.<newline/><bold>Note</bold>: in accordance with CUDF semantics, for a solution to be valid,
the solution shall correspond to a consistent universe. A solution that
does satisfy user request, but at the same time proposes an inconsistent
universe (as per <reference><element><resolved><value><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_checker/index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root></identifier>is_consistent</value></resolved></element></reference>) will be reported by
<code>is_solution</code> as not being a valid solution.<return><code>true, []</code> if this is the case, <code>false, l</code>
otherwise, where r explains why the solution is bad</return></doc><arrow><tuple><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>request</type></resolved></path></tuple><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><tuple><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_checker" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_checker.cmti" digest="1c36a0fedb6769c72b63b1c414e2192d"/></xml></base>Cudf_checker</root>bad_solution_reason</type></identifier></resolved></path></path></tuple></arrow></arrow></value></unit>