<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></html></base>Cudf_parser</root><digest>ce5575fb6a3e03be4eaf9c5a57153117</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Cudf<digest>96758eeba4c5ad5c2939e119b23320c6</digest></import><import>Cudf_conf<digest>9832b1a88497b989cdc24edb1d0d2d0b</digest></import><import>Cudf_types<digest>22cf93bcf40ff0d52823351ba0f5f0cb</digest></import><import>Enum<digest>c6a721b94dd09df685682bcf714ce089</digest></import><import>IO<digest>d305778c3ff399200af445abf45c03b5</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Scanf<digest>31f1631ff7e3da78eabf4b08e91d2861</digest></import><source><file>cudf_parser.mli</file><dir>/home/dsheets/.opam/doc/build/cudf.0.7/_build</dir><digest>76d9f77ace050ade03db03a9d1f995b9</digest></source><doc>Parser for CUDF related documents</doc><type><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type><doc>a CUDF parser opened on some input source</doc></type><exception><exception><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>Parse_error</exception><doc>Error during parsing (syntax error, type error, ...). Arguments are error
message and error location.</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>loc</type></resolved></path></arguments></exception><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>from_in_channel</value><doc>create a CUDF parser reading data from an input channel<param><name>typedecl</name>(initial) per-stanza and per-property type declarations to
be used while parsing. Default: <reference><element><dot><root>Cudf_conf</root>stanza_typedecl</dot></element></reference></param></doc><arrow><optional>typedecl</optional><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_conf/index.xml"><cmti name="Cudf_conf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_conf.cmti" digest="9832b1a88497b989cdc24edb1d0d2d0b"/></xml></base>Cudf_conf</root></identifier>stanza_typedecl</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>in_channel</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>from_IO_in_channel</value><doc>create a CUDF parser reading data from an Extlib input channel<param><name>typedecl</name>(initial) per-stanza and per-property type declarations to
be used while parsing. Default: <reference><element><dot><root>Cudf_conf</root>stanza_typedecl</dot></element></reference></param></doc><arrow><optional>typedecl</optional><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_conf/index.xml"><cmti name="Cudf_conf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_conf.cmti" digest="9832b1a88497b989cdc24edb1d0d2d0b"/></xml></base>Cudf_conf</root></identifier>stanza_typedecl</type></resolved></path><arrow><path><dot><resolved><identifier><root><base><xml src="../../../merlin.2.1.1/src/frontend/IO/index.xml"><cmti name="IO" src="/home/dsheets/.opam/doc/build/merlin.2.1.1/src/frontend/IO.cmti" digest="7267f0ea7198d1a290a67b58fea13b94"/></xml></base>IO</root></identifier></resolved>input</dot></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>from_file</value><doc>create a CUDF parser reading data from a file<param><name>typedecl</name>as per <reference><element><dot><root>Cudf_parser</root>from_in_channel</dot></element></reference></param></doc><arrow><optional>typedecl</optional><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_conf/index.xml"><cmti name="Cudf_conf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_conf.cmti" digest="9832b1a88497b989cdc24edb1d0d2d0b"/></xml></base>Cudf_conf</root></identifier>stanza_typedecl</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>close</value><doc>Dispose a CUDF parser.<newline/>Afterwards, the parser should not be used any longer</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><comment><title level="6">Full CUDF document parsing</title><newline/>&quot;parse_*&quot; functions offer plain syntax parsing, with no semantic
interpretation of what is being parsed. &quot;load_*&quot; functions offer
the latter, hence also checking for semantic constraints (such as
the lack of key duplication).<newline/>All full parsing function are granted to raise only
<reference><element><resolved><exception><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_parser/index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root></identifier>Parse_error</exception></resolved></element></reference>; finer grained exception are mapped to it.</comment><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>parse</value><doc>parse a CUDF document (or a universe) as a whole<return>a triple <code>preamble, packages, request</code> where preamble and request
are returned only if actually met in the parsed document. Note that a
document with no request part is not a valid CUDF document (but might still
be used to represent solver solutions, for instance).</return><raise><name>Parse_error</name>when an error during parsing is encountered (might be a
syntax error, a type error, ..)</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path><tuple><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>preamble</type></resolved></path></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>package</type></resolved></path></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>request</type></resolved></path></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>load</value><doc>same as <reference><element><resolved><value><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_parser/index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root></identifier>parse</value></resolved></element></reference>, but additionally loads the package
list as an abstract <reference><element><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></element></reference>.<newline/><bold>Note</bold>: to load compact universes (i.e. only containing package names,
versions, and installed status) that will be tested as solutions you should
use <reference><element><resolved><value><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_parser/index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root></identifier>load_solution</value></resolved></element></reference> instead: the present function does not
expand missing metadata with respect to the initial status.<raise><name>Parse_error</name>as <reference><element><dot><root>Cudf_parser</root>parse</dot></element></reference> does</raise><raise><name>Cudf.Constraint_violation</name>as <reference><element><dot><root>Cudf</root>load_universe</dot></element></reference> does</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path><tuple><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>preamble</type></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>request</type></resolved></path></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>load_solution</value><doc>Load a solution wrt to a given CUDF document, whose universe is given.<newline/>Solution format is as per Appendix B of CUDF 2.0 spec<raise><name>Parse_error</name>as <reference><element><dot><root>Cudf_parser</root>parse</dot></element></reference> does</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><tuple><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>preamble</type></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path></tuple></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>parse_from_file</value><doc>Shorthand: parse a file given its name</doc><arrow><optional>typedecl</optional><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_conf/index.xml"><cmti name="Cudf_conf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_conf.cmti" digest="9832b1a88497b989cdc24edb1d0d2d0b"/></xml></base>Cudf_conf</root></identifier>stanza_typedecl</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><tuple><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>preamble</type></resolved></path></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>package</type></resolved></path></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>request</type></resolved></path></path></tuple></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>load_from_file</value><doc>Shorthand: load from a file given its name</doc><arrow><optional>typedecl</optional><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_conf/index.xml"><cmti name="Cudf_conf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_conf.cmti" digest="9832b1a88497b989cdc24edb1d0d2d0b"/></xml></base>Cudf_conf</root></identifier>stanza_typedecl</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><tuple><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>preamble</type></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>request</type></resolved></path></path></tuple></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>load_solution_from_file</value><doc>Shorthand: load a solution from a file given its name</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path><tuple><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>preamble</type></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>universe</type></resolved></path></tuple></arrow></arrow></value><comment><title level="6">Item-by-item CUDF parsing</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>parse_item</value><doc>Parse the next information item (either a package description, a user
request, or a preamble) from the given input channel.<newline/>Beware that parsing is stateful; in particular when the preamble is parsed,
the list of allowed properties for future package stanzas is internally
updated.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf/index.xml"><cmti name="Cudf" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf.cmti" digest="96758eeba4c5ad5c2939e119b23320c6"/></xml></base>Cudf</root></identifier>cudf_item</type></resolved></path></arrow></value><comment><title level="6">Low-level parsing functions</title><newline/>The following parsing function usually raise fine grained exceptions such
as <reference><element><resolved><exception><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>Syntax_error</exception></resolved></element></reference> and <reference><element><resolved><exception><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>Type_error</exception></resolved></element></reference>.</comment><type><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>loc_map</type><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>loc</type></resolved></path></tuple></path></type><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>parse_stanza</value><doc>Parse a file stanza (i.e., a RFC822-like stanza, with the notable
simplification that all field/value pairs are one-liners). Strip
any heading blanks lines leading to the first available
field/value pair.<return>an associative list mapping field name to field values and a
location map mapping field names to locations</return><raise><name>End_of_file</name>if no other stanza is available due to reached EOF</raise><raise><name>Cudf_types.Syntax_error</name>when a syntax error is encountered</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>cudf_parser</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>loc_map</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>stanza</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>type_check_stanza</value><doc>Type check an untyped stanza according to a given set of type declarations.
Also take care of default values, adding missing properties where needed;
fail if a required property is missing.<param><name>loc</name>location map from prop name to locations, default is None
(i.e. use dummy locations)</param><raise><name>Syntax_error</name>if a property does not match its declared type; this
exception is also raised when an undeclared property is encountered</raise><raise><name>Type_error</name>when a property has a value of the wrong type</raise></doc><arrow><optional>locs</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_parser" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_parser.cmti" digest="ce5575fb6a3e03be4eaf9c5a57153117"/></xml></base>Cudf_parser</root>loc_map</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>stanza</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>typedecl</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>stanza</type></resolved><path><resolved><type><identifier><root><base><xml src="../../../cudf.0.7/_build/cudf_types/index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root></identifier>typed_value</type></resolved></path></path></arrow></arrow></arrow></value></unit>