<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></html></base>Cudf_types</root><digest>22cf93bcf40ff0d52823351ba0f5f0cb</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>cudf_types.mli</file><dir>/home/dsheets/.opam/doc/build/cudf.0.7/_build</dir><digest>939e12c8a42eb2e314c85f7f93916e22</digest></source><doc>CUDF type library<newline/>Implement core CUDF types (see CUDF spec. ยง2.2.2).<newline/>For parsing and pretty printing of CUDF types see <reference><element><root>Cudf_types_pp</root></element></reference>.</doc><comment><title level="5">CUDF types</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>version</type><path><resolved><identifier><type>int</type></identifier></resolved></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>relop</type><poly_variant><fixed/><constructor>Eq<constant/></constructor><constructor>Neq<constant/></constructor><constructor>Geq<constant/></constructor><constructor>Gt<constant/></constructor><constructor>Leq<constant/></constructor><constructor>Lt<constant/></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>constr</type><path><resolved><identifier><type>option</type></identifier></resolved><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>relop</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>version</type></identifier></resolved></path></tuple></path></type><comment><title level="6">CUDF spec. types</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>pkgname</type><path><resolved><identifier><type>string</type></identifier></resolved></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkg</type><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>pkgname</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>constr</type></identifier></resolved></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkglist</type><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkg</type></identifier></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>enum_keep</type><poly_variant><fixed/><constructor>Keep_version<constant/></constructor><constructor>Keep_package<constant/></constructor><constructor>Keep_feature<constant/></constructor><constructor>Keep_none<constant/></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkgformula</type><doc>CNF formula. Inner lists are OR-ed, outer AND-ed.
E.g.:<list><item>&quot;Depends: foo, baz | baz&quot; --&gt; <code>[ foo ] ; [ bar ; baz ]</code></item><item>&quot;Depends: true!&quot; --&gt; <code></code></item><item>&quot;Depends: false!&quot; --&gt; <code>[]</code></item></list></doc><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkg</type></identifier></resolved></path></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>veqpkg</type><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>pkgname</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><tuple><poly_variant><fixed/><constructor>Eq<constant/></constructor></poly_variant><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>version</type></identifier></resolved></path></tuple></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>veqpkglist</type><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>veqpkg</type></identifier></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typ</type><doc>CUDF types</doc><poly_variant><fixed/><constructor>Int<constant/></constructor><constructor>Posint<constant/></constructor><constructor>Nat<constant/></constructor><constructor>Bool<constant/></constructor><constructor>String<constant/></constructor><constructor>Enum<path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></constructor><constructor>Pkgname<constant/></constructor><constructor>Ident<constant/></constructor><constructor>Vpkg<constant/></constructor><constructor>Vpkgformula<constant/></constructor><constructor>Vpkglist<constant/></constructor><constructor>Veqpkg<constant/></constructor><constructor>Veqpkglist<constant/></constructor><constructor>Typedecl<constant/></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>keep_type</value><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typ</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>keep_enums</value><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></value><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl1</type><doc>(Single) type declaration: each variant denotes a type, its argument the
default value, None if missing</doc><poly_variant><fixed/><constructor>Int<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></constructor><constructor>Posint<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></constructor><constructor>Nat<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></constructor><constructor>Bool<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></constructor><constructor>String<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></constructor><constructor>Pkgname<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></constructor><constructor>Ident<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></constructor><constructor>Enum<tuple><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></tuple></constructor><constructor>Vpkg<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkg</type></identifier></resolved></path></path></constructor><constructor>Vpkgformula<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkgformula</type></identifier></resolved></path></path></constructor><constructor>Vpkglist<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkglist</type></identifier></resolved></path></path></constructor><constructor>Veqpkg<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>veqpkg</type></identifier></resolved></path></path></constructor><constructor>Veqpkglist<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>veqpkglist</type></identifier></resolved></path></path></constructor><constructor>Typedecl<path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl</type></identifier></resolved></path></path></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl</type><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl1</type></identifier></resolved></path></tuple></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typed_value</type><doc>Typed value in the value space of all CUDF types</doc><poly_variant><fixed/><constructor>Int<path><resolved><identifier><type>int</type></identifier></resolved></path></constructor><constructor>Posint<path><resolved><identifier><type>int</type></identifier></resolved></path></constructor><constructor>Nat<path><resolved><identifier><type>int</type></identifier></resolved></path></constructor><constructor>Bool<path><resolved><identifier><type>bool</type></identifier></resolved></path></constructor><constructor>String<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>Pkgname<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>Ident<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>Enum<tuple><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></constructor><constructor>Vpkg<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkg</type></identifier></resolved></path></constructor><constructor>Vpkgformula<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkgformula</type></identifier></resolved></path></constructor><constructor>Vpkglist<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkglist</type></identifier></resolved></path></constructor><constructor>Veqpkg<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>veqpkg</type></identifier></resolved></path></constructor><constructor>Veqpkglist<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>veqpkglist</type></identifier></resolved></path></constructor><constructor>Typedecl<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl</type></identifier></resolved></path></constructor></poly_variant></type><comment><title level="5">Manipulation of typed values</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>type_of_typedecl</value><doc>extract the type of a (single) type declaration</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl1</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typ</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl_of_value</value><doc>Create a (single) type declaration having as default value the given typed
value (i.e. apply the &quot;Some&quot; monad to typed values)</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typed_value</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl1</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>value_of_typedecl</value><doc>Extract the default value from a type declaration (or return <code>None</code>)</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl1</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typed_value</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl_of_type</value><doc>Create a (single) type declaration with no default value</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typ</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typedecl1</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>type_of_value</value><doc><return>the type of a given value</return></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typed_value</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typ</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>cast</value><doc><code>cast ty v</code> attempt a runtime cast of a given (typed) value to a different
type.<raise><name>Type_error</name>if casting is not possible</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typ</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typed_value</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typed_value</type></identifier></resolved></path></arrow></arrow></value><comment><title level="6">CUDF syntactic types</title><newline/>Types used in parsing, before values are injected into the CUDF type
system.</comment><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>stanza</type><doc>RFC-822-like stanza, i.e. an associative list mapping property names to
property values.<newline/>Values are typed according to the type variable <code>'ty</code>. Usually, libCUDF
uses either <code>string stanza</code> (for untyped stanzas) or
<code>Cudf_types.typed_value stanza</code> (for typed stanzas).</doc><param>ty</param><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><var>ty</var></tuple></path></type><stop/><comment><title level="5">Parsing helpers</title><newline/>Used internally for pasring, generally otherwise uninteresting.</comment><type><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type><doc>Range in a file being parsed</doc><tuple><path><resolved><type><identifier><root><base><html src="../../../ocaml.4.02.1+doc/stdlib/lexing/index.html"><xml src="../../../ocaml.4.02.1+doc/stdlib/lexing/index.xml"><cmti name="Lexing" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/lexing.cmti" digest="1be6a5484fb3cfb69d2c981438a7be62"/></xml></html></base>Lexing</root></identifier>position</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../ocaml.4.02.1+doc/stdlib/lexing/index.html"><xml src="../../../ocaml.4.02.1+doc/stdlib/lexing/index.xml"><cmti name="Lexing" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/lexing.cmti" digest="1be6a5484fb3cfb69d2c981438a7be62"/></xml></html></base>Lexing</root></identifier>position</type></resolved></path></tuple></type><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>dummy_loc</value><doc>Dummy location, pointing nowhere, going nowhere, ...</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>extend_loc</value><doc><code>extend_range (p1, _) (_, p2)</code> return <code>(p1, p2)</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc_of_lexbuf</value><doc>Get file range corresponding to the last read token</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../ocaml.4.02.1+doc/stdlib/lexing/index.html"><xml src="../../../ocaml.4.02.1+doc/stdlib/lexing/index.xml"><cmti name="Lexing" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/lexing.cmti" digest="1be6a5484fb3cfb69d2c981438a7be62"/></xml></html></base>Lexing</root></identifier>lexbuf</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type></identifier></resolved></path></arrow></value><stop/><comment><title level="5">Various errors</title></comment><exception><exception><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>Parse_error_822</exception><doc>Error while parsing RFC822-like syntax of CUDF documents.<newline/>arguments: error message and file range, respectively.</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type></identifier></resolved></path></arguments></exception><exception><exception><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>Syntax_error</exception><doc>Syntax error while parsing some literal value<newline/>arguments: error message and file range, respectively</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type></identifier></resolved></path></arguments></exception><exception><exception><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>Type_error</exception><doc>Type error: mismatch between typed value and expected type<newline/>arguments: expected type, found value</doc><arguments><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typ</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>typed_value</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>loc</type></identifier></resolved></path></arguments></exception><comment><title level="5">Accessors, predicates, etc.</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>is_eq_formula</value><doc>Check whether a formula uses only equality tests over package versions.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cudf_types" src="/home/dsheets/.opam/doc/build/cudf.0.7/_build/cudf_types.cmti" digest="22cf93bcf40ff0d52823351ba0f5f0cb"/></xml></base>Cudf_types</root>vpkgformula</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value></unit>