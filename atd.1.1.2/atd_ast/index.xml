<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></html></base>Atd_ast</root><digest>69ddbb83d523c17608d0b979a3956dc7</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>atd_ast.mli</file><dir>/home/dsheets/.opam/doc/build/atd.1.1.2</dir><digest>e871ceec78db0a1c0a1a9ae425ba36fd</digest></source><doc>Abstract syntax tree (AST) representing ATD data</doc><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type><doc>A location in the source code.</doc><tuple><path><resolved><type><identifier><root><base><html src="../../ocaml.4.02.1+doc/stdlib/lexing/index.html"><xml src="../../ocaml.4.02.1+doc/stdlib/lexing/index.xml"><cmti name="Lexing" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/lexing.cmti" digest="1be6a5484fb3cfb69d2c981438a7be62"/></xml></html></base>Lexing</root></identifier>position</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../ocaml.4.02.1+doc/stdlib/lexing/index.html"><xml src="../../ocaml.4.02.1+doc/stdlib/lexing/index.xml"><cmti name="Lexing" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/lexing.cmti" digest="1be6a5484fb3cfb69d2c981438a7be62"/></xml></html></base>Lexing</root></identifier>position</type></resolved></path></tuple></type><exception><exception><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>Atd_error</exception><doc>Exception raised by functions of the <code>atd</code> library and indicating
errors.</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></exception><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type><doc>An annotation, consisting of a sequence of sections.
<reference><element><root>Atd_annot</root></element></reference> provides utilities for handling annotations.</doc><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot_section</type></identifier></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot_section</type><doc>represents a single annotation within edgy brackets.
<code>&lt;&quot;foo&quot; bar baz=&quot;123&quot;&gt;</code> in ATD syntax translates to:
<verbatim>(&quot;foo&quot;, (loc1, [ (&quot;bar&quot;, (loc2, None));
                 (&quot;baz&quot;, (loc3, Some &quot;123&quot;)) ] ))</verbatim></doc><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot_field</type></identifier></resolved></path></path></tuple></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot_field</type><doc>An annotation field,
i.e. a key with an optional value within an annotation.</doc><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></tuple></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>full_module</type><doc>Contents of an ATD file.</doc><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>module_head</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>module_body</type></identifier></resolved></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>module_head</type><doc>The head of an ATD file is just a list of annotations.</doc><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>module_body</type><doc>The body of an ATD file is a list of type definitions.
Type definitions are implicitely mutually
recursive. They can be sorted based on dependencies
using <reference><element><resolved><value><identifier><root><base><xml src="../../atd.1.1.2/atd_util/index.xml"><cmti name="Atd_util" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_util.cmti" digest="cb274624bc4feee0939b355cf9a303cf"/></xml></base>Atd_util</root></identifier>tsort</value></resolved></element></reference>.</doc><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>module_item</type></identifier></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>module_item</type><doc>There is currently only one kind of module items,
that is single type definitions.</doc><poly_variant><fixed/><constructor>Type<path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_def</type></identifier></resolved></path></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_def</type><doc>A type definition.</doc><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_param</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_param</type><doc>List of type variables without the tick.</doc><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type><doc>A type expression is one of the following:<list><item><code>`Sum</code>: a sum type (within square brackets)</item><item><code>`Record</code>: a record type (within curly braces)</item><item><code>`Tuple</code>: a tuple (within parentheses)</item><item><code>`List</code>: a list type written <code>list</code> with its parameter
e.g. <code>int list</code></item><item><code>`Option</code>: an option type written <code>option</code> with its parameter
e.g. <code>string option</code></item><item><code>`Nullable</code>: adds a null value to a type.
<code>`Option</code> should be preferred over <code>`Nullable</code> since
it makes it possible to distinguish <code>Some None</code> from <code>None</code>.</item><item><code>`Shared</code>: values for which sharing must be preserved. Such
type expressions may not be parametrized. Values may only
be shared if the source location of the type expression is the same.</item><item><code>`Wrap</code>: optional wrapping of a type. For example, a timestamp
represented as a string can be wrapped within a proper time type.
In that case, the wrapper would parse the timestamp and convert
it into the internal representation of its choice. Unwrapping
would consist in converting it back to a string.</item><item><code>`Name</code>: a type name other than <code>list</code> or <code>option</code>, including
the predefined types <code>unit</code>, <code>bool</code>, <code>int</code>, <code>float</code>, <code>string</code>
and <code>abstract</code>.</item><item><code>`Tvar</code>: a type variable identifier without the tick</item></list></doc><poly_variant><fixed/><constructor>Sum<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>variant</type></identifier></resolved></path></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>Record<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>field</type></identifier></resolved></path></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>Tuple<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>cell</type></identifier></resolved></path></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>List<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>Option<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>Nullable<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>Shared<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>Wrap<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>Name<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_inst</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></constructor><constructor>Tvar<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_inst</type><doc>A type name and its arguments</doc><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>variant</type><doc>A single variant or an <code>inherit</code> statement.
<code>`Inherit</code> statements can be expanded into variants
using <reference><element><root>Atd_inherit</root></element></reference>
or at loading time using the <code>inherit_variant</code> option
offered by the <reference><element><root>Atd_util</root></element></reference> functions.</doc><poly_variant><fixed/><constructor>Variant<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path></path></tuple></constructor><constructor>Inherit<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path></tuple></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>cell</type><doc>Tuple cell. Note that annotations placed before the type
expression are supported and represented here,
such as the third cell in
<code>(float * float * &lt;ocaml default=&quot;0.0&quot;&gt; float)</code>.</doc><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>field_kind</type><doc>Different kinds of record fields based on the<list><item><code>`Required</code>: required field, e.g. <code>id : string</code></item><item><code>`Optional</code>: optional field without a default value, e.g.
<code>?name : string option</code>. The ATD type of the field
value must be an option type.</item><item><code>`With_default</code>: optional field with a default value, e.g.
<code>~websites : string list</code>. The default value may be implicit
or specified explicitely using annotations.
Each target language that cannot omit fields
may have to specify the default in its own syntax.</item></list>Sample ATD file:
<verbatim>type level = [ Beginner | Advanced | Expert ]

type user = {
  id : string;

  ?name : string option;
    (* Field may be omitted when no value is set, if permitted
       by the target language. *)

  ~websites : string list;
    (* Implicit default: empty list.
       Field may be omitted if the field value is
       equal to the default value and the
       target language permits it. *)

  ~level &lt;ocaml default=&quot;`Beginner&quot;&gt; : level;
    (* Explicit default for `ocaml'.
       For instance there is no `json' annotation because
       the default for undefined `JSON' fields would be to omit them. *)
}</verbatim></doc><poly_variant><fixed/><constructor>Required<constant/></constructor><constructor>Optional<constant/></constructor><constructor>With_default<constant/></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>field</type><doc>A single record field or an <code>inherit</code> statement.
<code>`Inherit</code> statements can be expanded into fields using <reference><element><root>Atd_inherit</root></element></reference>
or at loading time using the <code>inherit_fields</code> option
offered by the <reference><element><root>Atd_util</root></element></reference> functions.</doc><poly_variant><fixed/><constructor>Field<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>field_kind</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path></tuple></constructor><constructor>Inherit<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path></tuple></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc_of_type_expr</value><doc>Extract the source location of any type expression.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>set_type_expr_loc</value><doc>Replace the location of the given expression.
This is a shallow substitution. Sub-expressions are not affected.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>string_of_loc</value><doc>Convert a location into a human-readable string
such as <code>File &quot;foo.atd&quot;, line 123, characters 40-45</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>error</value><doc><code>error s</code> is a shorthand for <code>raise (Atd_error s)</code>.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><var>a</var></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>error_at</value><doc><code>error_at loc s</code> raises <code>Atd_error s'</code> where <code>s'</code>
is the location followed by <code>s</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><var>a</var></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>dummy_loc</value><doc>Dummy value for predefined constructs that are
not associated with a useful source location.
Should not show up in error messages.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>loc</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot_of_type_expr</value><doc>Return the annotations associated with a type expression.
Note that there can be annotations in a variety of places,
not just after type expressions.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>map_annot</value><doc>Replacement of the annotations associated with a type
expression.
This is a shallow transformation. Sub-expressions are not affected.</doc><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>map_all_annot</value><doc>Replacement of all annotations occurring in an ATD module.</doc><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>annot</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>full_module</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>full_module</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>fold</value><doc>Iteration and accumulation over each <code>type_expr</code> node
within a given <code>type_expr</code>.</doc><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><arrow><var>a</var><var>a</var></arrow></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><arrow><var>a</var><var>a</var></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>extract_type_names</value><doc>Extract all the type names occurring in a type expression
under <code>`Name</code>, without duplicates.<param><name>ignorable</name>specifies a list of type names to exclude from the result</param></doc><arrow><optional>ignorable</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>is_parametrized</value><doc>Test whether a type expression contains type variables (<code>`Tvar</code>).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Atd_ast" src="/home/dsheets/.opam/doc/build/atd.1.1.2/atd_ast.cmti" digest="69ddbb83d523c17608d0b979a3956dc7"/></xml></base>Atd_ast</root>type_expr</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value></unit>