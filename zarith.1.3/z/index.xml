<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></html></base>Z</root><digest>8db5d64f1c792f2e1a7e51693258c35f</digest><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>z.mli</file><dir>/home/dsheets/.opam/doc/build/zarith.1.3</dir><digest>66ae2742df0a216e79b94edf0476fe22</digest></source><doc>Integers.<newline/>This modules provides arbitrary-precision integers.
Small integers internally use a regular OCaml <code>int</code>.
When numbers grow too large, we switch transparently to GMP numbers
(<code>mpn</code> numbers fully allocated on the OCaml heap).<newline/>This interface is rather similar to that of <code>Int32</code> and <code>Int64</code>,
with some additional functions provided natively by GMP
(GCD, square root, pop-count, etc.).<newline/>This file is part of the Zarith library
http://forge.ocamlcore.org/projects/zarith .
It is distributed under LGPL 2 licensing, with static linking exception.
See the LICENSE file included in the distribution.<newline/>Copyright (c) 2010-2011 Antoine Miné, Abstraction project.
Abstraction is part of the LIENS (Laboratoire d'Informatique de l'ENS),
a joint laboratory by:
CNRS (Centre national de la recherche scientifique, France),
ENS (École normale supérieure, Paris, France),
INRIA Rocquencourt (Institut national de recherche en informatique, France).</doc><comment><title level="1">Toplevel</title></comment><comment>For an optimal experience with the <code>ocaml</code> interactive toplevel,
the magic commands are:<newline/><precode>    #load &quot;zarith.cma&quot;;;
    #install_printer Z.pp_print;;</precode></comment><comment><title level="1">Types</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type><doc>Type of integers of arbitrary length.</doc></type><exception><exception><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>Overflow</exception><doc>Raised by conversion functions when the value cannot be represented in
the destination type.</doc></exception><comment><title level="1">Construction</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>zero</value><doc>The number 0.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>one</value><doc>The number 1.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>minus_one</value><doc>The number -1.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></value><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>of_int</value><doc>Converts from a base integer.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_of_int</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>of_int32</value><doc>Converts from a 32-bit integer.</doc><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_of_int32</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>of_int64</value><doc>Converts from a 64-bit integer.</doc><arrow><path><resolved><identifier><type>int64</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_of_int64</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>of_nativeint</value><doc>Converts from a native integer.</doc><arrow><path><resolved><identifier><type>nativeint</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_of_nativeint</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>of_float</value><doc>Converts from a floating-point value.
The value is truncated.
Raises <code>Overflow</code> on infinity and NaN arguments.</doc><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_of_float</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>of_string</value><doc>Converts a string to an integer.
An optional <code>-</code> prefix indicates a negative number, while a <code>+</code>
prefix is ignored.
An optional prefix <code>0x</code>, <code>0o</code>, or <code>0b</code> (following the optional <code>-</code>
or <code>+</code> prefix) indicates that the number is,
represented, in hexadecimal, octal, or binary, respectively.
Otherwise, base 10 is assumed.
(Unlike C, a lone <code>0</code> prefix does not denote octal.)</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>of_string_base</value><doc>Parses a number represented as a string in the specified base,
with optional <code>-</code> or <code>+</code> prefix.
The base must be between 2 and 16.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_of_string_base</primitive></external><comment><title level="1">Basic arithmetic operations</title></comment><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>succ</value><doc>Returns its argument plus one.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_succ</primitive><primitive>ml_as_z_succ</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>pred</value><doc>Returns its argument minus one.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_pred</primitive><primitive>ml_as_z_pred</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>abs</value><doc>Absolute value.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_abs</primitive><primitive>ml_as_z_abs</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>neg</value><doc>Unary negation.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_neg</primitive><primitive>ml_as_z_neg</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>add</value><doc>Addition.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_add</primitive><primitive>ml_as_z_add</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>sub</value><doc>Subtraction.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_sub</primitive><primitive>ml_as_z_sub</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>mul</value><doc>Multiplication.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_mul</primitive><primitive>ml_as_z_mul</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>div</value><doc>Integer division. The result is truncated towards zero
and obeys the rule of signs.
Raises <code>Division_by_zero</code> if the divisor (second argument) is 0.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_div</primitive><primitive>ml_as_z_div</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>rem</value><doc>Integer remainder. Can raise a <code>Division_by_zero</code>.
The result of <code>rem a b</code> has the sign of <code>a</code>, and its absolute value is
strictly smaller than the absolute value of <code>b</code>.
The result satisfies the equality <code>a = b * div a b + rem a b</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_rem</primitive><primitive>ml_as_z_rem</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>div_rem</value><doc>Computes both the integer quotient and the remainder.
<code>div_rem a b</code> is equal to <code>(div a b, rem a b)</code>.
Raises <code>Division_by_zero</code> if <code>b = 0</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></tuple></arrow></arrow><primitive>ml_z_div_rem</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>cdiv</value><doc>Integer division with rounding towards +oo (ceiling).
Can raise a <code>Division_by_zero</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_cdiv</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>fdiv</value><doc>Integer division with rounding towards -oo (floor).
Can raise a <code>Division_by_zero</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_fdiv</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>ediv_rem</value><doc>Euclidean division and remainder. <code>ediv_rem a b</code> returns a pair <code>(q, r)</code>
such that <code>a = b * q + r</code> and <code>0 &lt;= r &lt; |b|</code>.
Raises <code>Division_by_zero</code> if <code>b = 0</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></tuple></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>ediv</value><doc>Euclidean division. <code>ediv a b</code> is equal to <code>fst (ediv_rem a b)</code>.
The result satisfies <code>0 &lt;= a - b * ediv a b &lt; |b|</code>.
Raises <code>Division_by_zero</code> if <code>b = 0</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>erem</value><doc>Euclidean remainder. <code>erem a b</code> is equal to <code>snd (ediv_rem a b)</code>.
The result satisfies <code>0 &lt;= erem a b &lt; |b|</code> and
<code>a = b * ediv a b + erem a b</code>. Raises <code>Division_by_zero</code> if <code>b = 0</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>divexact</value><doc><code>divexact a b</code> divides <code>a</code> by <code>b</code>, only producing correct result when the
division is exact, i.e., when <code>b</code> evenly divides <code>a</code>.
It should be faster than general division.
Can raise a <code>Division_by_zero</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_divexact</primitive></external><comment><title level="1">Bit-level operations</title></comment><comment>For all bit-level operations, negative numbers are considered in 2's
complement representation, starting with a virtual infinite number of
1s.</comment><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>logand</value><doc>Bitwise logical and.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_logand</primitive><primitive>ml_as_z_logand</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>logor</value><doc>Bitwise logical or.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_logor</primitive><primitive>ml_as_z_logor</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>logxor</value><doc>Bitwise logical exclusive or.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_logxor</primitive><primitive>ml_as_z_logxor</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>lognot</value><doc>Bitwise logical negation.
The identity <code>lognot a</code>=<code>-a-1</code> always hold.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_lognot</primitive><primitive>ml_as_z_lognot</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>shift_left</value><doc>Shifts to the left.
Equivalent to a multiplication by a power of 2.
The second argument must be non-negative.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_shift_left</primitive><primitive>ml_as_z_shift_left</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>shift_right</value><doc>Shifts to the right.
This is an arithmetic shift,
equivalent to a division by a power of 2 with rounding towards -oo.
The second argument must be non-negative.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_shift_right</primitive><primitive>ml_as_z_shift_right</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>shift_right_trunc</value><doc>Shifts to the right, rounding towards 0.
This is equivalent to a division by a power of 2, with truncation.
The second argument must be non-negative.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_shift_right_trunc</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>popcount</value><doc>Counts the number of bits set.
Raises <code>Overflow</code> for negative arguments, as those have an infinite
number of bits set.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow><primitive>ml_z_popcount</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>hamdist</value><doc>Counts the number of different bits.
Raises <code>Overflow</code> if the arguments have different signs
(in which case the distance is infinite).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_hamdist</primitive></external><comment><title level="1">Conversions</title></comment><comment>Note that, when converting to an integer type that cannot represent the
converted value, an <code>Overflow</code> exception is raised.</comment><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>to_int</value><doc>Converts to a base integer. May raise an <code>Overflow</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow><primitive>ml_z_to_int</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>to_int32</value><doc>Converts to a 32-bit integer. May raise an <code>Overflow</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int32</type></identifier></resolved></path></arrow><primitive>ml_z_to_int32</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>to_int64</value><doc>Converts to a 64-bit integer. May raise <code>Overflow</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int64</type></identifier></resolved></path></arrow><primitive>ml_z_to_int64</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>to_nativeint</value><doc>Converts to a native integer. May raise an <code>Overflow</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>nativeint</type></identifier></resolved></path></arrow><primitive>ml_z_to_nativeint</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>to_float</value><doc>Converts to a floating-point value.
This function is designed explicitly for the case where the FPU
rounds towards +oo, in which case the resulting float always
over-approximates the argument.
It is not guaranteed to be the least over-approximation though.
In the (default) case where the FPU does not round towards +oo, it is
only guaranteed that the result approximates the argument (but it may
not be the nearest float).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>float</type></identifier></resolved></path></arrow><primitive>ml_z_to_float</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>to_string</value><doc>Gives a human-readable, decimal string representation of the argument.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>format</value><doc>Gives a string representation of the argument in the specified
printf-like format.
The general specification has the following form:<newline/><code>% [flags] [width] type</code><newline/>Where the type actually indicates the base:<newline/><list><item><code>i</code>, <code>d</code>, <code>u</code>: decimal</item><item><code>b</code>: binary</item><item><code>o</code>: octal</item><item><code>x</code>: lowercase hexadecimal</item><item><code>X</code>: uppercase hexadecimal</item></list>Supported flags are:<newline/><list><item><code>+</code>: prefix positive numbers with a <code>+</code> sign</item><item>space: prefix positive numbers with a space</item><item><code>-</code>: left-justify (default is right justification)</item><item><code>0</code>: pad with zeroes (instead of spaces)</item><item><code>#</code>: alternate formatting (actually, simply output a literal-like prefix: <code>0x</code>, <code>0b</code>, <code>0o</code>)</item></list>Unlike the classic <code>printf</code>, all numbers are signed (even hexadecimal ones),
there is no precision field, and characters that are not part of the format
are simply ignored (and not copied in the output).</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_format</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>fits_int</value><doc>Whether the argument fits in a regular <code>int</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><primitive>ml_z_fits_int</primitive><primitive>noalloc</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>fits_int32</value><doc>Whether the argument fits in an <code>int32</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><primitive>ml_z_fits_int32</primitive><primitive>noalloc</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>fits_int64</value><doc>Whether the argument fits in an <code>int64</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><primitive>ml_z_fits_int64</primitive><primitive>noalloc</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>fits_nativeint</value><doc>Whether the argument fits in a <code>nativeint</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><primitive>ml_z_fits_nativeint</primitive><primitive>noalloc</primitive></external><comment><title level="1">Printing</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>print</value><doc>Prints the argument on the standard output.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>output</value><doc>Prints the argument on the specified channel.
Also intended to be used as <code>%a</code> format printer in <code>Printf.printf</code>.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>out_channel</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>sprint</value><doc>To be used as <code>%a</code> format printer in <code>Printf.sprintf</code>.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>bprint</value><doc>To be used as <code>%a</code> format printer in <code>Printf.bprintf</code>.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../ocaml.4.02.1+doc/stdlib/buffer/index.html"><xml src="../../ocaml.4.02.1+doc/stdlib/buffer/index.xml"><cmti name="Buffer" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/buffer.cmti" digest="a579f4a57e300ec755f84af883c1e51b"/></xml></html></base>Buffer</root></identifier>t</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>pp_print</value><doc>Prints the argument on the specified formatter.
Can be used as <code>%a</code> format printer in <code>Format.printf</code> and as
argument to <code>#install_printer</code> in the top-level.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../ocaml.4.02.1+doc/stdlib/format/index.html"><xml src="../../ocaml.4.02.1+doc/stdlib/format/index.xml"><cmti name="Format" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/format.cmti" digest="61d4350242b30078d3ad96c904c9f7a1"/></xml></html></base>Format</root></identifier>formatter</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><comment><title level="1">Ordering</title></comment><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>compare</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_compare</primitive><primitive>noalloc</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>equal</value><doc>Equality test.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_equal</primitive><primitive>noalloc</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>leq</value><doc>Less than or equal.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>geq</value><doc>Greater than or equal.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>lt</value><doc>Less than (and not equal).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>gt</value><doc>Greater than (and not equal).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>sign</value><doc>Returns -1, 0, or 1 when the argument is respectively negative, null, or
positive.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow><primitive>ml_z_sign</primitive><primitive>noalloc</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>min</value><doc>Returns the minimum of its arguments.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>max</value><doc>Returns the maximum of its arguments.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>hash</value><doc>Hashes a number.
This functions gives the same result as OCaml's polymorphic hashing
function.
The result is consistent with equality: if <code>a</code> = <code>b</code>, then <code>hash a</code> =
<code>hash b</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><comment><title level="1">Elementary number theory</title></comment><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>gcd</value><doc>Greatest common divisor.
The result is always positive.
Raises a <code>Division_by_zero</code> is either argument is null.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_gcd</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>gcdext</value><doc><code>gcd_ext u v</code> returns <code>(g,s,t)</code> where <code>g</code> is the greatest common divisor
and <code>g=us+vt</code>.
<code>g</code> is always positive.
Raises a <code>Division_by_zero</code> is either argument is null.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></tuple></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>lcm</value><doc>Least common multiple.
The result is always positive.
Raises a <code>Division_by_zero</code> is either argument is null.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>powm</value><doc><code>powm base exp mod</code> computes <code>base</code>^<code>exp</code> modulo <code>mod</code>.
Negative <code>exp</code> are supported, in which case (<code>base</code>^-1)^(-<code>exp</code>) modulo
<code>mod</code> is computed.
However, if <code>exp</code> is negative but <code>base</code> has no inverse modulo <code>mod</code>, then
a <code>Division_by_zero</code> is raised.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow></arrow><primitive>ml_z_powm</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>invert</value><doc><code>invert base mod</code> returns the inverse of <code>base</code> modulo <code>mod</code>.
Raises a <code>Division_by_zero</code> if <code>base</code> is not invertible modulo <code>mod</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_invert</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>probab_prime</value><doc><code>probab_prime x r</code> returns 0 if <code>x</code> is definitely composite,
1 if <code>x</code> is probably prime, and 2 if <code>x</code> is definitely prime.
The <code>r</code> argument controls how many Miller-Rabin probabilistic
primality tests are performed (5 to 10 is a reasonable value).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_probab_prime</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>nextprime</value><doc>Returns the next prime greater than the argument.
The result is only prime with very high probability.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_nextprime</primitive></external><comment><title level="1">Powers</title></comment><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>pow</value><doc><code>pow base exp</code> raises <code>base</code> to the <code>exp</code> power.
<code>exp</code> must be non-negative.
Note that only exponents fitting in a machine integer are supported, as
larger exponents would surely make the result's size overflow the
address space.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_pow</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>sqrt</value><doc>Returns the square root. The result is truncated.
Raises an <code>Invalid_argument</code> on negative arguments.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_sqrt</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>sqrt_rem</value><doc>Returns the square root truncated, and the remainder.
Raises an <code>Invalid_argument</code> on negative arguments.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></tuple></arrow><primitive>ml_z_sqrt_rem</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>root</value><doc><code>root base n</code> computes the <code>n</code>-th root of <code>exp</code>.
<code>n</code> must be non-negative.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_root</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>perfect_power</value><doc>True if the argument has the form <code>a^b</code>, with <code>b&gt;1</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><primitive>ml_z_perfect_power</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>perfect_square</value><doc>True if the argument has the form <code>a^2</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><primitive>ml_z_perfect_square</primitive></external><comment><title level="1">Representation</title></comment><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>size</value><doc>Returns the number of machine words used to represent the number.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow><primitive>ml_z_size</primitive><primitive>noalloc</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>extract</value><doc><code>extract a off len</code> returns a non-negative number corresponding to bits
<code>off</code> to <code>off</code>+<code>len</code>-1 of <code>b</code>.
Negative <code>a</code> are considered in infinite-length 2's complement
representation.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow></arrow><primitive>ml_z_extract</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>signed_extract</value><doc><code>signed_extract a off len</code> extracts bits <code>off</code> to <code>off</code>+<code>len</code>-1 of <code>b</code>,
as <code>extract</code> does, then sign-extends bit <code>len-1</code> of the result
(that is, bit <code>off + len - 1</code> of <code>a</code>). The result is between
<code>- 2{^[len]-1}</code> (included) and <code>2{^[len]-1}</code> excluded,
and equal to <code>extract a off len</code> modulo <code>2{^len}</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>to_bits</value><doc>Returns a binary representation of the argument.
The string result should be interpreted as a sequence of bytes,
corresponding to the binary representation of the absolute value of
the argument in little endian ordering.
The sign is not stored in the string.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow><primitive>ml_z_to_bits</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>of_bits</value><doc>Constructs a number from a binary string representation.
The string is interpreted as a sequence of bytes in little endian order,
and the result is always positive.
We have the identity: <code>of_bits (to_bits x) = abs x</code>.
However, we can have <code>to_bits (of_bits s) &lt;&gt; s</code> due to the presence of
trailing zeros in s.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_of_bits</primitive></external><comment><title level="1">Prefix and infix operators</title></comment><comment>Classic (and less classic) prefix and infix <code>int</code> operators are
redefined on <code>t</code>.<newline/>This makes it easy to typeset expressions.
Using OCaml 3.12's local open, you can simply write
<code>Z.(~$2 + ~$5 * ~$10)</code>.</comment><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(~-)</value><doc>Negation <code>neg</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_neg</primitive><primitive>ml_as_z_neg</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(~+)</value><doc>Identity.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(+)</value><doc>Addition <code>add</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_add</primitive><primitive>ml_as_z_add</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(-)</value><doc>Subtraction <code>sub</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_sub</primitive><primitive>ml_as_z_sub</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(*)</value><doc>Multiplication <code>mul</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_mul</primitive><primitive>ml_as_z_mul</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(/)</value><doc>Truncated division <code>div</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_div</primitive><primitive>ml_as_z_div</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(/&gt;)</value><doc>Ceiling division <code>cdiv</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_cdiv</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(/&lt;)</value><doc>Flooring division <code>fdiv</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_fdiv</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(/|)</value><doc>Exact division <code>div_exact</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_divexact</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>mod</value><doc>Remainder <code>rem</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_rem</primitive><primitive>ml_as_z_rem</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>land</value><doc>Bit-wise logical and <code>logand</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_logand</primitive><primitive>ml_as_z_logand</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>lor</value><doc>Bit-wise logical inclusive or <code>logor</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_logor</primitive><primitive>ml_as_z_logor</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>lxor</value><doc>Bit-wise logical exclusive or <code>logxor</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_logxor</primitive><primitive>ml_as_z_logxor</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(~!)</value><doc>Bit-wise logical negation <code>lognot</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_lognot</primitive><primitive>ml_as_z_lognot</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>lsl</value><doc>Bit-wise shift to the left <code>shift_left</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_shift_left</primitive><primitive>ml_as_z_shift_left</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>asr</value><doc>Bit-wise shift to the right <code>shift_right</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_shift_right</primitive><primitive>ml_as_z_shift_right</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(~$)</value><doc>Conversion from <code>int</code> <code>of_int</code>.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow><primitive>ml_z_of_int</primitive></external><external><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>(**)</value><doc>Power <code>pow</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>t</type></identifier></resolved></path></arrow></arrow><primitive>ml_z_pow</primitive></external><comment><title level="1">Miscellaneous</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Z" src="/home/dsheets/.opam/doc/build/zarith.1.3/z.cmti" digest="8db5d64f1c792f2e1a7e51693258c35f"/></xml></base>Z</root>version</value><doc>Library version (this file refers to version <code>&quot;1.3&quot;</code>).</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value></unit>