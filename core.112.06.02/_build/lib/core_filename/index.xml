<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></html></base>Core_filename</root><digest>bfe078ac4e0ed75483d1f72ee915d4a2</digest><import>Arg<digest>1a93c52516966fe6a58564a4c4d9e4fa</digest></import><import>Array<digest>ae800d8cf9903f1d36856950940430e6</digest></import><import>ArrayLabels<digest>58a6628d1722d835ca71a7e76108549e</digest></import><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Bin_prot<digest>1eba8a056671767c0ff0de95b9d79cf0</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>BytesLabels<digest>f6f25f5328b09c590f56c7e37005c501</digest></import><import>Callback<digest>deb9226b3de6bdba985bad268a5b7c51</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Char<digest>60fd98ba6ff303baf9287e7bfb886f12</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Core_kernel<digest>03f47d5c0d0fe0934524d07b846b4d0a</digest></import><import>Digest<digest>eab54f58b34b8a6fdc763db6966614a1</digest></import><import>Fieldslib<digest>d78f9550b468f1166a617738859cc53d</digest></import><import>Filename<digest>3817bec1dad20c6f594d3a85b13020b8</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Gc<digest>b6fd17066fdc1a10189b41093e32d95d</digest></import><import>Genlex<digest>b273667d018eaee28be8ef8663aada02</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lazy<digest>7dba0bf02f60e5ff44e9e4057263f28d</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>List<digest>8988208489274193e4e3f69dc6ec2f75</digest></import><import>ListLabels<digest>f9c893b10648fae8e31ad7bfcd64248f</digest></import><import>Map<digest>770e6123e5460eeb42d3050f13c5ad53</digest></import><import>Marshal<digest>6a7be818a4d43f06397faef2c6f9d35b</digest></import><import>MoreLabels<digest>de38ed0a31c05b2d5f114679e33d4cad</digest></import><import>Nativeint<digest>d9e04753374f7110b66feda40414e5e3</digest></import><import>OUnit<digest>061c2b7c3576f155359af098da2b6cc4</digest></import><import>OUnit2<digest>c63c5d4e5d21b5a6e1c006ea3f6a9f40</digest></import><import>OUnitConf<digest>e9d7ac436b7c92024bd75e3ee9f66c27</digest></import><import>OUnitLogger<digest>2829f5e4133023ee1e1988da414aca56</digest></import><import>OUnitPropList<digest>00368900f7cfb75540524d6799d0501a</digest></import><import>OUnitShared<digest>272141ba126236b9846a49bb85586d03</digest></import><import>OUnitTest<digest>b2691574cfa63f167bc6f6ecaaf4805b</digest></import><import>OUnitUtils<digest>5471ffa587444f794375a4caab4e85fd</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pa_bench_lib<digest>49e35efd8e698dfeaeed8204f5445f77</digest></import><import>Pa_ounit_lib<digest>c6212c5c68dc085c7c3df6d5dbfc4532</digest></import><import>Pa_test_lib<digest>9869606bf4a7705fc5a9fcc2bb324335</digest></import><import>Parsing<digest>4f8cd2d8537563c7ea7ee2e5dc94e427</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printexc<digest>fb616c60404add6295347001c01bfcaa</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Queue<digest>06a89c77a23c672d34cb97e6dfc5f30d</digest></import><import>Random<digest>6d410ecc00aac669668fa399dbd6fca2</digest></import><import>Scanf<digest>31f1631ff7e3da78eabf4b08e91d2861</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Sexplib<digest>edfea10cfcfd644a920e72e67cb0bbdd</digest></import><import>Sort<digest>7f209dd54826e792b36c64d0a799f76b</digest></import><import>Stack<digest>3397768ddbaaa5d9fe72a4c82cdc6eb9</digest></import><import>StdLabels<digest>bde0996731d345de202224fb701f3910</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>String<digest>9cb286f2c4569fd32c379b1a05c7b590</digest></import><import>StringLabels<digest>d53c23a5c85990103dbeef11dd5cf4f1</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Typerep_lib<digest>e6a610cd9119c4b89b2ecff18190c6e7</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Weak<digest>441c40816fe88175926465199a665458</digest></import><source><file>lib/core_filename.mli</file><dir>/home/dsheets/.opam/doc/build/core.112.06.02/_build</dir><digest>e7905288d2634ca90f21255b087990d0</digest></source><doc>Warning! this library assumes we are in a POSIX compliant OS.</doc><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>root</value><doc>The path of the root.</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value><comment><title level="2">Pathname resolution</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>realpath</value><doc><code>realpath path</code><return>the canonicalized absolute pathname of <code>path</code>.</return><raise><name>Unix_error</name>on errors.</raise></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>is_posix_pathname_component</value><doc><code>is_posix_pathname_component f</code><return>true if <code>f</code> is a valid filename in a POSIX compliant OS (a path
component and not a full path).<newline/>http://www.opengroup.org/onlinepubs/000095399/basedefs/xbd_chap03.html#tag_03_169</return></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><comment><code>temp_file ?perm ?in_dir_name prefix suffix</code><newline/>Returns the name of a fresh temporary file in the temporary directory. The base name
of the temporary file is formed by concatenating prefix, then a 6-digit hex number,
then suffix. The temporary file is created empty. The file is guaranteed to be fresh,
i.e. not already existing in the directory.<param><name>in_dir</name>the directory in which to create the temporary file. The default is
<code>temp_dir_name</code></param><param><name>perm</name>the permission of the temporary file. The default value is <code>0o600</code>
(readable and writable only by the file owner)<newline/>Note that prefix and suffix will be changed when necessary to make the final filename
valid POSIX.<newline/><code>temp_dir</code> is the same as <code>temp_file</code> but creates a temporary directory.</param></comment><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>temp_file</value><arrow><optional>perm</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>in_dir</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>temp_dir</value><arrow><optional>perm</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>in_dir</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>temp_dir_name</value><doc>The name of the temporary directory:<newline/>Under Unix, the value of the <code>TMPDIR</code> environment variable, or &quot;/tmp&quot; if the variable
is not set.<newline/>Under Windows, the value of the <code>TEMP</code> environment variable, or &quot;.&quot; if the variable
is not set.</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>open_temp_file</value><doc>Same as <reference><element><resolved><value><identifier><root><base><xml src="../../../../core.112.06.02/_build/lib/core_filename/index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root></identifier>temp_file</value></resolved></element></reference>, but returns both the name of a fresh
temporary file, and an output channel opened (atomically) on
this file. This function is more secure than <code>temp_file</code>: there
is no risk that the temporary file will be modified (e.g. replaced
by a symbolic link) before the program opens it.</doc><arrow><optional>perm</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>in_dir</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>out_channel</type></resolved></path></tuple></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>current_dir_name</value><doc>The conventional name for the current directory (e.g. <code>.</code> in Unix).</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>parent_dir_name</value><doc>The conventional name for the parent of the current directory
(e.g. <code>..</code> in Unix).</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>dir_sep</value><doc>The directory separator (e.g. <code>/</code> in Unix).</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>concat</value><doc><code>concat p1 p2</code> returns a path equivalent to <code>p1 ^ &quot;/&quot; ^ p2</code>.
In the resulting path p1 (resp. p2) has all its trailing (resp. leading)
&quot;.&quot; and &quot;/&quot; removed. eg:
concat &quot;a/.&quot; &quot;.//b&quot; =&gt; &quot;a/b&quot;
concat &quot;.&quot; &quot;b&quot; =&gt; &quot;./b&quot;
concat &quot;a&quot; &quot;.&quot; =&gt; &quot;a/.&quot;
concat &quot;a&quot; &quot;/b&quot; =&gt; &quot;a/b&quot;<tag><name>throws</name>Failure if <code>p1</code> is empty.</tag></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><module><module><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>O</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>O</module>(/^)</value><doc>Equal to <code>Filename.concat</code>.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>O</module>(/@)</value><doc><code>root /@ [p1; p2; p3] = root /^ p1 /^ p2 /^ p3</code>
<code>root /@ [] = root</code></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value></signature></type></module><include><typeof><alias><resolved><identifier><module><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>O</module></identifier></resolved></alias></typeof></include><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>is_relative</value><doc>Return <code>true</code> if the file name is relative to the current
directory, <code>false</code> if it is absolute (i.e. in Unix, starts
with <code>/</code>).</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>is_absolute</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>is_implicit</value><doc>Return <code>true</code> if the file name is relative and does not start
with an explicit reference to the current directory (<code>./</code> or
<code>../</code> in Unix), <code>false</code> if it starts with an explicit reference
to the root directory or the current directory.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>check_suffix</value><doc><code>check_suffix name suff</code> returns <code>true</code> if the filename <code>name</code>
ends with the suffix <code>suff</code>.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>chop_suffix</value><doc><code>chop_suffix name suff</code> removes the suffix <code>suff</code> from
the filename <code>name</code>. The behavior is undefined if <code>name</code> does not
end with the suffix <code>suff</code>.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>chop_extension</value><doc>Return the given file name without its extension. The extension
is the shortest suffix starting with a period and not including
a directory separator, <code>.xyz</code> for instance.<newline/>Raise <code>Invalid_argument</code> if the given name does not contain
an extension.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>split_extension</value><doc><code>split_extension fn</code> return the portion of the filename before the
extension and the (optional) extension.
Example:
split_extension &quot;/foo/my_file&quot; = (&quot;/foo/my_file&quot;, None)
split_extension &quot;/foo/my_file.txt&quot; = (&quot;/foo/my_file&quot;, Some &quot;txt&quot;)
split_extension &quot;/home/c.falls/my_file&quot; = (&quot;/home/c.falls/my_file&quot;, None)</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>basename</value><doc>Respects the posix semantic.<newline/>Split a file name into directory name / base file name.
<code>concat (dirname name) (basename name)</code> returns a file name
which is equivalent to <code>name</code>. Moreover, after setting the
current directory to <code>dirname name</code> (with <reference><element><resolved><value><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/sys/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/sys/index.xml"><cmti name="Sys" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/sys.cmti" digest="0ce699458ce4430954d7e6a78874647c"/></xml></html></base>Sys</root></identifier>chdir</value></resolved></element></reference>),
references to <code>basename name</code> (which is a relative file name)
designate the same file as <code>name</code> before the call to <reference><element><resolved><value><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/sys/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/sys/index.xml"><cmti name="Sys" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/sys.cmti" digest="0ce699458ce4430954d7e6a78874647c"/></xml></html></base>Sys</root></identifier>chdir</value></resolved></element></reference>.<newline/>The result is not specified if the argument is not a valid file name
(for example, under Unix if there is a NUL character in the string).</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>dirname</value><doc>See <reference><element><resolved><value><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/filename/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/filename/index.xml"><cmti name="Filename" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/filename.cmti" digest="3817bec1dad20c6f594d3a85b13020b8"/></xml></html></base>Filename</root></identifier>basename</value></resolved></element></reference>.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>split</value><doc><code>split filename</code> returns (dirname filename, basename filename)</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>parts</value><doc><code>parts filename</code> returns a list of path components in order. For instance:
/tmp/foo/bar/baz -&gt; <code>&quot;/&quot;; &quot;tmp&quot;; &quot;foo&quot;; &quot;bar&quot;; &quot;baz&quot;</code>. The first component is always
either &quot;.&quot; for relative paths or &quot;/&quot; for absolute ones.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>of_parts</value><doc><code>of_parts parts</code> joins a list of path components into a path. It does roughly the
opposite of <code>parts</code>, but they fail to be precisely mutually inverse because of
ambiguities like multiple consecutive slashes and . components.<newline/>Raises an error if given an empty list.</doc><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_filename" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/core_filename.cmti" digest="bfe078ac4e0ed75483d1f72ee915d4a2"/></xml></base>Core_filename</root>quote</value><doc>Return a quoted version of a file name, suitable for use as
one argument in a command line, escaping all meta-characters.
Warning: under Windows, the output is only suitable for use
with programs that follow the standard Windows quoting
conventions.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value></unit>