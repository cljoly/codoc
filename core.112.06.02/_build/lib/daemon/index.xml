<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></html></base>Daemon</root><digest>63c54b3135c47dbd897203c334a0d05c</digest><import>Arg<digest>1a93c52516966fe6a58564a4c4d9e4fa</digest></import><import>Array<digest>ae800d8cf9903f1d36856950940430e6</digest></import><import>ArrayLabels<digest>58a6628d1722d835ca71a7e76108549e</digest></import><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Bin_prot<digest>1eba8a056671767c0ff0de95b9d79cf0</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>BytesLabels<digest>f6f25f5328b09c590f56c7e37005c501</digest></import><import>Callback<digest>deb9226b3de6bdba985bad268a5b7c51</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Char<digest>60fd98ba6ff303baf9287e7bfb886f12</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Core_kernel<digest>03f47d5c0d0fe0934524d07b846b4d0a</digest></import><import>Digest<digest>eab54f58b34b8a6fdc763db6966614a1</digest></import><import>Fieldslib<digest>d78f9550b468f1166a617738859cc53d</digest></import><import>Filename<digest>3817bec1dad20c6f594d3a85b13020b8</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Gc<digest>b6fd17066fdc1a10189b41093e32d95d</digest></import><import>Genlex<digest>b273667d018eaee28be8ef8663aada02</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lazy<digest>7dba0bf02f60e5ff44e9e4057263f28d</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>List<digest>8988208489274193e4e3f69dc6ec2f75</digest></import><import>ListLabels<digest>f9c893b10648fae8e31ad7bfcd64248f</digest></import><import>Map<digest>770e6123e5460eeb42d3050f13c5ad53</digest></import><import>Marshal<digest>6a7be818a4d43f06397faef2c6f9d35b</digest></import><import>MoreLabels<digest>de38ed0a31c05b2d5f114679e33d4cad</digest></import><import>Nativeint<digest>d9e04753374f7110b66feda40414e5e3</digest></import><import>OUnit<digest>061c2b7c3576f155359af098da2b6cc4</digest></import><import>OUnit2<digest>c63c5d4e5d21b5a6e1c006ea3f6a9f40</digest></import><import>OUnitConf<digest>e9d7ac436b7c92024bd75e3ee9f66c27</digest></import><import>OUnitLogger<digest>2829f5e4133023ee1e1988da414aca56</digest></import><import>OUnitPropList<digest>00368900f7cfb75540524d6799d0501a</digest></import><import>OUnitShared<digest>272141ba126236b9846a49bb85586d03</digest></import><import>OUnitTest<digest>b2691574cfa63f167bc6f6ecaaf4805b</digest></import><import>OUnitUtils<digest>5471ffa587444f794375a4caab4e85fd</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pa_bench_lib<digest>49e35efd8e698dfeaeed8204f5445f77</digest></import><import>Pa_ounit_lib<digest>c6212c5c68dc085c7c3df6d5dbfc4532</digest></import><import>Pa_test_lib<digest>9869606bf4a7705fc5a9fcc2bb324335</digest></import><import>Parsing<digest>4f8cd2d8537563c7ea7ee2e5dc94e427</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printexc<digest>fb616c60404add6295347001c01bfcaa</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Queue<digest>06a89c77a23c672d34cb97e6dfc5f30d</digest></import><import>Random<digest>6d410ecc00aac669668fa399dbd6fca2</digest></import><import>Scanf<digest>31f1631ff7e3da78eabf4b08e91d2861</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Sexplib<digest>edfea10cfcfd644a920e72e67cb0bbdd</digest></import><import>Sort<digest>7f209dd54826e792b36c64d0a799f76b</digest></import><import>Stack<digest>3397768ddbaaa5d9fe72a4c82cdc6eb9</digest></import><import>Staged<digest>5a4ad606226499a0d6d873ec7a13bda3</digest></import><import>StdLabels<digest>bde0996731d345de202224fb701f3910</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>String<digest>9cb286f2c4569fd32c379b1a05c7b590</digest></import><import>StringLabels<digest>d53c23a5c85990103dbeef11dd5cf4f1</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Typerep_lib<digest>e6a610cd9119c4b89b2ecff18190c6e7</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Weak<digest>441c40816fe88175926465199a665458</digest></import><source><file>lib/daemon.mli</file><dir>/home/dsheets/.opam/doc/build/core.112.06.02/_build</dir><digest>76f39bdac6217ecc1374a4a2c0c23fc5</digest></source><doc>This module provides support for daemonizing a process. It provides flexibility as to
where the standard file descriptors (stdin, stdout and stderr) are connected after
daemonization has occurred.</doc><module><module><root><base><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></base>Daemon</root>Fd_redirection</module><type><signature><type><type><module><root><base><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></base>Daemon</root>Fd_redirection</module>t</type><poly_variant><fixed/><constructor>Dev_null<constant/></constructor><constructor>Do_not_redirect<constant/></constructor><constructor>File_append<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>File_truncate<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor></poly_variant></type></signature></type></module><value><value><root><base><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></base>Daemon</root>daemonize</value><doc><code>daemonize</code> makes the executing process a daemon.<newline/>See Chapter 13 of Advanced Programming in the UNIX Environment Second Edition by
Stephens and Rago for more details.<newline/>The optional arguments have defaults as per <code>daemonize_wait</code>, below.<newline/>By default, output sent to stdout and stderr after daemonization will be silently
eaten. This behaviour may be adjusted by using <code>redirect_stdout</code> and
<code>redirect_stderr</code>. See the documentation for <code>daemonize_wait</code> below.<raise><name>Failure</name>if fork was unsuccessful.</raise></doc><arrow><optional>redirect_stdout</optional><path><resolved><type><identifier><module><root><base><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></base>Daemon</root>Fd_redirection</module></identifier>t</type></resolved></path><arrow><optional>redirect_stderr</optional><path><resolved><type><identifier><module><root><base><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></base>Daemon</root>Fd_redirection</module></identifier>t</type></resolved></path><arrow><optional>cd</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><optional>umask</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></base>Daemon</root>daemonize_wait</value><doc><code>daemonize_wait</code> makes the executing process a daemon, but delays full detachment
from the calling shell/process until the returned &quot;release&quot; closure is called.<newline/>Any output to stdout/stderr before the &quot;release&quot; closure is called will get
sent out normally. After &quot;release&quot; is called, stdin is connected to /dev/null,
and stdout and stderr are connected as specified by <code>redirect_stdout</code> and
<code>redirect_stderr</code>. The default is the usual behaviour whereby both of these
descriptors are connected to /dev/null.<newline/>Note that calling <code>release</code> will adjust SIGPIPE handling, so you should not rely on
the delivery of this signal during this time.<newline/><code>daemonize_wait</code> allows you to daemonize and then start async, but still have
stdout/stderr go to the controlling terminal during startup. By default, when you
<code>daemonize</code>, toplevel exceptions during startup would get sent to /dev/null. With
<code>daemonize_wait</code>, toplevel exceptions can go to the terminal until you call <code>release</code>.<raise><name>Failure</name>if fork was unsuccessful.</raise></doc><arrow><optional>redirect_stdout</optional><path><resolved><type><identifier><module><root><base><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></base>Daemon</root>Fd_redirection</module></identifier>t</type></resolved></path><arrow><optional>redirect_stderr</optional><path><resolved><type><identifier><module><root><base><xml src="index.xml"><cmti name="Daemon" src="/home/dsheets/.opam/doc/build/core.112.06.02/_build/lib/daemon.cmti" digest="63c54b3135c47dbd897203c334a0d05c"/></xml></base>Daemon</root>Fd_redirection</module></identifier>t</type></resolved></path><arrow><optional>cd</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><optional>umask</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../core_kernel.112.06.02/_build/lib/staged/index.xml"><cmti name="Staged" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/staged.cmti" digest="b9f50d484acb8f6bc46f61efdbfdf2a5"/></xml></base>Staged</root></identifier>t</type></resolved><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></path></arrow></arrow></arrow></arrow></arrow></value></unit>