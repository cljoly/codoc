<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Sys_js" src="/home/dsheets/.opam/doc/build/js_of_ocaml.2.5/lib/sys_js.cmti" digest="50eb4ebacc6a7d5e4afffcf6489951fa"/></xml></html></base>Sys_js</root><digest>50eb4ebacc6a7d5e4afffcf6489951fa</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>sys_js.mli</file><dir>/home/dsheets/.opam/doc/build/js_of_ocaml.2.5/lib</dir><digest>413a34c8cd1e12e564593a590de251bd</digest></source><doc>Javascript specific Sys functions.</doc><comment><title level="2">Io.</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Sys_js" src="/home/dsheets/.opam/doc/build/js_of_ocaml.2.5/lib/sys_js.cmti" digest="50eb4ebacc6a7d5e4afffcf6489951fa"/></xml></base>Sys_js</root>set_channel_flusher</value><doc>Set a callback to be called when an out_channel flush its buffer.
<code>set_channel_flusher chan cb</code> install the callback <code>cb</code> for <code>chan</code> out_channel.
<code>cb</code> will be called with the string to flush.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>out_channel</type></resolved></path><arrow><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><comment><title level="2">Pseudo filesystem.</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Sys_js" src="/home/dsheets/.opam/doc/build/js_of_ocaml.2.5/lib/sys_js.cmti" digest="50eb4ebacc6a7d5e4afffcf6489951fa"/></xml></base>Sys_js</root>register_file</value><doc>Register a file to a Pseudo Filesystem.
<code>register_file ~name ~content</code> register the file <code>name</code> with content <code>content</code>
so it can be be opened with <code>Pervasives.open_in name</code></doc><arrow><label>name</label><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><label>content</label><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Sys_js" src="/home/dsheets/.opam/doc/build/js_of_ocaml.2.5/lib/sys_js.cmti" digest="50eb4ebacc6a7d5e4afffcf6489951fa"/></xml></base>Sys_js</root>register_autoload</value><doc>Register a callback to the <code>path</code> to dynamicly load missing files.
Whenever a file is missing in <code>path</code>, the callback is used to optionally
get the content of the file.
<code>register_autoload ~path f</code> register the callback <code>f</code> to the path <code>path</code>.
The callback <code>f</code> receives <code>(prefix,suffix)</code> where:<list><item><code>prefix</code> is the path the function has been registered to.</item><item><code>Filename.contact prefix suffix</code> is the absolute filename .</item></list></doc><arrow><label>path</label><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><arrow><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Sys_js" src="/home/dsheets/.opam/doc/build/js_of_ocaml.2.5/lib/sys_js.cmti" digest="50eb4ebacc6a7d5e4afffcf6489951fa"/></xml></base>Sys_js</root>file_content</value><doc><code>file_content name</code> returns the content of the file <code>name</code>.
Raise <code>Not_found</code> if the file does not exists.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow><primitive>caml_fs_file_content</primitive></external><comment><title level="2">Information.</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Sys_js" src="/home/dsheets/.opam/doc/build/js_of_ocaml.2.5/lib/sys_js.cmti" digest="50eb4ebacc6a7d5e4afffcf6489951fa"/></xml></base>Sys_js</root>js_of_ocaml_version</value><doc><code>js_of_ocaml_version</code> is the version of Js_of_ocaml.
It is a string of the form <code>&quot;major.minor[.patchlevel][+additional-info]&quot;</code>,
where <code>major</code>, <code>minor</code>, and <code>patchlevel</code> are integers, and
<code>additional-info</code> is an arbitrary string. The <code>[.patchlevel]</code> and
<code>[+additional-info]</code> parts may be absent.</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value></unit>