<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></html></base>Version</root><digest>0e5f0f646927bc0828208c8614500797</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>deb/version.mli</file><dir>/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build</dir><digest>0a2dd656dea59254524025bc37128d55</digest></source><doc>Functions for manipulating and comparing Debian version strings.
Compliant with Debian policy version 3.9.2. and Debian developers
reference version 3.4.6</doc><comment><title level="2">Comparing debian version strings</title></comment><comment>The following functions compare any two strings, that is these
functions do not check whether the arguments are really legal
debian versions. If the arguments are debian version strings, then
the result is as required by debian policy. Note that two strings
may be equivalent, that is denote the same debian version, even
when they differ in syntax, as for instance &quot;0:1.2.00&quot; and
&quot;1.02-0&quot;.</comment><value><value><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>equal</value><doc><return><code>true</code> iff the two strings define the same version. Hence,
the result may be true even when the two string differ
syntactically.</return></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>compare</value><doc><code>compare x y</code> returns 0 if x is eqivalent to y, -1 if x is smaller
than y, and 1 if x is greater than y. This is consistent with
<code>Pervasives.compare</code>.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow></value><comment><title level="2">Decomposing and recomposing debian version strings</title></comment><comment>Version strings may be the decomposed into epoch, upstream, and
revision as described in debian policy section 5.6.12. An epoch is
present if the version string contains a colon ':', in this case
the leftmost colon separates the epoch from the rest. A revision
is present if the string contains a dash '-', in this case the
rightmost dash separates the rest from the revision.<newline/>A version string that contains no dash (hence, no revision) is
called native. Otherwise it is called non-native, in this case the
revision may be empty (example: &quot;1.2-&quot;) or not.<newline/>A suffix of the upstream part of a native version, or the suffix
of the revision part of a non-native version, may contain a part
indicating a binary NMU (Debian Developers Reference, section
5.10.2.1). A binary NMU part is of the form &quot;+bN&quot; where N is an
unsigned integer.</comment><type><type><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>version_analysis</type><doc>result type of the analysis of a version string. The binNMU part,
if present, has been removed from the upstream (if native version)
or revision (if non-native vesion).</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>version_analysis</type>Native</constructor><doc>epoch,upstream,binnmu</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>version_analysis</type>NonNative</constructor><doc>epoch,upstream,revision,binnmu</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>decompose</value><doc>decompose a version string</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>version_analysis</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>compose</value><doc>recompose a decomposed version string. For all v:
<code>equal(v,compose(decompose v)) = true</code>. There may, however, be
small syntactic differences between <code>v</code> and <code>compose(decompose v)</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>version_analysis</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>strip_epoch_binnmu</value><doc>return a version without its epoch and without its binNMU part</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><comment><title level="2">Decomposing and recomposing version strings (deprecated interface)</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>split</value><doc>split the debian version into its components.
(epoch,upstream,revision,binnmu) = split v
v = epoch ^ &quot;:&quot; ^ upstream ^ &quot;-&quot; ^ revision ^ binnmu.<deprecated><code>decompose</code> should be used instead.</deprecated></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>concat</value><doc><deprecated><code>recompose</code> should be used instead.</deprecated></doc><arrow><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Version" src="/home/dsheets/.opam/doc/build/dose.3.2.2+opam/_build/deb/version.cmti" digest="0e5f0f646927bc0828208c8614500797"/></xml></base>Version</root>normalize</value><doc>chop the epoch and binnmu component from a version.<deprecated><code>strip_epoch_binnmu</code> should be used instead.</deprecated></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value></unit>