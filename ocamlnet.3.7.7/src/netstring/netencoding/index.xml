<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></html></base>Netencoding</root><digest>1e3a4e766eb2eec3c2276a870dd7e697</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netconversion<digest>192a0e1fae2f882e5f06cf84e9f3da38</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>netencoding.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring</dir><digest>937538c5f4cd978dd54ef651c94816f6</digest></source><doc>Base64, Quoted Printable, URL encoding, HTML escaping</doc><module><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Base64</module><type><signature><comment>Base64 encoding as described in RFC 2045</comment><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Base64</module>encode</value><doc>Compute the &quot;base 64&quot; encoding of the given string argument.
Note that the result is a string that only contains the characters
a-z, A-Z, 0-9, +, /, =, and optionally spaces, CR and LF characters.<newline/>If <code>pos</code> and/or <code>len</code> are passed, only the substring starting at
<code>pos</code> (default: 0) with length <code>len</code> (default: rest of the string)
is encoded.<newline/>The result is divided up into lines not longer than <code>linelength</code>
(without counting the line separator); default: do not divide lines.
If <code>linelength</code> is smaller than 4, no line division is performed.
If <code>linelength</code> is not divisible by 4, the produced lines are a
bit shorter than <code>linelength</code>.<newline/>If <code>crlf</code> (default: false) the lines are ended by CRLF; otherwise
they are only ended by LF.
(You need the crlf option to produce correct MIME messages.)</doc><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>linelength</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>crlf</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Base64</module>url_encode</value><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>linelength</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>crlf</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Base64</module>decode</value><doc>Decodes the given string argument.<newline/>If <code>pos</code> and/or <code>len</code> are passed, only the substring starting at
<code>pos</code> (default: 0) with length <code>len</code> (default: rest of the string)
is decoded.<newline/>If <code>url_variant</code> (default: <code>true</code>) is set, the functions also
accepts the characters '-' and '.' as produced by <code>url_encode</code>.<newline/>If <code>accept_spaces</code> (default: <code>false</code>) is set, the function ignores
white space contained in the string to decode (otherwise the
function fails if it finds white space). Furthermore, the character
'&gt;' is considered as &quot;space&quot;, too (so you don't have trouble with
mbox mailboxes that accidentally quote &quot;From&quot;).</doc><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>url_variant</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>accept_spaces</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><class><class><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Base64</module>encoding_pipe</class><doc>This pipe encodes the data written into the pipe.
<code>linelength</code> and <code>crlf</code> work as in <code>encode</code>.</doc><arrow><optional>linelength</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path><arrow><optional>crlf</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><class><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>pipe</class></resolved></path></arrow></arrow></arrow></class><class><class><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Base64</module>decoding_pipe</class><doc>This pipe decodes the data written into the pipe.
<code>url_variant</code> and <code>accept_spaces</code> work as in <code>decode</code>.</doc><arrow><optional>url_variant</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path><arrow><optional>accept_spaces</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><class><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>pipe</class></resolved></path></arrow></arrow></arrow></class></signature></type></module><module><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>QuotedPrintable</module><type><signature><comment>This module implements the &quot;Quoted Printable&quot; encoding as
described in RFC 2045.<newline/>This implementation assumes that the encoded string has a text MIME
type. On input both CR/LF and LF are accepted as end-of-line (eol) terminators,
but the output normalizes the eol delimiter as the <code>crlf</code> argument
specifies. Note that this implies that<list><item>If <code>crlf</code>, the output uses CR/LF as line separator as MIME prescribes</item><item>the encoding is not invertible for binary data</item></list></comment><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>QuotedPrintable</module>encode</value><doc>Encodes the string and returns it.<newline/>Since OcamlNet 0.98, soft line breaks are added to the output
to ensure that all output lines have a length &lt;= 76 bytes.<newline/>Note unsafe characters:
As recommended by RFC 2045, the characters <code>!#$@[]^`|{}~</code>
and the double quotes
are additionally represented as hex tokens.
Furthermore, the letter 'F' is considered as unsafe if it
occurs at the beginning of the line, so the encoded text
never contains the word &quot;From&quot; at the beginning of a line.<newline/>If <code>pos</code> and/or <code>len</code> are passed, only the substring starting at
<code>pos</code> (default: 0) with length <code>len</code> (default: rest of the string)
is encoded.<newline/>If <code>crlf</code> is set (the default), the output text uses CR/LF as
line separator. Otherwise only LF is used.</doc><arrow><optional>crlf</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>QuotedPrintable</module>decode</value><doc>Decodes the string and returns it.<newline/>Most format errors cause an <code>Invalid_argument</code> exception.<newline/>If <code>pos</code> and/or <code>len</code> are passed, only the substring starting at
<code>pos</code> (default: 0) with length <code>len</code> (default: rest of the string)
is decoded.</doc><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></value><class><class><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>QuotedPrintable</module>encoding_pipe</class><doc>This pipe encodes the data written into the pipe.</doc><arrow><optional>crlf</optional><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><class><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>pipe</class></resolved></path></arrow></arrow></class><class><class><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>QuotedPrintable</module>decoding_pipe</class><doc>This pipe decodes the data written into the pipe.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><class><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>pipe</class></resolved></path></arrow></class></signature></type></module><module><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Q</module><type><signature><comment>The &quot;Q&quot; encoding as described by RFC 2047.</comment><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Q</module>encode</value><doc>Note:
All characters except alphanumeric characters are protected by
hex tokens.
In particular, spaces are represented as &quot;=20&quot;, not as &quot;_&quot;.</doc><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Q</module>decode</value><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></value></signature></type></module><module><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Url</module><type><signature><comment>Encoding/Decoding within URLs:<newline/>The following two functions perform the '%'-substitution for
characters that may otherwise be interpreted as metacharacters.<newline/>According to: RFC 1738, RFC 1630<newline/>Option <code>plus</code>: This option has been added because there are some
implementations that do not map ' ' to '+', for example Javascript's
<code>escape</code> function. The default is <code>true</code> because this is the RFC-
compliant definition.</comment><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Url</module>decode</value><doc>Option <code>plus</code>: Whether '+' is converted to space. The default
is true. If false, '+' is returned as it is.<newline/>The optional arguments <code>pos</code> and <code>len</code> may restrict the string
to process to this substring.</doc><arrow><optional>plus</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Url</module>encode</value><doc>Option <code>plus</code>: Whether spaces are converted to '+'. The default
is true. If false, spaces are converted to &quot;%20&quot;, and
only %xx sequences are produced.</doc><arrow><optional>plus</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><comment>URL-encoded parameters:<newline/>The following two functions create and analyze URL-encoded parameters.
Format: <code>name1=val1&amp;name2=val2&amp;...</code></comment><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Url</module>mk_url_encoded_parameters</value><doc>The argument is a list of (name,value) pairs. The result is the
single URL-encoded parameter string.</doc><arrow><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Url</module>dest_url_encoded_parameters</value><doc>The argument is the URL-encoded parameter string. The result is
the corresponding list of (name,value) pairs.
Note: Whitespace within the parameter string is ignored.
If there is a format error, the function fails.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></path></arrow></value></signature></type></module><module><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Html</module><type><signature><comment>Encodes characters that need protection by converting them to
entity references. E.g. <code>&quot;&lt;&quot;</code> is converted to <code>&quot;&amp;lt;&quot;</code>.
As the entities may be named, there is a dependency on the character
set.</comment><comment>Legacy functions:</comment><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Html</module>encode_from_latin1</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Html</module>decode_to_latin1</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><comment>These functions have a more general interface and should be preferred
in new programs.</comment><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Html</module>unsafe_chars_html4</value><doc>The string contains '&lt;', '&gt;', '&quot;', '&amp;' and the control characters
0-8, 11-12, 14-31, 127.</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></value><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Html</module>encode</value><doc>The input string that is encoded as <code>in_enc</code> is recoded to
<code>out_enc</code>, and the following characters are encoded as HTML
entity (<code>&amp;name;</code> or <code>&amp;#num;</code>):<list><item>The ASCII characters contained in <code>unsafe_chars</code></item><item>The characters that cannot be represented in <code>out_enc</code>. By
default (<code>out_enc=`Enc_usascii</code>), only ASCII characters can be
represented, and thus all code points &gt;= 128 are encoded as
HTML entities. If you pass <code>out_enc=`Enc_utf8</code>, all characters
can be represented.</item></list>For example, the string <code>&quot;(a&lt;b) &amp; (c&gt;d)&quot;</code> is encoded as
<code>&quot;(a&amp;lt;b) &amp;amp; (c&amp;gt;d)&quot;</code>.<newline/>It is required that <code>out_enc</code> is an ASCII-compatible encoding.<newline/>The option <code>prefer_name</code> selects whether named entities (e.g. <code>&amp;lt;</code>)
or numeric entities (e.g. <code>&amp;#60;</code>) are prefered.<newline/>The efficiency of the function can be improved when the same encoding
is applied to several strings. Create a specialized encoding function
by passing all arguments up to the unit argument, and apply this
function several times. For example:
<precode>             let my_enc = encode ~in_enc:`Enc_utf8 () in
             let s1' = my_enc s1 in
             let s2' = my_enc s2 in ...</precode></doc><arrow><label>in_enc</label><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netconversion/index.xml"><cmti name="Netconversion" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netconversion.cmti" digest="192a0e1fae2f882e5f06cf84e9f3da38"/></xml></base>Netconversion</root></identifier>encoding</type></resolved></path><arrow><optional>out_enc</optional><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netconversion/index.xml"><cmti name="Netconversion" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netconversion.cmti" digest="192a0e1fae2f882e5f06cf84e9f3da38"/></xml></base>Netconversion</root></identifier>encoding</type></resolved></path><arrow><optional>prefer_name</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>unsafe_chars</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></value><type><type><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Html</module>entity_set</type><poly_variant><fixed/><constructor>Html<constant/></constructor><constructor>Xml<constant/></constructor><constructor>Empty<constant/></constructor></poly_variant></type><value><value><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Html</module>decode</value><doc>The input string is recoded from <code>in_enc</code> to <code>out_enc</code>, and HTML
entities (<code>&amp;name;</code> or <code>&amp;#num;</code>) are resolved. The input encoding
<code>in_enc</code> must be ASCII-compatible.<newline/>By default, the function knows all entities defined for HTML 4 (this
can be changed using <code>entity_base</code>, see below). If other
entities occur, the function <code>lookup</code> is called and the name of
the entity is passed as input string to the function. It is
expected that <code>lookup</code> returns the value of the entity, and that this
value is already encoded as <code>out_enc</code>.
By default, <code>lookup</code> raises a <code>Failure</code> exception.<newline/>If a character cannot be represented in the output encoding,
the function <code>subst</code> is called. <code>subst</code> must return a substitute
string for the character.
By default, <code>subst</code> raises a <code>Failure</code> exception.<newline/>The option <code>entity_base</code> determines which set of entities are
considered as the known entities that can be decoded without
help by the <code>lookup</code> function: <code>`Html</code> selects all entities defined
for HTML 4, <code>`Xml</code> selects only <code>&amp;lt;</code>, <code>&amp;gt;</code>, <code>&amp;amp;</code>, <code>&amp;quot;</code>,
and <code>&amp;apos;</code>,
and <code>`Empty</code> selects the empty set (i.e. <code>lookup</code> is always called).</doc><arrow><label>in_enc</label><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netconversion/index.xml"><cmti name="Netconversion" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netconversion.cmti" digest="192a0e1fae2f882e5f06cf84e9f3da38"/></xml></base>Netconversion</root></identifier>encoding</type></resolved></path><arrow><label>out_enc</label><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netconversion/index.xml"><cmti name="Netconversion" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netconversion.cmti" digest="192a0e1fae2f882e5f06cf84e9f3da38"/></xml></base>Netconversion</root></identifier>encoding</type></resolved></path><arrow><optional>lookup</optional><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow><arrow><optional>subst</optional><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow><arrow><optional>entity_base</optional><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Netencoding" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netencoding.cmti" digest="1e3a4e766eb2eec3c2276a870dd7e697"/></xml></base>Netencoding</root>Html</module>entity_set</type></identifier></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></arrow></value></signature></type></module></unit>