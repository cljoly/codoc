<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></html></base>Netsys</root><digest>4a0ae4cc74f10e8667e3b629e6907079</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>netsys.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys</dir><digest>7aa342081fcb3f5c8474ef0281c2f57a</digest></source><doc>System calls missing in the <code>Unix</code> module</doc><comment><title level="1">Generic file descriptors</title></comment><comment>Not all OS provide generic read/write functions, or some emulation
layer does not allow to use a descriptor with read/write. In the
following functions, the style of the descriptor can be passed along
with the descriptor to select the right I/O method. Effectively,
the <code>fd_style</code> indicates which I/O function to call. Sometimes it is
mandatory to call this function, sometimes it is only a good advice
because the function provides the best interface for the kind of
descriptor.</comment><type><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type><doc>Some information what kind of operations are reasonable for descriptors:<list><item><code>`Read_write</code>: The descriptor is neither a socket not one of the
other special cases, so only read/write is possible if read/write
is possible at all. This style is also used if it is meaningless
to use data I/O like read/write at all.</item><item><code>`Recv_send(sockaddr,peeraddr)</code>: The descriptor is a connected socket.
recv/send are the preferred operations.</item><item><code>`Recvfrom_sendto</code>: The descriptor is an unconnected socket, and
it is possible to ask for addresses when exchanging data, so
recvfrom/sendto are the preferred operations.</item><item><code>`Recv_send_implied</code>: The descriptor is a socket with implied
connection. There are no socket addresses.
recv/send are the preferred operations. It is not possible to call
<code>getsockname</code> or <code>getpeername</code>.</item><item><code>`W32_pipe</code>: The descriptor is a proxy descriptor for a Win32 named
pipe as returned by <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_win32/index.xml"><cmti name="Netsys_win32" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_win32.cmti" digest="02161f9169b76f686b05a51ed2d9357c"/></xml></base>Netsys_win32</root></identifier>pipe_descr</value></resolved></element></reference>.</item><item><code>`W32_pipe_server</code>: The descriptor is a proxy descriptor for a Win32
pipe server as returned by
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_win32/index.xml"><cmti name="Netsys_win32" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_win32.cmti" digest="02161f9169b76f686b05a51ed2d9357c"/></xml></base>Netsys_win32</root></identifier>pipe_server_descr</value></resolved></element></reference>.</item><item><code>`W32_event</code>: The descriptor is a Win32 proxy descriptor for an event
as returned by <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_win32/index.xml"><cmti name="Netsys_win32" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_win32.cmti" digest="02161f9169b76f686b05a51ed2d9357c"/></xml></base>Netsys_win32</root></identifier>create_event</value></resolved></element></reference>. It is not possible to
read/write with these descriptors.</item><item><code>`W32_process</code>: The descriptor is a proxy descriptor for a Win32
process as returned by
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_win32/index.xml"><cmti name="Netsys_win32" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_win32.cmti" digest="02161f9169b76f686b05a51ed2d9357c"/></xml></base>Netsys_win32</root></identifier>create_process</value></resolved></element></reference>. It is not possible to read/write
with these descriptors.</item><item><code>`W32_input_thread</code>: The descriptor is a proxy descriptor for a
Win32-specific input thread
as returned by
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_win32/index.xml"><cmti name="Netsys_win32" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_win32.cmti" digest="02161f9169b76f686b05a51ed2d9357c"/></xml></base>Netsys_win32</root></identifier>create_input_thread</value></resolved></element></reference>.</item><item><code>`W32_output_thread</code>: The descriptor is a proxy descriptor for a
Win32-specific output thread
as returned by
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_win32/index.xml"><cmti name="Netsys_win32" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_win32.cmti" digest="02161f9169b76f686b05a51ed2d9357c"/></xml></base>Netsys_win32</root></identifier>create_output_thread</value></resolved></element></reference>.</item></list>Win32: For the exact meaning of proxy descriptors, please see
<reference><element><root>Netsys_win32</root></element></reference>. In short, a proxy descriptor is an abstract handle
for the I/O object. The handle itself cannot be used for I/O, however,
but only some specialized function. The proxy descriptor can only
be used to dereference the I/O object. Note that the following functions
like <code>gread</code> and <code>gwrite</code> automatically look up the I/O object behind
the proxy and call the right I/O function.</doc><poly_variant><fixed/><constructor>Read_write<constant/></constructor><constructor>Recv_send<tuple><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>sockaddr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>sockaddr</type></resolved></path></tuple></constructor><constructor>Recv_send_implied<constant/></constructor><constructor>Recvfrom_sendto<constant/></constructor><constructor>W32_pipe<constant/></constructor><constructor>W32_pipe_server<constant/></constructor><constructor>W32_event<constant/></constructor><constructor>W32_process<constant/></constructor><constructor>W32_input_thread<constant/></constructor><constructor>W32_output_thread<constant/></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>get_fd_style</value><doc>Get the file descriptor style</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>gread</value><doc><code>gread fd_style fd s pos len</code>: Reads up to <code>len</code> bytes from
descriptor <code>fd</code> which is supposed to support the I/O style
<code>fd_style</code>, i.e. the right system call (<code>read</code>, <code>recv</code>,
<code>recvfrom</code>) is chosen to read from the descriptor.
After <code>n &lt;= len</code> bytes have been read these are put into
string <code>s</code> at positions <code>pos</code> to <code>pos+n-1</code>, and <code>n</code> is returned.
The function can fail with any I/O exception defined for the
actually performed I/O operation. Whether the operation is blocking
or non-blocking depends on the descriptor.<newline/>If <code>len&gt;0</code> but <code>n=0</code> the end of the input data is reached.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>blocking_gread</value><doc><code>let p = blocking_gread fd_style fd s pos len</code>:
Like <code>gread</code> up to <code>len</code> bytes are read from <code>fd</code> and stored in <code>s</code>.
If the I/O operation is blocking but the descriptor is in
non-blocking mode, this function blocks until the operation can
be performed. If the operation is interrupted by a signal it is
automatically restarted.<newline/>If <code>n &lt; len</code> the end of the input data is reached (where <code>n</code> is the
returned number).<newline/>See <code>wait_until_readable</code> below for further information which
types of descriptors can be handled in non-blocking mode.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>really_gread</value><doc><code>really_read fd_style fd s pos len</code>: Reads exactly <code>len</code> bytes from <code>fd</code>
and stores them in <code>s</code> starting at <code>pos</code>. If the end of file condition
is seen before <code>len</code> bytes are read, the exception <code>End_of_file</code>
is raised, and it is unspecified how many bytes have been stored in
<code>s</code>. Like <code>blocking_gread</code>, non-blocking descriptors are forced
to block until the operation becomes possible, and interruptions by
signals are handled.<newline/>See <code>wait_until_readable</code> below for further information which
types of descriptors can be handled in non-blocking mode.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>gwrite</value><doc><code>gwrite fd_style fd s pos len</code>: Writes up to <code>len</code> bytes to
descriptor <code>fd</code> which is supposed to support the I/O style
<code>fd_style</code>, i.e. the right system call (<code>write</code>, <code>send</code>,
<code>sendto</code>) is chosen to write to the descriptor.
. The <code>n &lt;= len</code> written bytes are taken from string <code>s</code>,
starting at position <code>pos</code> until <code>pos+n-1</code>. The number <code>n</code> is
returned. The function can fail with any I/O exception defined for the
actually performed I/O operation. Whether the operation is blocking
or non-blocking depends on the descriptor.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>really_gwrite</value><doc><code>really_write fd_style fd s pos len</code>: Writes exactly the <code>len</code> bytes
from <code>s</code> to <code>fd</code> starting at <code>pos</code>.
If the I/O operation is blocking but the descriptor is in
non-blocking mode, this function blocks until the operation can
be performed. If the operation is interrupted by a signal it is
automatically restarted.<newline/>See <code>wait_until_writable</code> below for further information which
types of descriptors can be handled in non-blocking mode.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><exception><exception><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>Shutdown_not_supported</exception><doc>See <code>gshutdown</code></doc></exception><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>gshutdown</value><doc><code>gshutdown fd_style fd cmd</code>: If there is the possibility to shut down
the connection for this kind of descriptor, the shutdown is tried.
It is possible that the function raises the <code>EAGAIN</code> Unix error if
the shutdown operation is non-blocking, and currently not possible.
It is suggested to wait until the descriptor is writable, and to try
again then.<newline/>If there is no shutdown operation for this kind of descriptor, the
exception <code>Shutdown_not_supported</code> is raised. In this case it is
usually sufficient to close the descriptor (<code>gclose</code>, see below),
and when all descriptors to the resource are closed, the resource
is shut down by the OS.<newline/>Details by <code>fd_style</code>:<list><item><code>`Recv_send</code> and <code>`Recv_send_implied</code>: The socket is shut
down as requested by <code>Unix.shutdown</code>. This only triggers the
shutdown, but does not wait until it is completed. Also,
errors are usually not immediately reported.</item><item><code>`W32_pipe</code>: It is only possible to request <code>SHUTDOWN_ALL</code>
for these descriptors. For other shutdown types, the error
<code>EPERM</code> is reported. The shutdown is synchronous and completed
when the function returns.</item><item><code>`W32_pipe_server</code>: It is only possible to request <code>SHUTDOWN_ALL</code>
for these descriptors. For other shutdown types, the error
<code>EPERM</code> is reported. A shutdown means here to stop accepting
new connections. The shutdown is synchronous and completed
when the function returns.</item><item><code>`W32_output_thread</code>: It is only possible to request <code>SHUTDOWN_SEND</code>
for these descriptors. A <code>SHUTDOWN_ALL</code> is also interpreted as
<code>SHUTDOWN_SEND</code>, and a <code>SHUTDOWN_RECEIVE</code> is ignored.
A shutdown means here that the EOF is appended
to the output buffer, and when the output thread has written the
buffer contents, the underlying descriptor (not <code>fd</code>!) will be
closed. The shutdown operation is non-blocking. If it is not
possible at the moment of calling, the error <code>EAGAIN</code> is reported.</item><item>Other styles raise <code>Shutdown_not_supported</code>.</item></list></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>shutdown_command</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_readable</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_writable</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_prird</value><doc>Test whether the descriptor would not block if one of the input,
output, or priority input operations were done.<newline/>On POSIX systems the tests work for a wide variety of descriptor
types (but not for regular files which are assumed to be always
readable and writable).
If the <code>poll</code> interface is available it is preferred over the
<code>select</code> interface to conduct the test.<newline/>On Win32, the tests are limited to sockets, named pipes and
event objects. (The latter two only in the form provided by
<reference><element><root>Netsys_win32</root></element></reference>, see there.)<newline/>Generally, if the blocking status cannot be determined for
a class of I/O operations, the functions return <code>true</code>, in
the hope that it is better to block than to never conduct
the operation.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>wait_until_readable</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>wait_until_writable</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>wait_until_prird</value><doc>Wait until an operation for a single descriptor becomes possible.
The float argument is the timeout (negative value means no timeout).
Returns whether the operation is possible (<code>true</code>). Otherwise,
there was a timeout (<code>false</code>).<newline/>On POSIX systems this works for a wide variety of descriptor
types (but not for regular files which are assumed to be always
readable and writable).
If the <code>poll</code> interface is available it is preferred over the
<code>select</code> interface to wait for I/O. The functions also catch
interruptions by signals.<newline/>On Win32, waiting is limited to sockets, named pipes and
event objects. (The latter two only in the form provided by
<reference><element><root>Netsys_win32</root></element></reference>, see there.)<newline/>Generally, if waiting is not supported for
a class of I/O operations, the functions return immediately <code>true</code>, in
the hope that it is better to block than to never conduct
the operation.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>gclose</value><doc>Shuts down the system object referenced by the descriptor so far
possible, and closes the descriptor.<newline/>Errors are logged to <reference><element><root>Netlog</root></element></reference> as <code>`Crit</code> events, and
do not generate exceptions.<newline/>The exact semantics of the close operation varies from descriptor
style to descriptor style. Generally, <code>gclose</code> assumes that all
I/O is done, and all buffers are flushed, and that one can tear
down the underlying communication circuits. <code>gclose</code> is always
the right choice when the I/O channel needs to be aborted after a
fatal error, and it does not matter whether errors occur or not.
If a data connection needs to be orderly closed (i.e. without
data loss), one should first try to finish the communication,
either by protocol means (e.g. wait for ACK messages), or by
calling <code>gshutdown</code> first (see above).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><comment><title level="1">Functions for sockets</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>wait_until_connected</value><doc>After a non-blocking connect has been initiated, this function can be
used to wait until (1) the connect is successful, or (2) the connect
fails, or (3) the operation times out. The <code>float</code> argument is the
timeout value (negative value means no timeout).
The function returns <code>true</code> for the cases (1) and (2), and <code>false</code>
for case (3). The cases (1) and (2) can be further analyzed by
calling <code>connect_check</code> (see below).<newline/>On POSIX, this function is identical to <code>wait_until_writable</code>. On
Win32 the wait condition is slightly different.<newline/>On Win32, this function also tolerates client proxy descriptors for
Win32 named pipes. However, there is no waiting - the function
immediately returns.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>connect_check</value><doc>Tests whether the socket is connected with the peer after calling
<code>Unix.connect</code>. If the socket is connected, the function returns normally.
Otherwise, the current socket error is raised as a <code>Unix.Unix_error</code>
exception. This function is intended to be called after a
non-blocking connect has been initiated, and the success or error
is indicated (e.g. after <code>wait_until_connected</code> returns).<newline/>Side effect: The per-socket error code may be reset.<newline/>On Win32, this function also tolerates client proxy descriptors for
Win32 named pipes. However, there is no real check - the function
immediately returns.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>domain_of_inet_addr</value><doc>Returns the socket domain of Internet addresses, i.e. whether the
address is IPv4 or IPv6</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>socket_domain</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>protostring_of_inet_addr</value><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>inet_addr_of_protostring</value><doc>Converts an IP address to the 4 bytes (IPv4) or 16 bytes (IPv6)
representation in network byte order, and vice-versa</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>getpeername</value><doc>like <code>Unix.getpeername</code>, but errors are fixed up. <code>ENOTCONN</code> is
ensured when the socked is unconnected or shut down.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>sockaddr</type></resolved></path></arrow></value><comment><title level="1">Helper functions</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_absolute</value><doc>Whether this file path is absolute. Works for Unix and Win32.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>restart</value><doc><code>restart f arg</code> calls <code>f arg</code>, and restarts this call if the
exception <code>Unix_error(EINTR,_,_)</code> is caught.<newline/>Note that there are some cases where this handling of <code>EINTR</code> is
not sufficient:<list><item>Functions that have a timeout argument like <code>Unix.select</code>: When
<code>EINTR</code> is caught the timeout should be adjusted.</item><item><code>Unix.connect</code> with a blocking descriptor because this is not
well-enough specified by POSIX</item></list></doc><arrow><arrow><var>a</var><var>b</var></arrow><arrow><var>a</var><var>b</var></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>restart_tmo</value><doc><code>restart_tmo f tmo</code> calls <code>f</code> with a timeout argument <code>tmo</code>, and
restarted the call if the exception <code>Unix_error(EINTR,_,_)</code> is caught.
In the restart case, the timeout argument is reduced by the
already elapsed time.<newline/>Negative timeout arguments are interpreted as &quot;no timeout&quot;.</doc><arrow><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><var>b</var></arrow><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><var>b</var></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>restarting_select</value><doc>A wrapper around <code>Unix.select</code> that handles the <code>EINTR</code> condition.<newline/>Note: This function calls <code>Unix.select</code> and shares all pros and cons
with <code>Unix.select</code>. In particular, the OS often sets a limit on the
number (and/or the numeric value) of the descriptors (e.g. for
Linux it is 1024, for Windows it is 64). On Ocaml 3.11 the Windows
version of <code>Unix.select</code> includes some support for other types
of descriptors than sockets.</doc><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><tuple><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path></tuple></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>sleep</value><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>restarting_sleep</value><doc>Sleep for the passed time. <code>restarting_sleep</code> additionally handles
<code>EINTR</code>.</doc><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>unix_error_of_code</value><doc>Converts an integer error into the corresponding variant</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>error</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>int64_of_file_descr</value><doc>Returns the file descriptor as int64 number. Works for all OS.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>int64</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>string_of_fd</value><doc>Return a string describing the descriptor (for debugging)</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>string_of_sockaddr</value><doc>Returns a human-readable string describing the address
(for debug messages)<newline/>Note that the reverse (parsing such a string) can be
accomplished with <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netsockaddr/index.xml"><cmti name="Netsockaddr" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netsockaddr.cmti" digest="514bc9294568dc3facaf49b96623c337"/></xml></base>Netsockaddr</root></identifier>socksymbol_of_string</value></resolved></element></reference> and
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/uq_resolver/index.xml"><cmti name="Uq_resolver" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/uq_resolver.cmti" digest="2f7ec6d31af7dab778cb2db440a404ac"/></xml></base>Uq_resolver</root></identifier>sockaddr_of_socksymbol</value></resolved></element></reference>.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>sockaddr</type></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>string_of_fd_style</value><doc>Returns a string describing the fd style (debugging)</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>fd_style</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_stdin</value><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_stdout</value><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_stderr</value><doc>Returns whether the descriptors are stdin/stdout/stderr</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>set_close_on_exec</value><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>clear_close_on_exec</value><doc>Working versions of the functions with the same name in <code>Unix</code></doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><external><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>_exit</value><doc>Exit the program immediately without running the atexit handlers.
The argument is the exit code, just as for <code>exit</code>.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><primitive>netsys__exit</primitive></external><comment><title level="1">IP addresses</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>logand_inet_addr</value><doc>Returns the bitwise AND of the two argument addresses</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>logor_inet_addr</value><doc>Returns the bitwise OR of the two argument addresses</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>logxor_inet_addr</value><doc>Returns the bitwise XOR of the two argument addresses</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>lognot_inet_addr</value><doc>Returns the bitwise NOT of the argument address</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_ipv4_inet_addr</value><doc>Whether the address is an IPv4 address</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_ipv6_inet_addr</value><doc>Whether the address is an IPv6 address</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>is_multicast_inet_addr</value><doc>Whether the address is a multicast address (either IPv4 or IPv6)</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><comment><title level="1">Multicast Functions</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>mcast_set_loop</value><doc>Whether sent multicast messages are received by the sending host</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>mcast_set_ttl</value><doc>Set TTL/hops value</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>mcast_add_membership</value><doc>Join a multicast group.<newline/>First inet addr is the group to join. Second inet addr selects the
network interface (or <code>Unix.inet_addr_any</code>).</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>mcast_drop_membership</value><doc>Leave a multicast group.<newline/>First inet addr is the group to leave. Second inet addr selects the
network interface (or <code>Unix.inet_addr_any</code>).</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>inet_addr</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><comment><title level="1">Profiling</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>moncontrol</value><doc>Interface to the <code>moncontrol</code> routine of the GPROF profiler.
<code>moncontrol false</code> stops profiling; <code>moncontrol true</code> starts
profiling again.<newline/>This is a no-op if the program is not compiler for profiling.</doc><arrow><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><comment><title level="1">Deprecated</title></comment><comment>The following interfaces have been replaced by more generic implementations
that work on more platforms.</comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>blocking_read</value><doc>Same as <code>blocking_gread `Read_write</code></doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>really_read</value><doc>Same as <code>really_gread `Read_write</code></doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>really_write</value><doc>Same as <code>really_gwrite `Read_write</code></doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><comment>The following interfaces have been moved to <reference><element><root>Netsys_posix</root></element></reference>.</comment><type><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_open_flag</type><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_posix/index.xml"><cmti name="Netsys_posix" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_posix.cmti" digest="f5b674538a41e016bb4f0e731d114657"/></xml></base>Netsys_posix</root></identifier>shm_open_flag</type></resolved></path><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_open_flag</type>SHM_O_RDONLY</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_open_flag</type>SHM_O_RDWR</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_open_flag</type>SHM_O_CREAT</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_open_flag</type>SHM_O_EXCL</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_open_flag</type>SHM_O_TRUNC</constructor></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>have_posix_shm</value><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_open</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_open_flag</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>shm_unlink</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><comment><title level="1">Further Documentation</title></comment><comment><title level="2">How to orderly close I/O channels</title><newline/>After reading from uni-directional descriptors, and seeing the
EOF, it is usually sufficient to call <code>gclose</code> to free OS resources.<newline/>After writing to uni-directional descriptors one should call
<code>gshutdown</code> to send an EOF (<code>SHUTDOWN_SEND</code>). For some descriptors
one will get the exception <code>Shutdown_not_supported</code> which can be
ignored in this context The <code>gshutdown</code> function cannot,
however, report in all cases whether the operation was successful.
As a rule of thumb, error reporting works for local data connections,
but not always for remote connections, and there is no way to fix
this. After writing EOF, call <code>gclose</code> to free OS resources.<newline/>For bidirectional connections, it is even more complicated. If the
connection is local, a bidirectional connection behaves much like a pair
of unidirectional connections. However, in the network case, we have
to go down to the protocol level.<newline/>For TCP the golden rule is that the client initiates the connection,
and the client finishes the connection. The case that the server
finishes the connection is not well-specified - or better, the server needs
the ACK from the client after triggering the connection termination.
In practice we have the cases:<newline/><list><item>Client sends EOF, and server replies with EOF: This is the normal
case for which TCP is designed. Client code can invoke
<code>gshutdown</code> with <code>SHUTDOWN_SEND</code> and then waits until the EOF from
the server arrives,
and then <code>gclose</code>s the descriptor. It may happen that the client
gets an error if some problem occurs, so this is reliable from the
perspective of the client. The server first sees the EOF from the
client, and then responds with another <code>gshutdown</code>, followed by
<code>gclose</code>. From the server's perspective it does not matter whether
the operation results in an error or not - the client has lost
interest anyway.</item><item>Client sends EOF, and server replies with data, and then EOF.
Here, the client has to read the final data, and then wait for the
server's EOF after sending its own EOF. On the server's side,
some data is written before the final EOF. The question is how
the server can be sure that the data really arrived. Unfortunately,
there is no way to do so. The server may not get all errors because
these may arrive at the server computer after <code>gshutdown</code>. There
is no way to fix this. (One should better fix the application protocol.
Note
that even prominent researchers trapped into this problem. For example,
the first version of HTTP had this problem.)</item><item>Server sends EOF, and client replies with EOF: This is the difficult
case. Here, the server wants to be sure that the data sent immediately
before its EOF really arrives at the client. After <code>gshutdown</code>
it is forbidden to immediately <code>gclose</code>, because this may result
in a connection reset. Instead, the server has to wait for the
client's EOF. (This is called &quot;lingering&quot;.) If the client's EOF is
seen one can <code>gclose</code>.</item><item>Server sends EOF, and client replies with data, followed by EOF:
I admit I don't know whether TCP can handle this somehow.</item></list></comment><comment><title level="1">Debugging</title></comment><module><module><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>Debug</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>Debug</module>enable</value><doc>Enables <reference><element><root>Netlog</root></element></reference>-style debugging</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value></signature></type></module><stop/><value><value><root><base><xml src="index.xml"><cmti name="Netsys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys.cmti" digest="4a0ae4cc74f10e8667e3b629e6907079"/></xml></base>Netsys</root>set_moncontrol</value><arrow><arrow><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value></unit>