<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></html></base>Netsys_sem</root><digest>7112f0b1d11ab0fe1abd7ca5aa7d7cdf</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>netsys_sem.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys</dir><digest>68a0ba452691274de67ec9332f8c8f34</digest></source><doc><title level="1">Generic anonymous semaphores</title></doc><comment>This module purely exists to also support &quot;kind of anonymous&quot;
sempahores on MacOS X (which only has named semaphores). On
other OS, it is just a wrapper for the functions in
<reference><element><root>Netsys_posix</root></element></reference>.<newline/>Note that on OS X named semaphores have a max name length of
31 characters (including the / at the beginning), and that
<code>Netsys_sem</code> uses 9 characters for its own purposes, leaving
22 characters for the prefix. (On other OS this is less restricted.)</comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>have_anon_semaphores</value><doc>Returns <code>true</code> if anonymous semaphores are supported on this
system, either natively or emulated via named semaphores.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><comment><bold>Constants.</bold></comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_value_max</value><doc>The maximum value of a semaphore, but at most <code>max_int</code></doc><path><resolved><identifier><type>int</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_size</value><doc>The size of an anonymous semaphore in bytes (<code>sizeof(sem_t)</code>)</doc><path><resolved><identifier><type>int</type></identifier></resolved></path></value><comment><bold>Types.</bold></comment><type><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</type><doc>The container of the semaphore is the shared memory object</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>prefix</type><doc>A name starting with a slash. Must not contain further slashes</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></type><type><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>anon_semaphore</type></type><type><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_open_flag</type><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_posix/index.xml"><cmti name="Netsys_posix" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_posix.cmti" digest="f5b674538a41e016bb4f0e731d114657"/></xml></base>Netsys_posix</root></identifier>sem_open_flag</type></resolved></path><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_open_flag</type>SEM_O_CREAT</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_open_flag</type>SEM_O_EXCL</constructor></constructor></variant></type><comment><bold>Container functions.</bold></comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</value><doc><code>container prefix</code>: The prefix shall identify the container uniquely.
Once can e.g. use the path of the shared memory object. The prefix
is used to construct names for persistent objects.<newline/><bold>Note that containers have kernel persistence! They are not
automatically deleted when the process finishes. Call <code>drop</code>
to delete containers, or <code>create_container</code> to force their
creation as fresh objects.</bold><newline/>If the container does not exist yet, it is created. Otherwise the
container is just opened.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>prefix</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>create_container</value><doc><code>create_container prefix</code>: Like <code>container</code>, but the container is
always created. A previous instance is first deleted.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>prefix</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>prefix</value><doc>Return the prefix</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>prefix</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>drop</value><doc>Drop the semaphores in this container, and delete the container.<newline/>This function is a no-op if the OS supports anonymous semaphores
directly (because in this case the deletion of the container will
automatically destroy the semaphores).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><comment>Note that there is a general problem when a container is deleted
or dropped by a process while it is still being used by another one.
This will generally not generate errors, but can cause a lot of
confusion, because the processes will partly access the same
semaphores, and partly different semaphores.</comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>unlink</value><doc>Unlinks the identified container if it exists, and unlinks all
possible named semaphores.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>prefix</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><comment><bold>Semaphore functions.</bold></comment><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_init</value><doc><code>sem_init cont mem pos pshared init_value</code>: Initializes the memory
at position <code>pos</code> to <code>pos + sem_size() - 1</code> as anonymous semaphore.
If <code>pshared</code> the semaphore is shared between processes.
<code>init_value</code> is the initial non-negative value (max is
<code>sem_value_max</code>).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_types/index.xml"><cmti name="Netsys_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_types.cmti" digest="67b26630eaf4decaa483864d4d00a3a2"/></xml></base>Netsys_types</root></identifier>memory</type></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>anon_semaphore</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_destroy</value><doc>Destroys the anonymous semaphore</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>anon_semaphore</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>as_sem</value><doc><code>as_sem mem pos</code>: Interprets the memory at position <code>pos</code>
to <code>pos + sem_size() - 1</code> as anonymous semaphore.
The memory region must already have been initialized.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>container</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_types/index.xml"><cmti name="Netsys_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_types.cmti" digest="67b26630eaf4decaa483864d4d00a3a2"/></xml></base>Netsys_types</root></identifier>memory</type></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>anon_semaphore</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_getvalue</value><doc>Returns the value of the semaphore. If the value is bigger than
what can be represented as <code>int</code>, an <code>EINVAL</code> error is returned.<newline/>The returned value is non-negative - if the underlying POSIX
function reports a negative value zero is returned instead.<newline/><bold>Unavailable on MacOS.</bold></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>anon_semaphore</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_post</value><doc>Unlocks the semaphore (increases the value by 1)</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>anon_semaphore</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_wait_behavior</type><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_posix/index.xml"><cmti name="Netsys_posix" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_posix.cmti" digest="f5b674538a41e016bb4f0e731d114657"/></xml></base>Netsys_posix</root></identifier>sem_wait_behavior</type></resolved></path><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_wait_behavior</type>SEM_WAIT_BLOCK</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_wait_behavior</type>SEM_WAIT_NONBLOCK</constructor></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_wait</value><doc>Locks the semaphore (decreases the value by 1). If the semaphore
value is already zero, and <code>SEM_WAIT_BLOCK</code> is given, the function
waits until another process or thread posts. If <code>SEM_WAIT_NONBLOCK</code>
the error <code>EAGAIN</code> is returned.<newline/><code>sem_wait</code> may be interrupted by signals.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>anon_semaphore</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>sem_wait_behavior</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><module><module><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>Debug</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>Debug</module>enable</value><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value></signature></type></module><stop/><value><value><root><base><xml src="index.xml"><cmti name="Netsys_sem" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_sem.cmti" digest="7112f0b1d11ab0fe1abd7ca5aa7d7cdf"/></xml></base>Netsys_sem</root>force_emulation</value><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value></unit>