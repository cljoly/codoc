<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></html></base>Telnet_client</root><digest>0f3be7582df1370ca3c2f8f1803217af</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Queue<digest>06a89c77a23c672d34cb97e6dfc5f30d</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><source><file>telnet_client.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient</dir><digest>fb1004d5bf8bd008377ba0e1ecd543fe</digest></source><doc>Telnet client<newline/>This is a Telnet client providing the basic Telnet services. It
supports sending and receiving data (asynchronously), and the
negotiation of Telnet options, but it does not implement any option.</doc><exception><exception><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>Telnet_protocol</exception><doc>Wrapper for exceptions that already passed the exception handler.</doc><arguments><path><resolved><identifier><type>exn</type></identifier></resolved></path></arguments></exception><type><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type><doc>A <code>telnet_command</code> is the interpretation of the octets in a Telnet
session, i.e. it is one level above the octet stream. See RFC 854
for an explanation what the commands mean. <code>Telnet_data</code> represents
the data chunks between the commands. Note that you do not need
to double octets having value 255; this is done automatically.
<code>Telnet_unknown</code> represents any command not covered by RFC 854, for
example the End-of-record-mark (introduced in RFC 885) would be
<code>Telnet_unknown '\239'</code>. <code>Telnet_eof</code> represents the end of the octet
stream, useable in both directions. <code>Telnet_timeout</code> is added to the
input queue if I/O has not been happened for the configured period
of time.</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_data</constructor><doc>User data</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_nop</constructor><doc>No operation</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_dm</constructor><doc>data mark</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_brk</constructor><doc>break</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_ip</constructor><doc>interrupt process</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_ao</constructor><doc>abort output</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_ayt</constructor><doc>are you there?</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_ec</constructor><doc>erase character</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_el</constructor><doc>erase line</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_ga</constructor><doc>Go ahead</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_sb</constructor><doc>Begin of subnegotiation</doc><arguments><path><resolved><identifier><type>char</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_se</constructor><doc>End of subnegotation</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_will</constructor><doc>Acknowledges that option is in effect</doc><arguments><path><resolved><identifier><type>char</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_wont</constructor><doc>Acknowledges that option is rejected</doc><arguments><path><resolved><identifier><type>char</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_do</constructor><doc>Requests to turn on an option</doc><arguments><path><resolved><identifier><type>char</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_dont</constructor><doc>Requests to turn off an option</doc><arguments><path><resolved><identifier><type>char</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_unknown</constructor><doc>Unknown command</doc><arguments><path><resolved><identifier><type>char</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_eof</constructor><doc>End of file</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type>Telnet_timeout</constructor><doc>Timeout event</doc></constructor></variant></type><type><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_options</type><doc><code>telnet_options</code>: modifies the behaviour of the client. Do not mix these
options up with the options negotiated with the remote side.<newline/><list><item><code>connection_timeout</code>: After this period of time (in seconds) a
<code>Telnet_timeout</code> pseudo-command is added to
the input queue, and the connection is
aborted.</item><item><code>verbose_input</code>: Enables printing of input events to <reference><element><resolved><module><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netlog/index.xml"><cmti name="Netlog" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netlog.cmti" digest="2441459e41ceb77fc72d5714e0508958"/></xml></base>Netlog</root></identifier>Debug</module></resolved></element></reference>.</item><item><code>verbose_output</code>: Enables printing of output events to <reference><element><resolved><module><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netlog/index.xml"><cmti name="Netlog" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netlog.cmti" digest="2441459e41ceb77fc72d5714e0508958"/></xml></base>Netlog</root></identifier>Debug</module></resolved></element></reference></item></list></doc><record><field><field><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_options</type>connection_timeout</field><path><resolved><identifier><type>float</type></identifier></resolved></path></field><field><field><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_options</type>verbose_input</field><path><resolved><identifier><type>bool</type></identifier></resolved></path></field><field><field><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_options</type>verbose_output</field><path><resolved><identifier><type>bool</type></identifier></resolved></path></field></record></type><type><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type><doc><code>telnet_negotiated_option</code>: names for the most common options, and
the generic name <code>Telnet_option</code> for other options.</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_binary</constructor><doc>see RFC 856</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_echo</constructor><doc>see RFC 857</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_suppress_GA</constructor><doc>see RFC 858</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_status</constructor><doc>see RFC 859</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_timing_mark</constructor><doc>see RFC 860</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_ext_opt_list</constructor><doc>see RFC 861</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_end_of_rec</constructor><doc>see RFC 885</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_window_size</constructor><doc>see RFC 1073</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_term_speed</constructor><doc>see RFC 1079</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_term_type</constructor><doc>see RFC 1091</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_X_display</constructor><doc>see RFC 1096</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_linemode</constructor><doc>see RFC 1184</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_flow_ctrl</constructor><doc>see RFC 1372</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_auth</constructor><doc>see RFC 1416</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_new_environ</constructor><doc>see RFC 1572 and 1571</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type>Telnet_option</constructor><doc>all other options</doc><arguments><path><resolved><identifier><type>int</type></identifier></resolved></path></arguments></constructor></variant></type><type><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_option_state</type><doc>An option has one of three states:<list><item><code>Not_negotiated</code>: There was no negotiation about the option. This means
that the option is turned off (but this client is allowed to reject
it explicitly)</item><item><code>Accepted</code>: Both sides have accepted the option.</item><item><code>Rejected</code>: One side has rejected the option. This also means that the
option is off, but the client refuses to send further acknoledgements
that the option is off (to avoid endless negotiation loops).</item></list></doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_option_state</type>Not_negotiated</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_option_state</type>Accepted</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_option_state</type>Rejected</constructor></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>char_of_option</value><doc>Converts the option name to the character representing it on the
octet-stream level.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>char</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>option_of_char</value><doc>Converts a character representing an option to the internal option
name.</doc><arrow><path><resolved><identifier><type>char</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_connector</type><doc>Connectors:<list><item><code>Telnet_connect(host,port)</code>: The client connects to this port.</item><item><code>Telnet_socket s</code>: The client uses an already connected socket.</item></list>Why <code>Telnet_socket</code>? Telnet is a symmetrical protocol; client and servers
implement the same protocol features (the only difference is the
environment: a client is typically connected with a real terminal; a server
is connected with a pseudo terminal). This simply means that this
implementation of a client can also be used as a server implementation.
You need only to add code which accepts new connections and which passes
these connections over to a <code>telnet_session</code> object via <code>Telnet_socket</code>.</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_connector</type>Telnet_connect</constructor><arguments><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_connector</type>Telnet_socket</constructor><arguments><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></arguments></constructor></variant></type><class><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class><doc>A telnet session</doc><signature><comment>Overwiew<newline/>The <code>telnet_session</code> object has two queues, one for arriving data,
one for data to send.
Once the session object is attached to an event system, it connects
to the remote peer, and processes the queues. Input is appended to
the input queue; output found on the output queue is sent to the
other side.
If input arrives, a callback function is invoked.
You may close the output side of the socket by putting <code>Telnet_eof</code>
onto the output queue.
Once the EOF marker has been received, a <code>Telnet_eof</code> is appended to
the input queue, and the connection is closed (completely). The
session object detaches from the event system automatically in this
case.<newline/><bold>Hints</bold><newline/>Set an input handler as callback function in the session object.
The input handler is called when new input data have been arrived.
It should inspect the input queue, process the queue as much as
possible, and it should remove the processed items from the queue.
While processing, it may add new items to the output queue.<newline/>If you are not within the callback function and add items to the
output queue, the session object will not detect that there are
new items to send - unless you invoke the <code>update</code> method.<newline/>If you want option negotiation, it is the simplest way to use
the special option negotiation methods. Configure the options
as you want (invoking <code>enable</code>, <code>disable</code> etc), but do not forget
to modify the way input is processed. Every <code>Telnet_will</code>, <code>_wont</code>,
<code>_do</code>, and <code>_dont</code> command must be passed to <code>process_option_command</code>.</comment><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>set_connection</method><doc>Sets the host name and the port of the remote server to contact.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_connector</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>set_event_system</method><doc>Sets the event system to use. By default, a private event system
is used.</doc><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/unixqueue/index.xml"><cmti name="Unixqueue" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/unixqueue.cmti" digest="5ec5f57d46c5b3e908696c79a59232d4"/></xml></base>Unixqueue</root></identifier>event_system</class_type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>set_callback</method><doc>Sets the callback function. This function is called after new
commands have been put onto the input queue.
The argument passed to the callback function indicates whether
a 'Synch' sequence was received from the remote side or not.<newline/><bold>Note Synch:</bold> If the client sees a data mark command it will assume
that it is actually a Synch sequence. The client automatically
discards any <code>Telnet_data</code> commands from the input queue (but not
<code>Telnet_data</code>s inside subnegotiations). The data mark command
itself remains on the queue.</doc><arrow><arrow><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>set_exception_handler</method><doc>Sets the exception handler. Every known error condition is
caught and passed to the exception handler.
The exception handler can do whatever it wants to do. If it
raises again an exception, the new exception is always propagated
up to the caller (whoever this is). Often the caller is the
event system scheduler (i.e. <code>Unixqueue.run</code>); see the documention
there.<newline/>If you do not set the exception handler, a default handler is
active. It first resets the session (see method <code>reset</code>), and
then wraps the exception into the <code>Telnet_protocol</code> exception,
and raises this exception again.</doc><arrow><arrow><path><resolved><identifier><type>exn</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>output_queue</method><doc>The queue of commands to send to the remote side. If you add new
commands to this queue, do not forget to invoke the <code>update</code>
method which indicates to the event system that new data to
send is available.
After commands have been sent, they are removed from the queue.</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/queue/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/queue/index.xml"><cmti name="Queue" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/queue.cmti" digest="06a89c77a23c672d34cb97e6dfc5f30d"/></xml></html></base>Queue</root></identifier>t</type></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type></identifier></resolved></path></path></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>input_queue</method><doc>The queue of commands received from the remote side. This class
only adds commands to the queue (and invokes the callback
function). The user of this class is responsible for removing
commands from the queue which have been processed.</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/queue/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/queue/index.xml"><cmti name="Queue" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/queue.cmti" digest="06a89c77a23c672d34cb97e6dfc5f30d"/></xml></html></base>Queue</root></identifier>t</type></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type></identifier></resolved></path></path></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>get_options</method><doc>Get the configuration options.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_options</type></identifier></resolved></path></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>set_options</method><doc>Set the configuration options.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_options</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>reset</method><doc>Closes the connection immediately and empties all queues.
All negotiated options are reset, too.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><comment>Telnet options<newline/>The following methods deal with Telnet protocol options. These
are negotiated between local and remote side by the Will, Won't,
Do and Don't commands.<newline/>The &quot;local&quot; options describe the modification of the behaviour
of the local side; the &quot;remote&quot; options describe the modifications
of the remote side. Both set of options are independent.
This object may track the set of accepted and rejected options
if the following methods are used; but this works only if
the <code>Telnet_will</code>, <code>_wont</code>, <code>_do</code>, and <code>_dont</code> commands received from
the remote side are processed by <code>process_option_command</code>. So
you need to invoke this method for the mentioned commands in
your command interpretation loop.<newline/>The idea is: If you <bold>enable</bold> an option, it is possible to
switch it on. If the remote side requests the option to be enabled,
the request will be acknowledged. If the remote side does not
request the option, it remains off.<newline/>You can also actively demand an option (<code>offer_local_option</code>,
<code>request_remote_option</code>); this is of course only possible if
the option is already enabled. In this case the client tries
actively to switch it on.<newline/>You can also <bold>disable</bold> an option. If the option is on, the
client actively rejects the option; following the Telnet protocol
this is always possible (rejections cannot be rejected).<newline/>The <code>reset</code> methods are somewhat dangerous. They simply reset
the internal state of the client, but do not negotiate. This
possibility was added to allow the Timing Mark option to send
again timing marks even if the previous timing marks have
already been accepted. After <code>reset</code>, the client thinks the
option was never negotiated; but nothing is done to tell
the remote side about this.<newline/><code>option_negotiation_is_over</code>: true if no option negotiation is
pending (i.e. nothing has still to be acknowledged).</comment><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>enable_local_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>enable_remote_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>disable_local_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>disable_remote_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>offer_local_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>request_remote_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>reset_local_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>reset_remote_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>get_local_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_option_state</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>get_remote_option</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_negotiated_option</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_option_state</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>option_negotiation_is_over</method><path><resolved><identifier><type>bool</type></identifier></resolved></path></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>process_option_command</method><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>fetch_subnegotiation</method><doc>This method should be called as follows:
If you find a <code>Telnet_sb</code> at the beginning of the input queue,
remove this command <code>Queue.take</code>, and invoke <code>fetch_subnegotiation</code>.
This method scans the queue and looks for the associated
<code>Telnet_se</code> command. If it does not find it, <code>None</code> is returned.
If <code>Telnet_se</code> is found, the parameter enclosed by the two commands
is returned as <code>Some s</code> where <code>s</code> is the parameter string. Furthermore,
in the latter case the data items and the closing <code>Telnet_se</code> are
removed from the queue.</doc><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></method><comment>Running the session</comment><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>attach</method><doc>Attach to the event system. After being attached, the client
is ready to work.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>run</method><doc>Run the event system</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>update</method><doc>If there are commands in the output queue, the event system is
signaled that this client wants to do network I/O.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>send_synch</method><doc>At the next output oppurtunity, a Synch sequence is sent to
the remote peer. This means that the passed commands, extended
by an additional Data Mark command, are sent to the peer as
urgent data.<newline/>Sending a Synch sequence has higher priority than the output
queue; processing of the output queue is deferred until the
Synch sequence has been completely sent.</doc><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_command</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>telnet_session</class>expect_input</method><doc>Set whether the timeout value is to be applied to the input side
of the connection. This is <code>true</code> by default.</doc><arrow><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method></signature></class><comment><title level="1">Debugging</title></comment><module><module><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>Debug</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Telnet_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/telnet_client.cmti" digest="0f3be7582df1370ca3c2f8f1803217af"/></xml></base>Telnet_client</root>Debug</module>enable</value><doc>Enables <reference><element><root>Netlog</root></element></reference>-style debugging of this module By default,
the exchanged Telnet commands are logged. This can be extended
by setting the <code>verbose_input</code> and <code>verbose_output</code> options.</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value></signature></type></module></unit>