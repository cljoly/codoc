<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></html></base>Http_client_conncache</root><digest>786127efbc85a974396896774b1c2cbc</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>http_client_conncache.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient</dir><digest>22e0d2ad8fa170c8a7f53083c26e8878</digest></source><doc>Connection cache</doc><comment>This module allows one to create special connection caches, e.g.
by deriving from the official ones</comment><type><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>channel_binding_id</type><doc>Same as in <reference><element><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netclient/http_client/index.xml"><cmti name="Http_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client.cmti" digest="1f7e656c1c61c63b3475b3b9d175eab3"/></xml></base>Http_client</root></identifier>channel_binding_id</type></resolved></element></reference></doc><path><resolved><identifier><type>int</type></identifier></resolved></path></type><type><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>private_data</type><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>exn</type></identifier></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>conn_state</type><doc>A TCP connection may be either <code>`Inactive</code>, i.e. it is not used
by any pipeline, or <code>`Active obj</code>, i.e. it is in use by the pipeline
<code>obj</code> (this is the <reference><element><resolved><class><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netclient/http_client/index.xml"><cmti name="Http_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client.cmti" digest="1f7e656c1c61c63b3475b3b9d175eab3"/></xml></base>Http_client</root></identifier>pipeline</class></resolved></element></reference> coerced to <code>&lt; &gt;</code>).<newline/>Since Ocamlnet-3.3, <code>`Inactive</code> connections carry the channel binding
ID as argument. Since 3.8, there is the option of storing an exception
value <code>private_data</code>. This may be used by implementations to store
private data together with the file descriptor.</doc><poly_variant><fixed/><constructor>Inactive<tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>channel_binding_id</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>private_data</type></identifier></resolved></path></tuple></constructor><constructor>Active<object/></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>peer</type><poly_variant><fixed/><constructor>Direct<tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></constructor><constructor>Http_proxy<tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></constructor><constructor>Http_proxy_connect<tuple><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></tuple></constructor><constructor>Socks5<tuple><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></tuple></constructor></poly_variant></type><class_type><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type><signature><method><method><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type>get_connection_state</method><doc>Returns the state of the file descriptor, or raises <code>Not_found</code></doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>conn_state</type></identifier></resolved></path></arrow></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type>set_connection_state</method><doc>Sets the state of the file descriptor. It is allowed that
inactive descriptors are simply closed and forgotten. It is
also possible that this method raises <code>Not_found</code>, leaving it
to the caller to close the connection.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>peer</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>conn_state</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type>find_inactive_connection</method><doc>Returns an inactive connection to the passed peer, or raise
<code>Not_found</code>. Since Ocamlnet-3.3, the required channel binding ID
is also an argument of this method.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>peer</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>channel_binding_id</type></identifier></resolved></path><tuple><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>private_data</type></identifier></resolved></path></tuple></arrow></arrow></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type>find_my_connections</method><doc>Returns all active connections owned by the object</doc><arrow><object/><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path></arrow></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type>close_connection</method><doc>Deletes the connection from the cache, and closes it</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type>close_all</method><doc>Closes all descriptors known to the cache</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method></signature></class_type><class><class><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>restrictive_cache</class><doc>A restrictive cache closes connections as soon as there are no
pending requests.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type></identifier></resolved></path></arrow></class><class><class><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>aggressive_cache</class><doc>This type of cache tries to keep connections as long open as
possible. The consequence is that users are responsible for
closing the descriptors (by calling <code>close_connection_cache</code>) when the
cache is no longer in use. It is also possible to derive a special
version of the cache from this class, e.g. for closing descriptors
when they are idle for some time.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Http_client_conncache" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/http_client_conncache.cmti" digest="786127efbc85a974396896774b1c2cbc"/></xml></base>Http_client_conncache</root>connection_cache</class_type></identifier></resolved></path></arrow></class></unit>