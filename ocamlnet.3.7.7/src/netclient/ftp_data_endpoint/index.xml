<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></html></base>Ftp_data_endpoint</root><digest>c83d0c1e3a2af20caf2dbcedd6f60466</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netconversion<digest>192a0e1fae2f882e5f06cf84e9f3da38</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><source><file>ftp_data_endpoint.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient</dir><digest>da19054250e8c9e8026632324ec5666d</digest></source><doc>Senders and receivers for the FTP data connection</doc><comment><title level="1">Types and Exceptions</title></comment><class_type><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>out_record_channel</class_type><doc>An <code>out_record_channel</code> can be used to output files with record
structure. This is purely abstract, as Unix does not support such
files natively, so this kind of channel is usually mapped to a flat
representation when stored in a real file, e.g. record boundaries
become newline characters.</doc><signature><inherit><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>out_obj_channel</class_type></resolved></path></inherit><method><method><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>out_record_channel</class_type>output_eor</method><doc>Finishes the current record.<newline/>The record model is as follows: At the beginning of the channel,
or after <code>output_eor</code>, a new record can be potentially started.
However, the record counts only as existing when either at least
one byte is output, or the record is explicitly ended with a
<code>output_eor</code> call.<newline/>This rule allows it to represent channels containing no records.
There is an ambiguity at the end of the channel, however: It is
possible that there are characters between the last EOR and the
EOF. This could also be represented by printing another EOR just
before EOF. The preferred representation is the latter.<newline/>This model correlates to the usual rules for line-structured
files, so think EOR = EOL.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method></signature></class_type><class_type><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>in_record_channel</class_type><doc>An <code>in_record_channel</code> can be used to read files with record
structure. This is purely abstract, as Unix does not support such
files natively, so this kind of channel is usually mapped to a flat
representation when stored in a real file, e.g. record boundaries
become newline characters.</doc><signature><inherit><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>in_obj_channel</class_type></resolved></path></inherit><method><method><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>in_record_channel</class_type>input_eor</method><doc>Skips over the remaining data of the current record and the
record boundary to the next record. Raises <code>End_of_file</code> when
the current record is the &quot;EOF&quot; record (see below for explanations).<newline/>A record channel can be read as follows: After opening the channel,
one can read the contents of the first record with the <code>input</code>
method. The end of the record is indicated by an <code>End_of_file</code>
exception. By calling <code>input_eor</code>, the next record is opened
and can be read.<newline/>After the last real record, there is always a special
&quot;EOF&quot; record which is empty, and must be ignored by applications
processing records. This means, after opening an empty channel,
the current record is this &quot;EOF&quot; record, and <code>input_eor</code> raises
<code>End_of_file</code>. After reading a non-empty channel, one can
do <code>input_eor</code> after the last regular record, and the following
<code>input_eor</code> raises <code>End_of_file</code>.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method></signature></class_type><type><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>local_receiver</type><doc>The <code>local_receiver</code> is the object that gets the data received
over the data connection.<newline/>Page structure is not supported.</doc><poly_variant><fixed/><constructor>File_structure<path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>out_obj_channel</class_type></resolved></path></constructor><constructor>Record_structure<path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>out_record_channel</class_type></identifier></resolved></path></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>local_sender</type><doc>The <code>local_sender</code> is the object that provides the data sent
over the data connection.<newline/>Page structure is not supported.</doc><poly_variant><fixed/><constructor>File_structure<path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>in_obj_channel</class_type></resolved></path></constructor><constructor>Record_structure<path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>in_record_channel</class_type></identifier></resolved></path></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>transmission_mode</type><doc>The transmission mode as described in RFC 959.
Compressed mode is not supported.</doc><poly_variant><fixed/><constructor>Stream_mode<constant/></constructor><constructor>Block_mode<constant/></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>descr_state</type><doc>Describes the state of the socket used for data transfers.
The state <code>`Clean</code> means that a new data transfer may be started,
either because the socket is new, or the last block transfer was
properly finished. The state <code>`Transfer_in_progress</code> means that
data is being transferred, but also that the transfer is aborted.
The state <code>`Down</code> means that the socket is already at least half-closed,
i.e. EOF was sent in one direction.</doc><poly_variant><fixed/><constructor>Clean<constant/></constructor><constructor>Transfer_in_progress<constant/></constructor><constructor>Down<constant/></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>text_data_repr</type><doc>Possible representation of text data:
<code>`ASCII</code> means an ASCII-compatible encoding where the newline
character is represented by CR/LF. <code>`ASCII_unix</code> is the same
but newline is only LF. <code>`EBCDIC</code> is an EBCDIC variant.<newline/>The argument specifies the exact variant to be used, e.g.
<code>`ASCII `Enc_iso88591</code> or <code>`EBCDIC `Enc_cp1047</code>.<newline/>It is illegal to use <code>`ASCII</code> or <code>`ASCII_unix</code> with an ASCII-
incompatible encoding, as well as combining <code>`EBCDIC</code> with a
non-EBCDIC encoding. Wrong conversions would be the result of
this.</doc><poly_variant><fixed/><constructor>ASCII<path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netconversion/index.xml"><cmti name="Netconversion" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netconversion.cmti" digest="192a0e1fae2f882e5f06cf84e9f3da38"/></xml></base>Netconversion</root></identifier>encoding</type></resolved></path></constructor><constructor>ASCII_unix<path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netconversion/index.xml"><cmti name="Netconversion" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netconversion.cmti" digest="192a0e1fae2f882e5f06cf84e9f3da38"/></xml></base>Netconversion</root></identifier>encoding</type></resolved></path></constructor><constructor>EBCDIC<path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netconversion/index.xml"><cmti name="Netconversion" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netconversion.cmti" digest="192a0e1fae2f882e5f06cf84e9f3da38"/></xml></base>Netconversion</root></identifier>encoding</type></resolved></path></constructor></poly_variant></type><comment><title level="1">Data Stream Converters</title></comment><class><class><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>write_out_record_channel</class><doc>Provides an <code>out_record_channel</code> that represents EOR as
newline character.<param><name>repr</name>Determines the newline character to use</param></doc><arrow><label>repr</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>text_data_repr</type></identifier></resolved></path><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>out_obj_channel</class_type></resolved></path><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>out_record_channel</class_type></identifier></resolved></path></arrow></arrow></class><class><class><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>read_in_record_channel</class><doc>Provides an <code>in_record_channel</code> that takes newline characters as
EOR representation.<newline/>In this implementation, <code>input_line</code> can be used to read the full
contents of a record (=line). However, <code>input_line</code> does not
switch to the next record.<param><name>repr</name>Determines the newline character to use</param></doc><arrow><label>repr</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>text_data_repr</type></identifier></resolved></path><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>in_obj_channel</class_type></resolved></path><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>in_record_channel</class_type></identifier></resolved></path></arrow></arrow></class><class><class><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>data_converter</class><doc>Creates a data conversion pipe converting <code>fromrepr</code> to
<code>torepr</code>.<newline/>For simplicity, in an <code>`ASCII</code> input stream the CR characters are
discarded, and the LF characters are taken as newline characters.
In an output <code>`ASCII</code> stream, the CR/LF sequence is correctly
created for newline characters.</doc><arrow><label>fromrepr</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>text_data_repr</type></identifier></resolved></path><arrow><label>torepr</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>text_data_repr</type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netstring/netchannels/index.xml"><cmti name="Netchannels" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netstring/netchannels.cmti" digest="4e22bd1ba0cae4bd9bd1b6e69fc16ade"/></xml></base>Netchannels</root></identifier>io_obj_channel</class_type></resolved></path></arrow></arrow></class><comment><title level="1">Engines</title></comment><class_type><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_engine</class_type><doc>The common type of FTP data engines</doc><signature><inherit><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/uq_engines/index.xml"><cmti name="Uq_engines" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/uq_engines.cmti" digest="7eabb27fa86d9290a1fe2ef78547b48a"/></xml></base>Uq_engines</root></identifier>engine</class_type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></inherit><method><method><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_engine</class_type>descr</method><doc>The socket to use for data transfers. This class never closes
this socket, but it may be shut down at least partially.</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_engine</class_type>descr_state</method><doc>The socket state</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>descr_state</type></identifier></resolved></path></method></signature></class_type><class><class><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_receiver</class><doc>This engine receives data on a FTP data connection, and forwards
them to a local receiver. The socket must already be open.<newline/>It is ensured that <code>local_receiver</code> is always closed after operation
(whether successful or not). The socket <code>descr</code> remains open.</doc><arrow><label>esys</label><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/unixqueue/index.xml"><cmti name="Unixqueue" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/unixqueue.cmti" digest="5ec5f57d46c5b3e908696c79a59232d4"/></xml></base>Unixqueue</root></identifier>event_system</class_type></resolved></path><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>transmission_mode</type></identifier></resolved></path><arrow><label>local_receiver</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>local_receiver</type></identifier></resolved></path><arrow><label>descr</label><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><signature><inherit><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_engine</class_type></identifier></resolved></path></inherit><method><method><class><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_receiver</class>local_receiver</method><doc>The local receiver. It is closed when the logical EOF is found in the
data connection</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>local_receiver</type></identifier></resolved></path></method></signature></arrow></arrow></arrow></arrow></arrow></class><class><class><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_sender</class><doc>This engine sends data over a FTP data connection coming from
a local sender. The socket must already be open.<newline/>It is ensured that <code>local_sender</code> is always closed after operation
(whether successful or not). The socket <code>descr</code> remains open.</doc><arrow><label>esys</label><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/unixqueue/index.xml"><cmti name="Unixqueue" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/unixqueue.cmti" digest="5ec5f57d46c5b3e908696c79a59232d4"/></xml></base>Unixqueue</root></identifier>event_system</class_type></resolved></path><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>transmission_mode</type></identifier></resolved></path><arrow><label>local_sender</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>local_sender</type></identifier></resolved></path><arrow><label>descr</label><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><signature><inherit><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_engine</class_type></identifier></resolved></path></inherit><method><method><class><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>ftp_data_sender</class>local_sender</method><doc>The local sender. It is closed after usage.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Ftp_data_endpoint" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netclient/ftp_data_endpoint.cmti" digest="c83d0c1e3a2af20caf2dbcedd6f60466"/></xml></base>Ftp_data_endpoint</root>local_sender</type></identifier></resolved></path></method></signature></arrow></arrow></arrow></arrow></arrow></class></unit>