<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></html></base>Netmcore_condition</root><digest>e0f15d379a1746aab30c1981e35afacf</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netmcore<digest>a43c14b18fe269828d7a8a2185ec03a0</digest></import><import>Netmcore_heap<digest>889cc2bed6a42f2a7a054bc47e032487</digest></import><import>Netmcore_mutex<digest>d0b7ced55b78e252916ac3a1abf89f7b</digest></import><import>Netnumber<digest>dbd89ef42a315eaa84a5eeb21e4b6530</digest></import><import>Netplex_encap<digest>6dd5527c9f4aa5fa370a0b8cfe94711b</digest></import><import>Netplex_types<digest>b09b49cdab7359a58acb7a6f179e24ac</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_sem<digest>7112f0b1d11ab0fe1abd7ca5aa7d7cdf</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Rpc<digest>823bfd8fbbbc545fe6929685a57393b5</digest></import><import>Rpc_client<digest>56bf3aef28bd1d22eab29ca954a2cb3c</digest></import><import>Rpc_packer<digest>af7dd8ce3ff9294c27a0d09fd8424b4e</digest></import><import>Rpc_program<digest>2c8259e58584b03793c1d5b3eaa20436</digest></import><import>Rpc_server<digest>11e0d988a11e73632cc4454470337bbd</digest></import><import>Rpc_transport<digest>6dccd6c9fbafeb7fe8a94a52c7614424</digest></import><import>Rpc_util<digest>fdef7f525a45859737db6e8e58372317</digest></import><import>Rtypes<digest>3a2195ceddcae11873afeb1784965176</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><import>Uq_mt<digest>9c171e79d90169806336d502364d1bd2</digest></import><import>Xdr<digest>d36f2013b5caa2d21a98f895fdddfd16</digest></import><import>Xdr_mstring<digest>2f3d19f64c1f9ca2f05941c7b5ea2c42</digest></import><source><file>netmcore_condition.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore</dir><digest>87dc1542a80aea3167c717e6d367cd85</digest></source><doc>Condition variables</doc><comment>Condition variables are here defined as values that reside in shared heaps
(<reference><element><root>Netmcore_heap</root></element></reference>), for example in the header field of
<reference><element><root>Netmcore_array</root></element></reference> or somewhere else in heap-allocated
data structures.<newline/>In order to ensure that the condition variable is in the heap, the
special function <code>create_condition</code> must be used to initialize it
there. As <code>create_condition</code> requires a mutator as argument, this is
only possible by calling <code>create_condition</code> from the callback of
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_heap/index.xml"><cmti name="Netmcore_heap" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_heap.cmti" digest="889cc2bed6a42f2a7a054bc47e032487"/></xml></base>Netmcore_heap</root></identifier>modify</value></resolved></element></reference>.<newline/>Condition variables are special values, and cannot be copied or moved.<newline/>Condition variables are implemented on top of semaphores. Compared to
the <code>pthreads</code> version of condition variables, the user needs here to
allocate special <code>wait_entry</code> slots, one for each process. An entry
can be used for all condition variables a process needs to wait for.
(Actually, such entries also exist in typical <code>pthreads</code> implementations,
but are hidden from the user in the thread control block. We just
don't have here a place where we could allocate process-specific
shared memory.)<newline/>Since Ocamlnet-3.5, there are also special wait entries <code>wait_entry_e</code>
which can be used to wait from within a running Unixqueue. For each
such wait entry, however, a named pipe needs to be allocated.</comment><type><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>condition</type><doc>The condition variable</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry</type><doc>Each process that wants to <code>wait</code> needs a <code>wait_entry</code>. These entries
can be used for several condition variables, so typically each process
has only one entry for each heap.</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry_e</type><doc>A special kind of <code>wait_entry</code> for intergration into an event
loop</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_set</type><doc>A set of <code>wait_entry</code>, for easier management. This set can e.g. be
stored side by side with the condition variable(s). It is important
that the <code>wait_set</code> resides in the same shared heap as the
condition variable.</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>dummy_condition</value><doc>A dummy condition is non-functional, but can be used to put something
into <code>condition</code>-typed variables</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>condition</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>dummy_wait_set</value><doc>A dummy <code>wait_set</code> is non-functional, but can be used to put something
into <code>wait_set</code>-typed variables</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_set</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>create_condition</value><doc><code>create m</code>: Creates a condition variable, and
pushes it to the heap, using the mutator <code>m</code>.<newline/>After being pushed to the heap, the variable can be used. It is
nonsense to copy it outside the heap.</doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_heap/index.xml"><cmti name="Netmcore_heap" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_heap.cmti" digest="889cc2bed6a42f2a7a054bc47e032487"/></xml></base>Netmcore_heap</root></identifier>mutator</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>condition</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>create_wait_set</value><doc>Creates a <code>wait_set</code> in the heap designated by the mutator</doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_heap/index.xml"><cmti name="Netmcore_heap" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_heap.cmti" digest="889cc2bed6a42f2a7a054bc47e032487"/></xml></base>Netmcore_heap</root></identifier>mutator</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_set</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>alloc_wait_entry</value><doc>Allocates a <code>wait_entry</code></doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_heap/index.xml"><cmti name="Netmcore_heap" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_heap.cmti" digest="889cc2bed6a42f2a7a054bc47e032487"/></xml></base>Netmcore_heap</root></identifier>mutator</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_set</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>free_wait_entry</value><doc>Frees a <code>wait_entry</code></doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_heap/index.xml"><cmti name="Netmcore_heap" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_heap.cmti" digest="889cc2bed6a42f2a7a054bc47e032487"/></xml></base>Netmcore_heap</root></identifier>mutator</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_set</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>alloc_wait_entry_e</value><doc><code>alloc_wait_entry_e mut set filename</code>: Allocates a new wait entry
with notification via named pipe. The <code>filename</code> must refer to an
existing named pipe.</doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_heap/index.xml"><cmti name="Netmcore_heap" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_heap.cmti" digest="889cc2bed6a42f2a7a054bc47e032487"/></xml></base>Netmcore_heap</root></identifier>mutator</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_set</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry_e</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>free_wait_entry_e</value><doc>Frees a <code>wait_entry_e</code>. The named pipe is deleted.</doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_heap/index.xml"><cmti name="Netmcore_heap" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_heap.cmti" digest="889cc2bed6a42f2a7a054bc47e032487"/></xml></base>Netmcore_heap</root></identifier>mutator</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_set</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry_e</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait</value><doc><code>wait we c m</code> atomically unlocks the mutex <code>m</code> and suspends the
calling process on the condition variable <code>c</code>. The process will
restart after the condition variable <code>c</code> has been signalled.
The mutex <code>m</code> is locked again before <code>wait</code> returns.<newline/>At the time of calling, the <code>wait_entry</code> <code>we</code> must not be used to
manage another <code>wait</code>. When allocating a separate <code>wait_entry</code>
per process this problem does not occur.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>condition</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_mutex/index.xml"><cmti name="Netmcore_mutex" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_mutex.cmti" digest="d0b7ced55b78e252916ac3a1abf89f7b"/></xml></base>Netmcore_mutex</root></identifier>mutex</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_e</value><doc>Like <code>wait</code>, but the suspension is done by waiting on a
named pipe event (i.e. &quot;nonblocking suspension&quot;):<newline/><code>wait_e we c m esys cont</code> atomically unlocks the mutex <code>m</code> and suspends
the calling engine on the condition variable <code>c</code>. The engine will
restart after the condition variable <code>c</code> has been signalled.
The mutex <code>m</code> is locked again, at which time <code>cont</code> is called.
The result of <code>cont()</code> is the result of <code>wait_e</code>.<newline/>At the time of calling, the <code>wait_entry_e</code> <code>we</code> must not be used to
manage another <code>wait_e</code>. When allocating a separate <code>wait_entry_e</code>
per process (or thread within the process) this problem does not occur.</doc><arrow><optional>debug_name</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry_e</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>condition</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore_mutex/index.xml"><cmti name="Netmcore_mutex" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_mutex.cmti" digest="d0b7ced55b78e252916ac3a1abf89f7b"/></xml></base>Netmcore_mutex</root></identifier>mutex</type></resolved></path><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/unixqueue/index.xml"><cmti name="Unixqueue" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/unixqueue.cmti" digest="5ec5f57d46c5b3e908696c79a59232d4"/></xml></base>Unixqueue</root></identifier>event_system</class_type></resolved></path><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/uq_engines/index.xml"><cmti name="Uq_engines" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/uq_engines.cmti" digest="7eabb27fa86d9290a1fe2ef78547b48a"/></xml></base>Uq_engines</root></identifier>engine</class_type></resolved><var>a</var></path></arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/uq_engines/index.xml"><cmti name="Uq_engines" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/uq_engines.cmti" digest="7eabb27fa86d9290a1fe2ef78547b48a"/></xml></base>Uq_engines</root></identifier>engine</class_type></resolved><var>a</var></path></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>signal</value><doc><code>signal c</code> restarts one of the processes waiting on the
condition variable <code>c</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>condition</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>broadcast</value><doc><code>broadcast c</code> restarts all processes waiting on the
condition variable <code>c</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>condition</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>pipe_name</value><doc>Returns the name of the pipe</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_entry_e</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>destroy_condition</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>condition</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>destroy_wait_set</value><doc>Destroys these objects</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>wait_set</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><module><module><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>Debug</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Netmcore_condition" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_condition.cmti" digest="e0f15d379a1746aab30c1981e35afacf"/></xml></base>Netmcore_condition</root>Debug</module>enable</value><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value></signature></type></module></unit>