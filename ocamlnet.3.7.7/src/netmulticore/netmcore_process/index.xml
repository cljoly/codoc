<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></html></base>Netmcore_process</root><digest>8cf1b84fedf628717d5c862fba49ecc3</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netmcore<digest>a43c14b18fe269828d7a8a2185ec03a0</digest></import><import>Netnumber<digest>dbd89ef42a315eaa84a5eeb21e4b6530</digest></import><import>Netplex_encap<digest>6dd5527c9f4aa5fa370a0b8cfe94711b</digest></import><import>Netplex_types<digest>b09b49cdab7359a58acb7a6f179e24ac</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_sem<digest>7112f0b1d11ab0fe1abd7ca5aa7d7cdf</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Rpc<digest>823bfd8fbbbc545fe6929685a57393b5</digest></import><import>Rpc_client<digest>56bf3aef28bd1d22eab29ca954a2cb3c</digest></import><import>Rpc_packer<digest>af7dd8ce3ff9294c27a0d09fd8424b4e</digest></import><import>Rpc_program<digest>2c8259e58584b03793c1d5b3eaa20436</digest></import><import>Rpc_server<digest>11e0d988a11e73632cc4454470337bbd</digest></import><import>Rpc_transport<digest>6dccd6c9fbafeb7fe8a94a52c7614424</digest></import><import>Rpc_util<digest>fdef7f525a45859737db6e8e58372317</digest></import><import>Rtypes<digest>3a2195ceddcae11873afeb1784965176</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><import>Uq_mt<digest>9c171e79d90169806336d502364d1bd2</digest></import><import>Xdr<digest>d36f2013b5caa2d21a98f895fdddfd16</digest></import><import>Xdr_mstring<digest>2f3d19f64c1f9ca2f05941c7b5ea2c42</digest></import><source><file>netmcore_process.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore</dir><digest>fc6711f24266df10171e5f96a30af98e</digest></source><doc>Statically typed processes</doc><comment>This module provides a slightly higher-level view on processes,
but is also a bit more restricted than the primitives in
<reference><element><root>Netmcore</root></element></reference>.<newline/>Please read <reference><element><root>Netmcore_basics</root></element></reference> for an introduction into using
this module. There is also <reference><element><root>Netmcore_tut</root></element></reference> with more advanced
techniques.</comment><type><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>fork_point</type><doc>A fork point can start a new process with argument <code>'a</code></doc><param>a</param></type><type><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>join_point</type><doc>A join point can wait until a process finishes with a result <code>'b</code></doc><param>b</param></type><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>def_process</value><doc><code>let (fp,jp) = def_process proc</code>: Defines a process (which must happen
in the master process), so that:<newline/><list><item><code>let pid = start fp arg</code>: Starts the new process and passes the
argument <code>arg</code> to it. The process runs <code>proc arg</code> which will
finally result in a value <code>r</code></item><item><code>let r_opt = join jp pid</code>: Waits until the process identified by
<code>pid</code> finishes, and returns the result as <code>r_opt = Some r</code>.
On error, it returns <code>None</code>.</item></list><code>def_process</code> should be called at module initialization time
before any process is started. This interface is not designed for
calling <code>def_process</code> later.</doc><arrow><arrow><var>a</var><var>b</var></arrow><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>fork_point</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>join_point</type></identifier></resolved><var>b</var></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>start</value><doc><code>let pid = start fp arg</code>: Starts a new process at the fork point
<code>fp</code> with argument <code>arg</code>. This means that the process is forked
from the master process, and that the value of <code>arg</code> is sent to it
using <code>Marshal</code>. The returned process ID is Netmulticore's own
ID and not to be confused with the ID assigned by the operating
system.<newline/>Option <code>inherit_resources</code>: Certain resources are only accessible by
the process when they are inherited to it. This is the case for
<code>`Posix_shm_preallocated</code>. This can be set to <code>`All</code> to inherit
all inheritable resources, or to <code>`Resources l</code> to only inherit
the resources of <code>l</code>. By default, no resources are inherited.</doc><arrow><optional>inherit_resources</optional><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore/index.xml"><cmti name="Netmcore" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore.cmti" digest="a43c14b18fe269828d7a8a2185ec03a0"/></xml></base>Netmcore</root></identifier>inherit_request</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>fork_point</type></identifier></resolved><var>a</var></path><arrow><var>a</var><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore/index.xml"><cmti name="Netmcore" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore.cmti" digest="a43c14b18fe269828d7a8a2185ec03a0"/></xml></base>Netmcore</root></identifier>process_id</type></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>join</value><doc><code>let r_opt = join jp pid</code>: Waits until the process <code>pid</code> finishes,
and uses the join point <code>jp</code> to extract the result. The result
is returned as <code>Some r</code> on success, and <code>None</code> on error.
Result values are transmitted from the joining process to
this function using <code>Marshal</code>. Errors include uncaught exceptions
as well as unexpected process termination (<code>exit</code>, signal).<newline/>If the process referenced by <code>pid</code> is not an instance that belongs
to <code>jp</code>, the function will fail.<newline/>This function must not be called from the master process (which is
not allowed to block until a result is available).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>join_point</type></identifier></resolved><var>b</var></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore/index.xml"><cmti name="Netmcore" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore.cmti" digest="a43c14b18fe269828d7a8a2185ec03a0"/></xml></base>Netmcore</root></identifier>process_id</type></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><var>b</var></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>join_nowait</value><doc>Like <code>join</code>, but it is not waited for the termination of the process.
If the process is not yet done, this function returns <code>None</code>.
It also returns <code>None</code> if the process terminated with an error or did
not set a result value for other reasons.<newline/>Unlike <code>join</code>, this function can be called in the master process.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>join_point</type></identifier></resolved><var>b</var></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netmulticore/netmcore/index.xml"><cmti name="Netmcore" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore.cmti" digest="a43c14b18fe269828d7a8a2185ec03a0"/></xml></base>Netmcore</root></identifier>process_id</type></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><var>b</var></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>release_fork_point</value><doc>Releases a fork point so it is deleted from the internal
resource table.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>fork_point</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>release_join_point</value><doc>Releases a join point so it is deleted from the internal
resource table.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netmcore_process" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netmulticore/netmcore_process.cmti" digest="8cf1b84fedf628717d5c862fba49ecc3"/></xml></base>Netmcore_process</root>join_point</type></identifier></resolved><var>b</var></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value></unit>