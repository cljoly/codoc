<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></html></base>Netplex_workload</root><digest>d88f5057db404a5220344eb219424bea</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netnumber<digest>dbd89ef42a315eaa84a5eeb21e4b6530</digest></import><import>Netplex_encap<digest>6dd5527c9f4aa5fa370a0b8cfe94711b</digest></import><import>Netplex_types<digest>b09b49cdab7359a58acb7a6f179e24ac</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Rpc<digest>823bfd8fbbbc545fe6929685a57393b5</digest></import><import>Rpc_client<digest>56bf3aef28bd1d22eab29ca954a2cb3c</digest></import><import>Rpc_packer<digest>af7dd8ce3ff9294c27a0d09fd8424b4e</digest></import><import>Rpc_program<digest>2c8259e58584b03793c1d5b3eaa20436</digest></import><import>Rpc_server<digest>11e0d988a11e73632cc4454470337bbd</digest></import><import>Rpc_transport<digest>6dccd6c9fbafeb7fe8a94a52c7614424</digest></import><import>Rpc_util<digest>fdef7f525a45859737db6e8e58372317</digest></import><import>Rtypes<digest>3a2195ceddcae11873afeb1784965176</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><import>Uq_mt<digest>9c171e79d90169806336d502364d1bd2</digest></import><import>Xdr<digest>d36f2013b5caa2d21a98f895fdddfd16</digest></import><import>Xdr_mstring<digest>2f3d19f64c1f9ca2f05941c7b5ea2c42</digest></import><source><file>netplex_workload.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex</dir><digest>f52a19f286a29989ce45de38655b808b</digest></source><doc>Workload management<newline/>Workload managers control when additional containers are started or
idle containers are stopped. See <reference><element><dot><root>Netplex_intro</root>workload</dot></element></reference> for
additional documentation how they are configured.</doc><value><value><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>create_constant_workload_manager</value><doc>A constant number of threads is created (the int argument).<newline/><code>restart</code>: If threads
crash, new threads are created until the specified number is again
reached. This is on by default.<newline/><code>greedy_accepts</code>: whether greedy accepts are allowed (default: false)<newline/><code>max_jobs_per_thread</code>: if passed, limits the number of jobs (connections)
that can be simultaneously processed by a thread/process. By default
there is no limit.</doc><arrow><optional>restart</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>greedy_accepts</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>max_jobs_per_thread</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>workload_manager</class_type></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>constant_workload_manager_factory</value><doc>Reads a workload_manager section like<newline/><precode>workload_manager {
           type = &quot;constant&quot;;
           threads = &lt;n&gt;;
           max_jobs_per_thread = &lt;n&gt;;
           greedy_accepts = &lt;bool&gt;;
         }</precode></doc><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>workload_manager_factory</class_type></resolved></path></value><class_type><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type><signature><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type>max_jobs_per_thread</method><doc>How many jobs every thread can execute concurrently until it is
considered as fully loaded. For configurations where the threads
can only handle one connection at a time this number must be 1.</doc><path><resolved><identifier><type>int</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type>recommended_jobs_per_thread</method><doc>The number of jobs every thread can execute with normal
service quality. Must be less than or equal to
<code>max_jobs_per_thread</code></doc><path><resolved><identifier><type>int</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type>min_free_job_capacity</method><doc>The manager starts as many threads as required to ensure that this
number of jobs can be executed. Must be at least 1.</doc><path><resolved><identifier><type>int</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type>max_free_job_capacity</method><doc>If more job capacity is available than this number, threads are
terminated. Must be greater than or equal to
<code>min_free_job_capacity</code>.</doc><path><resolved><identifier><type>int</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type>inactivity_timeout</method><doc>After this number of seconds a free thread can be terminated</doc><path><resolved><identifier><type>int</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type>max_threads</method><doc>The manager does not start more threads than this number</doc><path><resolved><identifier><type>int</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type>greedy_accepts</method><doc>Whether greedy accepts are permitted</doc><path><resolved><identifier><type>bool</type></identifier></resolved></path></method></signature></class_type><value><value><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>create_dynamic_workload_manager</value><arrow><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_config</class_type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>workload_manager</class_type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>dynamic_workload_manager_factory</value><doc>Reads a workload_manager section like<newline/><precode>workload_manager {
           type = &quot;dynamic&quot;;
           max_jobs_per_thread = &lt;n&gt;;
           min_free_jobs_capacity = &lt;n&gt;;
           max_free_jobs_capacity = &lt;n&gt;;
           max_threads = &lt;n&gt;;
           greedy_accepts = &lt;bool&gt;;
         }</precode></doc><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>workload_manager_factory</class_type></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_workload" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_workload.cmti" digest="d88f5057db404a5220344eb219424bea"/></xml></base>Netplex_workload</root>workload_manager_factories</value><doc>All built-in workload manager factories</doc><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>workload_manager_factory</class_type></resolved></path></path></value></unit>