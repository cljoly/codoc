<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></html></base>Netplex_kit</root><digest>6d107f3a241bdcc6ea12e0cafec40331</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netnumber<digest>dbd89ef42a315eaa84a5eeb21e4b6530</digest></import><import>Netplex_encap<digest>6dd5527c9f4aa5fa370a0b8cfe94711b</digest></import><import>Netplex_types<digest>b09b49cdab7359a58acb7a6f179e24ac</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Rpc<digest>823bfd8fbbbc545fe6929685a57393b5</digest></import><import>Rpc_client<digest>56bf3aef28bd1d22eab29ca954a2cb3c</digest></import><import>Rpc_packer<digest>af7dd8ce3ff9294c27a0d09fd8424b4e</digest></import><import>Rpc_program<digest>2c8259e58584b03793c1d5b3eaa20436</digest></import><import>Rpc_server<digest>11e0d988a11e73632cc4454470337bbd</digest></import><import>Rpc_transport<digest>6dccd6c9fbafeb7fe8a94a52c7614424</digest></import><import>Rpc_util<digest>fdef7f525a45859737db6e8e58372317</digest></import><import>Rtypes<digest>3a2195ceddcae11873afeb1784965176</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><import>Uq_mt<digest>9c171e79d90169806336d502364d1bd2</digest></import><import>Xdr<digest>d36f2013b5caa2d21a98f895fdddfd16</digest></import><import>Xdr_mstring<digest>2f3d19f64c1f9ca2f05941c7b5ea2c42</digest></import><source><file>netplex_kit.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex</dir><digest>c36fc710a98326afd4dea0306750f0f5</digest></source><doc>Netplex toolkit</doc><class_type><class_type><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>v_processor</class_type><doc>Same as <code>processor</code>, but the methods <code>process</code> and <code>supported_ptypes</code>
are flagged as <code>virtual</code></doc><virtual/><signature><inherit><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor_hooks</class_type></resolved></path></inherit><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>v_processor</class_type>process</method><virtual/><arrow><label>when_done</label><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>container</class_type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>v_processor</class_type>supported_ptypes</method><virtual/><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>parallelization_type</type></resolved></path></path></method></signature></class_type><class><class><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>empty_processor_hooks</class><doc>This is an empty set of processor hooks, i.e. all methods are empty</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor_hooks</class_type></resolved></path></arrow></class><class><class><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>processor_hooks_delegation</class><doc>Takes a hooks object, and makes a class of it. Useful for overriding
methods in an object.</doc><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor_hooks</class_type></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor_hooks</class_type></resolved></path></arrow></class><class><class><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>processor_base</class><doc>A virtual (incomplete) base class for processors. As argument the
user-supplied hooks are passed in. Use this class as in:<newline/><precode>         class my_processor hooks =
         object(self)
           inherit Netplex_kit.processor_base hooks
           method process ~when_done container fd proto_name = ...
           method supported_ptypes = ...
         end</precode><newline/>In order to run actions from hooks, redefine the hook methods as in:<newline/><precode>         class my_processor hooks =
         object(self)
           inherit Netplex_kit.processor_base hooks as super
           method process ~when_done container fd proto_name = ...
           method supported_ptypes = ...
           method post_start_hook container =
             ... (* my action *);
             super # post_start_hook container
         end</precode></doc><virtual/><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor_hooks</class_type></resolved></path><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>v_processor</class_type></identifier></resolved></path></arrow></class><class><class><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>protocol_switch_processor</class><doc>The arg is a list of pairs <code>(proto_name, proto_proc)</code>. All mentioned
processors are merged into a single processor. When a TCP connection
arrives, it depends on the protocol which processor is actually
activated. (Every socket is bound to a protocol, so this can be derived
from the socket.)<newline/>It is up to the user whether the merge makes sense.</doc><arrow><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor</class_type></resolved></path></tuple></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor</class_type></resolved></path></arrow></class><class><class><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>protocol_switch_factory</class><doc><code>protocol_switch_factory name merge_list</code>: Merges the factories
in <code>merge_list</code> to a single factory. Which factory is selected
depends on the protocol.<newline/>For example:<newline/><precode>          service {
            name = &quot;...&quot;;
            protocol {
               name = &quot;A&quot;; ...;
            }
            protocol {
               name = &quot;B&quot;; ...;
            }
            processor {
               type = &quot;merged&quot;;
               A {
                  ...
               }
               B {
                  ...
               }
            }
          }</precode><newline/>Here, two protocols <code>A</code> and <code>B</code> are defined, and there is a
subsection in <code>processor</code> for each of the protocols configuring
the used service. &quot;merged&quot; is the <code>name</code> of the merged factories.<newline/>For example, <code>A</code> could be an RPC interface, and <code>B</code> could be
an HTTP interface providing the same service.<newline/>For every protocol in <code>merge_list</code> there must be a subsection in
<code>processor</code> for the protocol. This subsection configures then
the processor. It is not an error not to create sockets for
a protocol in <code>merge_list</code>.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor_factory</class_type></resolved></path></tuple></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor_factory</class_type></resolved></path></arrow></arrow></class><value><value><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>add_helper_service</value><doc><code>add_helper_service ctrl name hooks</code>: Adds a helper service <code>name</code> to
the controller
<code>ctrl</code>. The helper service does not have any externally
accessible socket, but starts a single regular container that looks
like any other container. Whatever needs to be initialized must be
done in the <code>pre_start_hook</code> or the <code>post_start_hook</code>.<newline/>This function must be called in controller context, for example
in the <code>late_initializer</code> of <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_main/index.xml"><cmti name="Netplex_main" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_main.cmti" digest="a9d21f4454daaf30cb6049f087e7e8c0"/></xml></base>Netplex_main</root></identifier>startup</value></resolved></element></reference>, but it can
also be started later.<newline/>For an example, look at <code>examples/netplex/helper_container.ml</code> in
the distributed source tarball.<newline/>For multi-threaded programs, <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_cenv/index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root></identifier>run_in_controller_context</value></resolved></element></reference>
is the required companion function to start helper threads at any
time. Multi-processing programs do not have such an easy way to
add helpers. They should it at program startup time.<newline/><bold>Known bug.</bold> The the helper component will be in &quot;starting&quot; state as
long as the <code>post_start_hook</code> runs.</doc><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller</class_type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>processor_hooks</class_type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>create_protocol</value><doc><code>create_protocol name addresses</code>: Creates a <code>protocol</code> object
from the passed arguments</doc><arrow><optional>lstn_backlog</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>lstn_reuseaddr</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>so_keepalive</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>tcp_nodelay</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>configure_slave_socket</optional><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>extended_address</type></resolved></path></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>protocol</class_type></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root>create_socket_service_config</value><doc><code>create_socket_service_config name protos ctrl_conf</code>: Creates a
<code>socket_service_config</code> object from the passed arguments</doc><arrow><optional>startup_timeout</optional><path><resolved><identifier><type>float</type></identifier></resolved></path><arrow><optional>change_user_to</optional><tuple><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple><arrow><optional>gc_when_idle</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>conn_limit</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>protocol</class_type></resolved></path></path><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller_config</class_type></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>socket_service_config</class_type></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></arrow></value></unit>