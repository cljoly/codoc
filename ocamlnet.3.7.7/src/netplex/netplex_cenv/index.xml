<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></html></base>Netplex_cenv</root><digest>43133314057c968b273798ffd6e47f8f</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netnumber<digest>dbd89ef42a315eaa84a5eeb21e4b6530</digest></import><import>Netplex_encap<digest>6dd5527c9f4aa5fa370a0b8cfe94711b</digest></import><import>Netplex_types<digest>b09b49cdab7359a58acb7a6f179e24ac</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_pmanage<digest>92c0604cf0e5efc29660e1f7814481fc</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Rpc<digest>823bfd8fbbbc545fe6929685a57393b5</digest></import><import>Rpc_client<digest>56bf3aef28bd1d22eab29ca954a2cb3c</digest></import><import>Rpc_packer<digest>af7dd8ce3ff9294c27a0d09fd8424b4e</digest></import><import>Rpc_program<digest>2c8259e58584b03793c1d5b3eaa20436</digest></import><import>Rpc_server<digest>11e0d988a11e73632cc4454470337bbd</digest></import><import>Rpc_transport<digest>6dccd6c9fbafeb7fe8a94a52c7614424</digest></import><import>Rpc_util<digest>fdef7f525a45859737db6e8e58372317</digest></import><import>Rtypes<digest>3a2195ceddcae11873afeb1784965176</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><import>Uq_mt<digest>9c171e79d90169806336d502364d1bd2</digest></import><import>Xdr<digest>d36f2013b5caa2d21a98f895fdddfd16</digest></import><import>Xdr_mstring<digest>2f3d19f64c1f9ca2f05941c7b5ea2c42</digest></import><source><file>netplex_cenv.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex</dir><digest>8ebd82eecbc89c583a0e0166dbf43736</digest></source><doc>Container environment<newline/>Some helper functions to explore the environment from a container.
Most of the following functions <bold>must</bold> be called from a container context,
i.e. from a process or thread that acts as container, otherwise
the exception <code>Not_in_container_thread</code> is raised. There are also some
functions that can be called from controller context for convenience.<newline/><bold>Thread safety:</bold> Full. The functions in this module can be called from any
thread.</doc><exception><exception><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Not_in_container_thread</exception><doc>Raised when the caller's thread is not a container thread</doc></exception><comment><title level="2">Logging</title></comment><comment>Logging functions can be invoked from both container and controller
contexts.</comment><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>log</value><doc>Writes a log message</doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>level</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>logf</value><doc>Writes a log message like <code>printf</code></doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>level</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>format4</type></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></path><var>a</var></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>report_connection_string</value><doc>Output a log line for the <code>netplex.connections</code> admin message.
The string is the detail to report.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><comment><title level="2">Timer</title></comment><comment>Timer functions can only be invoked from container contexts.
More documentation is available in <reference><element><dot><root>Netplex_advanced</root>timers</dot></element></reference>.</comment><type><type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>timer</type><doc>A timer</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>create_timer</value><doc><code>create_timer f tmo</code>: Creates a timer with timeout value <code>tmo</code>:
In <code>tmo</code> seconds <code>f</code> is called, and if this function returns <code>true</code>,
the timer remains active, and another round of timing is arranged.
If the functions returns <code>false</code> or raises an exception, the timer
is stopped.<newline/>Timers are also stopped on container shutdown.<newline/>Timers are attached to the container event system, and run only
if this event system runs. Also note that <code>f</code> is always called from
the main thread of the container.</doc><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>timer</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>timer</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>cancel_timer</value><doc>Cancels the timer: The callback function is not called any longer</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>timer</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>cancel_all_timers</value><doc>Cancels all active timers</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>timer_id</value><doc>Returns an ID, e.g. useful for debugging</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>timer</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><comment><title level="2">Container variables</title></comment><comment>Container variables exist once per container. Primary access is
done via the <code>var</code> and <code>set_var</code> methods of the container class.
The following functions are often more convenient, however.<newline/>These functions can only be invoked from container contexts.<newline/>More documentation: <reference><element><dot><root>Netplex_advanced</root>contvars</dot></element></reference></comment><exception><exception><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Container_variable_not_found</exception><doc>The variable does not exist</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></exception><exception><exception><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Container_variable_type_mismatch</exception><doc>The (dynamically typed) variable has the wrong type</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></exception><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>int_var</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>string_var</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>float_var</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>float</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>bool_var</value><doc>Access a variable with simple type. May raise
<code>Container_variable_not_found</code> or <code>Container_variable_type_mismatch</code></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>set_int_var</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>set_string_var</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>set_float_var</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>set_bool_var</value><doc>Set a variable with simple type</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>bool</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>make_var_type</value><doc>Create get and set functions for any (monomorphic) type. For example,
to create such function for a type <code>foo</code>, do<newline/><precode>          module E = Netplex_encap.Make_encap(struct type t = foo end)
          let (get, set) = 
            make_var_type E.wrap E.unwrap</precode><newline/>Read on for using functors to create <code>get</code> and <code>set</code>.</doc><arrow><arrow><var>a</var><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>encap</type></resolved></path></arrow><arrow><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>encap</type></resolved></path><var>a</var></arrow><tuple><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><var>a</var></arrow><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></tuple></arrow></arrow></value><module_type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>TYPE</module_type><doc>Just a (monomorphic) type <code>t</code></doc><signature><type><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>TYPE</module_type>t</type></type></signature></module_type><module_type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>VAR_TYPE</module_type><doc>A (monomorphic) type <code>t</code> with two functions <code>get</code> and <code>set</code>
accessing the container variables</doc><signature><type><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>VAR_TYPE</module_type>t</type></type><value><value><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>VAR_TYPE</module_type>get</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>VAR_TYPE</module_type>t</type></identifier></resolved></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>VAR_TYPE</module_type>set</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>VAR_TYPE</module_type>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value></signature></module_type><module><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Make_var_type</module><doc>Creates <code>get</code> and <code>set</code> like <code>make_var_type</code>. Call it like<newline/><precode>         module Foo_var = 
           Make_var_type(struct t = foo end)</precode><newline/>and use <code>Foo_var.get</code> and <code>Foo_var.set</code> to access the container
variables of type <code>foo</code>.</doc><type><functor><argument><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Make_var_type</module>T</argument><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>TYPE</module_type></identifier></resolved></argument><with><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>VAR_TYPE</module_type></identifier></resolved><type><resolved><type><root/>t</type></resolved><path><resolved><type><identifier><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Make_var_type</module>T</argument></identifier>t</type></resolved></path></type></with></functor></type></module><comment><title level="2">System control</title></comment><comment>System control functions can be invoked from both container and controller
contexts.</comment><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>system_shutdown</value><doc>Initiates a system shutdown (like the <code>shutdown</code> method of the
controller)</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>system_restart</value><doc>Initiates a system restart (like the <code>restart</code> method of the
controller)</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><comment><title level="2">Inter-Container Communication</title></comment><comment>These functions can only be invoked from container contexts,
except <code>send_message</code>.</comment><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>send_message</value><doc><code>send_message service_pattern msg_name msg_arguments</code>: Sends
a message to all services and message receivers matching
<code>service_pattern</code>. The pattern may include the wildcard <code>*</code>.<newline/>See the <reference><element><resolved><method><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller</class_type>send_message</method></resolved></element></reference> method for
the notification guarantees.<newline/>This function can be invoked from both container and controller
contexts.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>lookup</value><doc><code>lookup service_name protocol_name</code> tries to find a Unix domain
socket for the service and returns it.<newline/>On Win32, the returned path refers to a file describing the
IPC mechanism. Use <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_sockserv/index.xml"><cmti name="Netplex_sockserv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_sockserv.cmti" digest="8818191be64a4548e9f51d59f670187f"/></xml></base>Netplex_sockserv</root></identifier>any_file_client_connector</value></resolved></element></reference>
to convert the path into an RPC connector.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>lookup_container_sockets</value><doc><code>lookup_container_sockets service_name protocol_name</code>: returns
the Unix Domain paths of all container sockets for this service and
protocol. These are the sockets declared with address type
&quot;container&quot; in the config file.<newline/>On Win32, the returned paths refer to files describing the
IPC mechanism. Use <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_sockserv/index.xml"><cmti name="Netplex_sockserv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_sockserv.cmti" digest="8818191be64a4548e9f51d59f670187f"/></xml></base>Netplex_sockserv</root></identifier>any_file_client_connector</value></resolved></element></reference>
to convert the paths into RPC connectors.<newline/>Container sockets are explained here:
<reference><element><dot><root>Netplex_advanced</root>contsocks</dot></element></reference></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></arrow></value><comment><title level="2">Direct container and admin interface access</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>self_cont</value><doc>Returns the container running the code of the caller,
or raise <code>Not_in_container_thread</code> if called from outside a
container context.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>container</class_type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>self_obj</value><doc>Returns the container or the controller running the code of the
caller, or raise <code>Not_found</code> if called from
neither a container not a controller thread.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><poly_variant><fixed/><constructor>Container<path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>container</class_type></resolved></path></constructor><constructor>Controller<path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller</class_type></resolved></path></constructor></poly_variant></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>current_sys_id</value><doc>Returns the system-dependent thread identifier of the caller
(which must be in container or controller context)</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><poly_variant><fixed/><constructor>Thread<path><resolved><identifier><type>int</type></identifier></resolved></path></constructor><constructor>Process<path><resolved><identifier><type>int</type></identifier></resolved></path></constructor></poly_variant></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>admin_connector</value><doc>Determines the admin socket of the controller, and returns an RPC
client connector suitable for connecting with the admin interface
of the controller. For instance to initiate a system shutdown from
the context of a container:<newline/><precode>         let conn = Netplex_cenv.admin_connector() in
         let client = Netplex_ctrl_clnt.Admin.V2.create_client2 conn in
         Netplex_ctrl_clnt.Admin.V2.system_shutdown client ();
         Rpc_client.shut_down client</precode><newline/>Note that the admin interface is going to evolve, and it is advisable
to avoid admin calls whenever possible.<newline/>This function must be called from container context.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/rpc/rpc_client/index.xml"><cmti name="Rpc_client" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/rpc/rpc_client.cmti" digest="56bf3aef28bd1d22eab29ca954a2cb3c"/></xml></base>Rpc_client</root></identifier>mode2</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>run_in_controller_context</value><doc><code>run_in_controller_context ctrl f</code>: Arranges that <code>f()</code> is executed
in the context of the controller. <bold>This is only possible for
multi-threading but not for multi-processing style!</bold> For
programs using multi-processing, see <reference><element><resolved><module><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_cenv/index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root></identifier>Make_lever</module></resolved></element></reference>
for a workaround.<newline/>This function can be called from any thread. The function <code>f</code> is
executed by pushing it onto the event queue, and calling it when
the pushed event is reached. This is usually a safe point for
many kinds of operations, but if controller methods are invoked
the details are left unspecified.<newline/>For example, this allows it to start helper threads via
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_kit/index.xml"><cmti name="Netplex_kit" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_kit.cmti" digest="6d107f3a241bdcc6ea12e0cafec40331"/></xml></base>Netplex_kit</root></identifier>add_helper_service</value></resolved></element></reference> at any time.<newline/>An example can be found here: <reference><element><dot><root>Netplex_advanced</root>levers</dot></element></reference></doc><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller</class_type></resolved></path><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>run_in_container_context</value><doc><code>run_in_container_context cont f</code>: Arranges that <code>f()</code> is executed
in the context of the container <code>cont</code>. <bold>This is only possible for
multi-threading but not for multi-processing style!</bold><newline/>This function can be called from any thread. The function <code>f</code> is
executed by pushing it onto the event queue, and calling it when
the pushed event is reached. This is usually a safe point for
many kinds of operations, but if container method are invoked
the details are left unspecified.<newline/>There is no guarantee that <code>f</code> is called anytime soon - if the
container is busy with something else than with the event queue
the execution will be blocked until these other activities are
over.</doc><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>container</class_type></resolved></path><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><comment>Levers are a way to send messages to the controller, and to effectively
run functions there that were previously registered.<newline/>More documentation: <reference><element><dot><root>Netplex_advanced</root>levers</dot></element></reference></comment><module_type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>FUN_TYPE</module_type><doc>Abstraction for function types <code>s-&gt;t</code></doc><signature><type><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>FUN_TYPE</module_type>s</type><doc>argument type</doc></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>FUN_TYPE</module_type>r</type><doc>result type</doc></type></signature></module_type><module_type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type><signature><type><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type>s</type><doc>argument type</doc></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type>r</type><doc>result type</doc></type><type><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type>t</type><arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type>s</type></identifier></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type>r</type></identifier></resolved></path></arrow></type><value><value><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type>register</value><doc><code>let reg_lever = register ctrl raw_lever</code>:
Registers <code>raw_lever</code> in the controller <code>ctrl</code>, so one can call
<code>reg_lever</code> to activate it. For example:<newline/><precode>           module LT = struct type s = unit type r = int end
           module L = Make_lever(LT)
         
           let get_num_services =
             L.register ctrl (fun ctrl () -&gt; List.length ctrl#services)</precode><newline/>The registration must be done in controller context, e.g.
in the <code>pre_start_hook</code> of a container.<newline/>From the running container, one can now call:<newline/><precode>get_num_services()</precode><newline/>to get the current length of the <code>ctrl#services</code> list.</doc><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller</class_type></resolved></path><arrow><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller</class_type></resolved></path><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type>t</type></identifier></resolved></path></arrow><path><resolved><identifier><type><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type>t</type></identifier></resolved></path></arrow></arrow></value></signature></module_type><module><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Make_lever</module><doc>Creates a <code>LEVER</code> module from a function type as specified in
<code>FUN_TYPE</code></doc><type><functor><argument><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Make_lever</module>T</argument><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>FUN_TYPE</module_type></identifier></resolved></argument><with><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>LEVER</module_type></identifier></resolved><type><resolved><type><root/>s</type></resolved><path><resolved><type><identifier><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Make_lever</module>T</argument></identifier>s</type></resolved></path></type><type><resolved><type><root/>r</type></resolved><path><resolved><type><identifier><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Make_lever</module>T</argument></identifier>r</type></resolved></path></type></with></functor></type></module><comment><title level="2">Persistent kernel objects</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>pmanage</value><doc>Access the manager for persistent kernel objects with limited
lifetime. Among these objects there are shared memory objects,
and named semaphores. These objects can usually be deleted when
the program finishes (or crashes), but this is not done automatically
because of kernel persistency.<newline/>See <reference><element><dot><root>Netplex_admin</root>unlink</dot></element></reference> for more information.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netsys/netsys_pmanage/index.xml"><cmti name="Netsys_pmanage" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netsys/netsys_pmanage.cmti" digest="92c0604cf0e5efc29660e1f7814481fc"/></xml></base>Netsys_pmanage</root></identifier>pmanage</class_type></resolved></path></arrow></value><comment><title level="1">Debugging</title></comment><module><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Debug</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>Debug</module>enable</value><doc>Enables <reference><element><root>Netlog</root></element></reference>-style debugging</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value></signature></type></module><stop/><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>register_par</value><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>parallelizer</class_type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>register_cont</value><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>container</class_type></resolved></path><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>par_thread</class_type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>unregister_cont</value><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>container</class_type></resolved></path><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>par_thread</class_type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>register_ctrl</value><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller</class_type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netplex_cenv" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_cenv.cmti" digest="43133314057c968b273798ffd6e47f8f"/></xml></base>Netplex_cenv</root>unregister_ctrl</value><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/netplex/netplex_types/index.xml"><cmti name="Netplex_types" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netplex/netplex_types.cmti" digest="b09b49cdab7359a58acb7a6f179e24ac"/></xml></base>Netplex_types</root></identifier>controller</class_type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value></unit>