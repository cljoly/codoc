<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></html></base>Netshm</root><digest>1b4b76eeb9725191157a504677f82580</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>netshm.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm</dir><digest>e1192b11732c32ff711b63bad13451da</digest></source><doc>Shared memory for O'Caml programs using multi-processing</doc><comment><title level="1">Shared Memory Descriptors</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_descr</type><doc>A shared memory descriptor refers to a shared memory object.
Such a descriptor must only be opened once for every process.</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_type</type><poly_variant><fixed/><constructor>POSIX<constant/></constructor><constructor>File<constant/></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>supported_types</value><doc>The types supported for this OS</doc><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_type</type></identifier></resolved></path></path></value><type><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_name</type><doc>A <code>shm_name</code> is a name for a shared memory object.</doc><poly_variant><fixed/><constructor>POSIX<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor><constructor>File<path><resolved><identifier><type>string</type></identifier></resolved></path></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_type_of_name</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_name</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_type</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>open_shm</value><doc>Opens the shared memory object.<newline/>For <code>POSIX_shm</code> not all open flags can be specified. The flags
are limited to <code>O_RDONLY</code>, <code>O_RDWR</code>, <code>O_CREAT</code>, <code>O_EXCL</code> and
<code>O_TRUNC</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_name</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>open_flag</type></resolved></path></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_descr</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>create_unique_shm</value><doc>Create a shared memory object under a name that is derived
from the passed <code>shm_name</code>. The actual name can be queried with
<code>name_of_shm</code> (below).<newline/>For <code>POSIX</code> and <code>File</code> names, deriving works by replacing
the 'X' letters in the file name by random digits and letters.
For example, if the name is <code>File &quot;/my/directory/ocaml.XXXXXX&quot;</code>
six random characters are generated and replace the 'X' letters
such that the file is unique.<newline/>The integer is the file permission.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_name</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_descr</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>name_of_shm</value><doc>Returns the name of an object</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_descr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_name</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>close_shm</value><doc>Closes the object. The object remains existent and can be
opened again.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_descr</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>unlink_shm</value><doc>Removes the name permanently from the system</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_name</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>chmod_shm</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_descr</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>chown_shm</value><doc>Set file permission bits, user and group ownership of the object</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_descr</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>locking_method</type><doc>The locking method is used to ensure that parallel read and write
operations to the memory object do not interfer with each other.
If <code>No_locking</code> is selected, such protection is not done - this
is ok if only read accesses occur or if the user can ensure that
never a write access is done in parallel with another access.
The locking method must be compatible with the type of shared memory.</doc><poly_variant><fixed/><constructor>No_locking<constant/></constructor><constructor>Record_locking<constant/></constructor></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>best_locking_method</value><doc>Return the best locking method other than <code>No_locking</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_type</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>locking_method</type></identifier></resolved></path></arrow></value><comment><title level="1">Shared Memory Tables</title></comment><comment>This is a quite basic data structure implemented for shared memory:
hash tables with <code>int32</code> as key and one-dimensional <code>int32</code>
bigarray as values.</comment><comment>The semantics resembles the <code>Hashtbl</code> of stdlib</comment><type><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></type><type><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type><path><resolved><type><module><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>Array1</module>t</type></resolved><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>int32_elt</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>c_layout</type></resolved></path></path></type><exception><exception><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>Corrupt_file</exception><doc>Raised when a violation of the object format is detected</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></exception><exception><exception><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>Deadlock</exception><doc>Raised when a deadlock situation was detected. Deadlocks can occur
when the <code>group</code> function is used</doc></exception><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>manage</value><doc>Starts managing an open shared memory object as <code>shm_table</code>. If
the object is empty, it is automatically enlarged to the
minimum size and initialized. If the object is non-empty it is
expected that it already contains a valid <code>shm_table</code> structure.<newline/>The object automatically grows in size when new elements are
added to the object. By removing elements, however, the
object is never shrinked. Unused memory is held back for later
reallocation by the same <code>shm_table</code>.<newline/>By default, the table uses a page size of 256 bytes. The page size is
the unit of memory allocation. The parameter <code>pagesize</code> overrides
this default. The page size must be at least 160 and divisible by 4.
The page size must be the same when the table was created.<newline/>By passing <code>init</code> it is enforced that the table is re-initialized
(deleted and again created). The argument of <code>init</code> is a hint
for the number of elements the table will contain. The data
structure is then created such that this many elements can be added
without needing expensive data reorganization.<newline/>Special note for using <code>shm_table</code> with multiple processes: Every
process must create its own <code>shm_descr</code>, and every process must
call <code>manage</code> to manage it. It is not sufficient to just fork
a new process, and to keep using the already existing
<code>shm_descr</code> or <code>shm_table</code> in the subprocess. (This doesn't work
because the underlying file descriptor would be shared.)</doc><arrow><optional>pagesize</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>init</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>locking_method</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_descr</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>group</value><doc>Execute a sequence of operations in a group:<newline/><precode>      let r =
         group table
           (fun arg -&gt;
              operation1; operation2; ...)
           arg</precode><newline/>Operations can be any reading or writing functions from below. The
effect is that the locking requirements of the operations are merged,
so that no operation of another process can interfer with the grouped
sequence. Note, however, that this gives no real atomicity as there
is no way to roll back half-executed sequences.<newline/>Groups can be nested.<newline/>An example of <code>group</code> is to set a binding depending on the previous
value of the binding. Here, we add 1:<newline/><precode>      let add_one table =
         group table
           (fun key -&gt;
             let ba =
               try find table key 
               with Not_found -&gt; 
                 Bigarray.Array1.create Bigarray.int32 Bigarray.c_layout 1 in
             ba.{ 0 } &lt;- Int32.succ ba.{ 0 };
             replace table key ba
           )</precode><newline/>Grouping protects the update from modifications done by other processes
at the same time. In particular, without grouping it can happen that
another process also modifies the same value between <code>find</code> and
<code>replace</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><arrow><var>a</var><var>b</var></arrow><arrow><var>a</var><var>b</var></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>add</value><doc><code>add tbl key value</code>: Adds the binding of <code>key</code> to <code>value</code> to the
table. Previous bindings are not removed, but simply hidden.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>find</value><doc><code>find tbl key</code>: Finds the current binding of <code>key</code> in <code>tbl</code> or
raises <code>Not_found</code> if no such binding exists.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>find_all</value><doc><code>find_all tbl key</code> returns the list of all data
associated with <code>key</code> in <code>tbl</code>.
The current binding is returned first, then the previous
bindings, in reverse order of introduction in the table.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>mem</value><doc><code>mem tbl key</code> checks if <code>key</code> is bound in <code>tbl</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>remove</value><doc><code>remove tbl key</code> removes the current binding of <code>key</code> in <code>tbl</code>,
restoring the previous binding if it exists.
It does nothing if <code>key</code> is not bound in <code>tbl</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>replace</value><doc><code>replace tbl key value</code> replaces the current binding of <code>key</code>
in <code>tbl</code> by a binding of <code>key</code> to <code>value</code>. If <code>key</code> is unbound in <code>tbl</code>,
a binding of <code>key</code> to <code>value</code> is added to <code>tbl</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>iter</value><doc><code>iter f tbl</code> applies <code>f</code> to all bindings in table <code>tbl</code>.
<code>f</code> receives the key as first argument, and the associated value
as second argument. Each binding is presented exactly once to <code>f</code>.
The order in which the bindings are passed to <code>f</code> is unspecified.
However, if the table contains several bindings for the same key,
they are passed to <code>f</code> in reverse order of introduction, that is,
the most recent binding is passed first.<newline/>While the iteration is in progress, the table is read-locked.
That means you cannot modify it during the iteration.</doc><arrow><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>iter_keys</value><doc><code>iter_keys f tbl</code> applies <code>f</code> to all keys in table <code>tbl</code>. If there
are several bindings for a key, <code>f</code> is only called once.<newline/>While the iteration is in progress, the table is locked.
That means you cannot modify it during the iteration.</doc><arrow><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>fold</value><doc><code>fold f tbl init</code> computes
<code>(f kN dN ... (f k1 d1 init)...)</code>,
where <code>k1 ... kN</code> are the keys of all bindings in <code>tbl</code>,
and <code>d1 ... dN</code> are the associated values.
Each binding is presented exactly once to <code>f</code>.
The order in which the bindings are passed to <code>f</code> is unspecified.
However, if the table contains several bindings for the same key,
they are passed to <code>f</code> in reverse order of introduction, that is,
the most recent binding is passed first.<newline/>While the iteration is in progress, the table is locked.
That means you cannot modify it during the iteration.</doc><arrow><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path><arrow><var>a</var><var>a</var></arrow></arrow></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><var>a</var><var>a</var></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>length</value><doc><code>length tbl</code> returns the number of bindings in <code>tbl</code>.
Multiple bindings are counted multiply, so <code>length</code>
gives the number of times <code>iter</code> calls its first argument.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><comment><title level="1">Enhanced API to shared memory tables</title></comment><exception><exception><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>Next</exception></exception><exception><exception><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>Break</exception></exception><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>read_blocks</value><doc><code>find_blocks tbl key f</code>: The values may be stored in several
disk blocks. This interface allows one to access the values block by
block. As <code>find_all</code>, all bindings for <code>key</code> in <code>tbl</code> are determined
in reverse order, i.e. the newest binding first, the oldest last.
For every binding <code>value</code>, the function <code>f</code> is invoked in a sequence
<code>f (Some v1)</code>, <code>f (Some v2)</code>, ..., <code>f (Some vN)</code>, <code>f None</code>
where
<code>value</code> is the array concatenation of <code>v1</code>, <code>v2</code>, ..., <code>vN</code>.
The function <code>f</code> may raise the exception <code>Next</code> to go
directly to the start of the next binding of <code>key</code>.
The exception <code>Break</code> stops the iteration immediately.<newline/>Note that the <code>int32_array</code> fragments <code>vK</code> point to shared memory.
Any assignment would modify the shared memory object directly!
The binding is at that time, however, only read-locked, so this
should be avoided.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><arrow><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>write_op</type><poly_variant><fixed/><constructor>Remove_binding<constant/></constructor></poly_variant></type><type><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>ctrl_op</type><poly_variant><fixed/><constructor>Nop<constant/></constructor><type><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>write_op</type></identifier></resolved></path></type></poly_variant></type><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>write_blocks</value><doc><code>write_blocks tbl ops key f</code>: Like <code>read_blocks</code> this function iterates
over the blocks of all bindings for <code>key</code>. For every binding <code>value</code>,
the function <code>f</code> is invoked in a sequence
<code>f (Some v1)</code>, <code>f (Some v2)</code>, ..., <code>f (Some vN)</code>, <code>f None</code>.
Unlike <code>read_blocks</code> the function <code>f</code> returns a value.
The last non-<code>`Nop</code> result value in this sequence determines the
modification to carry out for the binding:<newline/><list><item><code>`Remove_binding</code>: The whole binding is removed from the table.</item></list>If all invocations of <code>f</code> just return <code>`Nop</code>, no further modification
is done.<newline/>The modifications must be announced in the <code>ops</code> argument. It is
not allowed that <code>f</code> returns a value not being a member of <code>ops</code>
(except <code>`Nop</code>).<newline/>It is possible to raise the special exceptions <code>Next</code> and <code>Break</code>
just as for <code>read_blocks</code>.<newline/>Note that the <code>int32_array</code> fragments <code>vK</code> point to shared memory.
Any assignment will modify the shared memory object directly!
The binding is at that time write-locked, so such assignments
are protected against concurrent writes.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>write_op</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><arrow><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>ctrl_op</type></identifier></resolved></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>dump</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>bigarray</value><arrow><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>int32_array</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>memory</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Netshm" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/netshm/netshm.cmti" digest="1b4b76eeb9725191157a504677f82580"/></xml></base>Netshm</root>shm_table</type></identifier></resolved></path><path><resolved><type><module><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>Array2</module>t</type></resolved><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>int32_elt</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>c_layout</type></resolved></path></path></arrow></value></unit>