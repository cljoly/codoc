<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></html></base>Shell</root><digest>6524b490ffcd34f586611e86202aac97</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Shell_sys<digest>c3c871471e040ad097ba823e433888c3</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><source><file>shell.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell</dir><digest>8fc66d933d4c8f79db8de633a3121a04</digest></source><doc>Calls external programs, creates pipelines, etc. (simplified interface)</doc><comment><bold>Signal handlers:</bold> When you call the function <code>call</code>, signal handlers
are automatically installed by <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>install_job_handlers</value></resolved></element></reference>, unless
this installation has already been performed. You can configure these
handlers by <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>configure_job_handlers</value></resolved></element></reference>. The handlers remain
in effect even after <code>call</code> returns.<newline/>Note that this has a global side effect on the whole process, because
there is only one set of signal handlers.</comment><comment><title level="1">Calling commands and pipelines</title></comment><comment>The following functions are simplified versions of the
<code>Shell_sys.job</code> abstraction.</comment><exception><exception><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>Subprocess_error</exception><doc>The string contains the called commands in a readable representation.
The list enumerates the return codes of the processes that have
been started for the commands.</doc><arguments><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>process_status</type></resolved></path></tuple></path></arguments></exception><type><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type><doc>A producer generates data sent to a called process</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type><doc>A consumer receives data from a called process</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assignment</type><doc>An assignment redirects file descriptors while calling a process</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>command</value><doc>Creates a command descriptor, to be used in <code>call</code>. The anonymous
string argument is the name of the executable to invoke. If the name
contains a '/', it is simply interpreted as the filename of the
executable. Otherwise the command is searched in the current PATH.<param><name>cmdname</name>The name of the command passed in <code>argv[0]</code>. By
default, this argument is derived from the name of the executable.</param><param><name>arguments</name>The arguments of the command (starting with the
first real argument, skipping <code>cmdname</code>). By default <code>[]</code>.</param><param><name>chdir</name>Before the command is executed it is changed to
this directory.</param><param><name>environment</name>The environment of the command. By default, the
current environment</param><param><name>descriptors</name>The list of file descriptors to share with the
current process; all other file descriptors will be closed.
By default, <code>[stdin; stdout; stderr]</code>.</param><param><name>assignments</name>The list of descriptor assignments. The assignments
are applied one after the other. By default empty.</param></doc><arrow><optional>cmdname</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><optional>arguments</optional><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><arrow><optional>chdir</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><optional>environment</optional><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>environment</type></resolved></path><arrow><optional>descriptors</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><arrow><optional>assignments</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assignment</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>command</type></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>cmd</value><doc>The same as <code>command</code> but with a slightly different interface: Use
<precode>cmd &quot;ls&quot; [ &quot;/dir/file&quot; ]</precode>
instead of
<precode>command ~arguments:[|&quot;/dir/file&quot;|] &quot;ls&quot;</precode><newline/>The named arguments have the same meanings as in <code>command</code>.</doc><arrow><optional>cmdname</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><optional>chdir</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><optional>environment</optional><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>environment</type></resolved></path><arrow><optional>descriptors</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><arrow><optional>assignments</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assignment</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>command</type></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>call</value><doc>Starts the pipeline represented by the list of commands; i.e.
if <code>[c1;c2;...;cN]</code> is passed, this corresponds to the pipeline
<code>c1 | c2 | ... | cN</code> (in shell notation).<newline/>The function returns normally if all processes can be started and
terminate regularly with exit code 0. If a process terminates with
some other exit code, and <code>ignore_error_code</code> is set, the function
returns normally, too. The latter does not apply if a process terminates
because of a signal (which triggers always the exception
<code>Subprocess_error</code>).<newline/>If a process terminates with an exit code other than 0 and
<code>ignore_error_code</code> is not set (the default), or if a process is
terminated because of a signal, the exception <code>Subprocess_error</code>
will be raised. For every command the process result is included
in the exception argument.<newline/>If a process cannot be started (e.g. because of insufficient
resources), the function will try to shut down the already running
part of the pipeline by sending SIGTERM to these processes.
It is not checked whether the processes actually terminate (no
&quot;wait&quot; for them); an appropriate exception will be raised.
In the case that it is not even possible to perform these cleanup
actions, the exception <code>Shell_sys.Fatal_error</code> will be raised.<newline/>When the function raises an exception other than <code>Subprocess_error</code>,
a serious error condition has happened, and it is recommended
to exit the program as soon as possible.<param><name>ignore_error_code</name>If <code>true</code>, exit codes other than 0 of the
subprocesses are ignored. This does not apply to signals, however.
By default <code>false</code>.</param><param><name>mode</name>See <reference><element><dot><root>Shell_sys</root>run_job</dot></element></reference> for a detailed description
of this parameter. By default <code>Same_as_caller</code>.</param><param><name>stdin</name>If present, the first process of the pipeline reads
input data from this procucer. By default, there is no such
producer.</param><param><name>stdout</name>If present, the last process of the pipeline writes
output data to this consumer. By default, there is no such
consumer.</param><param><name>stderr</name>If present, all processes of the pipeline write
their error messages to this consumer. By default, there is no
such consumer.</param></doc><arrow><optional>ignore_error_code</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>mode</optional><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>group_mode</type></resolved></path><arrow><optional>stdin</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type></identifier></resolved></path><arrow><optional>stdout</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path><arrow><optional>stderr</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>command</type></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>setup_job</value><doc>Creates a job like <code>call</code>, but does not execute it. In addition to
the job, the file descriptors are returned that must be closed
when the job is done.</doc><arrow><optional>stdin</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type></identifier></resolved></path><arrow><optional>stdout</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path><arrow><optional>stderr</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>command</type></resolved></path></path><tuple><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>job</type></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path></tuple></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>postprocess_job</value><doc>Looks at the error codes of the job, and raises
<code>Subprocess_error</code> when there is an error that cannot be ignored.
As error conditions are considered non-zero exit codes of any
called processes, or signals terminating any of the called processes.<param><name>ignore_error_code</name>If <code>true</code>, exit codes other than 0 of the
subprocesses are ignored. This does not apply to signals, however.
By default <code>false</code>.</param></doc><arrow><optional>ignore_error_code</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>job_instance</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assign</value><doc>Arranges a redirection such that writing to <code>src</code> or reading from <code>src</code>
will actually write to <code>target</code> or read from <code>target</code>
(i.e., the <code>target</code> descriptor is duplicated and replaces
the <code>src</code> descriptor just before the process is launched.)<newline/>Note that assignments work only if the descriptors are shared
with the called process, so they must also be contained in the
<code>descriptors</code> list of <code>command</code> or <code>cmd</code>. Furthermore, the
close-on-exec flag must not be set.</doc><arrow><label>src</label><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><label>target</label><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assignment</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>(&gt;&amp;)</value><doc>Same as <code>assign</code>, but infix notation. For example,
<code>stdout &gt;&amp; stderr</code> creates an assignment such that all output
to stdout is redirected to stderr.<newline/><code>f &gt;&amp; g</code> is the same as <code>assign ~src:f target:g</code>. It should
be used for output assignments (as in the Bourne shell).</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assignment</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>(&lt;&amp;)</value><doc>Same as <code>assign</code>, but infix notation. For example,
<code>stdin &lt;&amp; f</code> creates an assignment such that the called process
reads from the open file descriptor <code>f</code>.<newline/><code>f &lt;&amp; g</code> is the same as <code>assign ~src:f target:g</code>. It should
be used for input assignments (as in the Bourne shell).</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assignment</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assigned_pair</value><doc>Returns the target and the source of the assignment as
pair of descriptors <code>(target,src)</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>assignment</type></identifier></resolved></path><tuple><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></tuple></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>stdin</value><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>stdout</value><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>stderr</value><doc>The standard descriptors; defined here for convenience.</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>from_string</value><doc>Creates a producer taking the data from a string <code>s</code>. After these data
are sent, the pipeline is closed.<param><name>pos</name>The position in <code>s</code> where the data slice to transfer begins.
By default <code>0</code>.</param><param><name>len</name>The length of the data slice to transfer. By default,
all bytes from the start position <code>pos</code> to the end of the
string are taken.</param><param><name>epipe</name>This function is called when the pipeline breaks
(EPIPE). Default: the empty function. EPIPE exceptions are
always caught, and implicitly handled by closing the pipeline.</param></doc><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>epipe</optional><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>from_stream</value><doc>Creates a producer taking the data from a stream of strings.
After the data are sent, the pipeline is closed.<param><name>epipe</name>This function is called when the pipeline breaks
(EPIPE). Default: the empty function. EPIPE exceptions are
always caught, and implicitly handled by closing the pipeline.</param></doc><arrow><optional>epipe</optional><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/stream/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/stream/index.xml"><cmti name="Stream" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/stream.cmti" digest="55948988e71c3ee1749feb21ccec9fc9"/></xml></html></base>Stream</root></identifier>t</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>from_function</value><doc>Creates a producer taking the data from a function. See
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>add_producer</value></resolved></element></reference> for the meaning of the <code>producer</code>
function.</doc><arrow><label>producer</label><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>from_file</value><doc>Creates a producer taking the data from the file whose name is
passed to this function.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>from_fd</value><doc>Creates a producer taking the data from the file descriptor passed
to this function.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>from_dev_null</value><doc>A producer taking the data from <code>/dev/null</code>.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>producer</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>to_buffer</value><doc>Creates a consumer writing the data into the passed buffer.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.xml"><cmti name="Buffer" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/buffer.cmti" digest="a579f4a57e300ec755f84af883c1e51b"/></xml></html></base>Buffer</root></identifier>t</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>to_function</value><doc>Creates a consumer writing the data by calling a function. See
<reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>add_consumer</value></resolved></element></reference> for the meaning of the <code>consumer</code>
function.</doc><arrow><label>consumer</label><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>to_file</value><doc>Creates a consumer writing the data into the file whose name is
passed to this function. Unless <code>append</code> is given, the file is
truncated and overwritten. If <code>append</code> is <code>true</code>, the data are
appended to the file. By default, <code>append</code> is <code>false</code>.</doc><arrow><optional>append</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>to_fd</value><doc>Creates a consumer redirecting the data to the file descriptor</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>to_dev_null</value><doc>A consumer redirecting the data to <code>/dev/null</code>.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell.cmti" digest="6524b490ffcd34f586611e86202aac97"/></xml></base>Shell</root>consumer</type></identifier></resolved></path></value><comment><title level="1">Examples</title><newline/>The following examples show toploop sessions using <code>Shell</code>.</comment><comment><title level="2">Invoking simple commands</title><newline/>Call the command &quot;ls&quot; without redirection:
<precode>   # call [ command &quot;ls&quot; ];;
   IDEAS       s1.ml~      shell.mli~      shell_sys.ml~  unix_exts.ml
   META        shell.a     shell.ml~       shell_sys.o    unix_exts.mli
   Makefile    shell.cma   shell_sys.cmi   t              unix_exts.mli~
   Makefile~   shell.cmi   shell_sys.cmo   testjob        unix_exts.ml~
   depend      shell.cmo   shell_sys.cmx   testjob~       unix_exts.o
   libshell.a  shell.cmxa  shell_sys.ml    unix_exts.cmi  unix_exts_c.c
   log         shell.ml    shell_sys.mli   unix_exts.cmo  unix_exts_c.c~
   s1.ml       shell.mli   shell_sys.mli~  unix_exts.cmx  unix_exts_c.o
   \- : unit = ()</precode><newline/><title level="2">Redirecting stdout to a buffer</title><newline/>The output of &quot;ls&quot; is collected in the buffer <code>b</code>:
<precode>   # let b = Buffer.create 10;;
   val b : Buffer.t = &lt;abstr&gt;
   # call ~stdout:(to_buffer b) [ command &quot;ls&quot; ];;
   \- : unit = ()
   # Buffer.contents b;;
   \- : string =
   &quot;IDEAS\nMETA\nMakefile\nMakefile~\ndepend\n...&quot;</precode><newline/><title level="2">Subprocess errors are caught and propagated to the caller</title><newline/>Because &quot;/a&quot; does not exist, &quot;ls&quot; will fail. The command writes the
message to stderr (not redirected here), and returns with an exit
code of 1, triggering an exception:
<precode>   # call [ command ~arguments:[| &quot;/a&quot; |] &quot;ls&quot; ];;
   /bin/ls: /a: No such file or directory
   Uncaught exception: Shell.Subprocess_error [&quot;/bin/ls&quot;, Unix.WEXITED 1].</precode><newline/><title level="2">Redirecting stderr, too</title><newline/>Here, the message written to stderr is collected in <code>b</code>:
<precode>   # Buffer.clear b;;
   \- : unit = ()
   # call ~stderr:(to_buffer b) [ command ~arguments:[| &quot;/a&quot; |] &quot;ls&quot; ];;
   Uncaught exception: Shell.Subprocess_error [&quot;/bin/ls&quot;, Unix.WEXITED 1].
   # Buffer.contents b;;
   \- : string = &quot;/bin/ls: /a: No such file or directory\n&quot;</precode><newline/><title level="2">Pipelines</title><newline/>Here, the output of &quot;cat&quot; becomes the input of &quot;sort&quot;:
<precode>   # call [ command ~arguments:[|&quot;META&quot;|] &quot;cat&quot;; command &quot;sort&quot; ];;
   archive(byte) = &quot;shell.cma&quot;
   archive(native) = &quot;shell.cmxa&quot;
   description = &quot;Unix shell functions&quot;
   linkopts = &quot;-cclib -lshell&quot;
   requires = &quot;unix str&quot;
   version = &quot;0.0&quot;
   \- : unit = ()</precode><newline/><title level="2">Combining pipelines and redirections</title><newline/>The same, but the output of &quot;sort&quot; is collected in the buffer <code>b</code>:
<precode>   # Buffer.clear b;;
   \- : unit = ()
   # call ~stdout:(to_buffer b) [ command ~arguments:[|&quot;META&quot;|] &quot;cat&quot;; command &quot;sort&quot; ];;
   \- : unit = ()
   # Buffer.contents b;;
   \- : string =
   &quot;archive(byte) = \&quot;shell.cma\&quot;\narchive(native) = \&quot;shell.cmxa\&quot;\ndescription = \&quot;Unix shell functions\&quot;\nlinkopts = \&quot;-cclib -lshell\&quot;\nrequires = \&quot;unix str\&quot;\nversion = \&quot;0.0\&quot;\n&quot;</precode><newline/><title level="2">Redirection from a string</title><newline/>The contents of the string <code>s</code> are written to the input of &quot;sort&quot;:
<precode>   # let s = &quot;f\na\nd\nc\n&quot;;;
   val s : string = &quot;f\na\nd\nc\n&quot;
   # call ~stdin:(from_string s) [ command &quot;sort&quot; ];;
   a
   c
   d
   f
   \- : unit = ()</precode><newline/><title level="2">Combined redirections</title><newline/>It is possible to have several redirections. Here, the string <code>s</code> is
sorted by &quot;sort&quot;, and the output is collected in the buffer <code>b</code>:
<precode>   # Buffer.clear b;;
   \- : unit = ()
   # call ~stdout:(to_buffer b) ~stdin:(from_string s) [ command &quot;sort&quot; ];;
   \- : unit = ()
   # Buffer.contents b;;
   \- : string = &quot;a\nc\nd\nf\n&quot;</precode><newline/><title level="2">Redirections combined with assignments</title><newline/>Here, the output and errors of &quot;ls&quot; are both collected in the buffer
<code>b</code>:
<precode>   # Buffer.clear b;;
   \- : unit = ()
   # call ~stdout:(to_buffer b) 
          [ command 
              ~assignments:[ stderr &gt;&amp; stdout ] 
              ~arguments:[| &quot;/a&quot; |] 
              &quot;ls&quot; ];;
   Uncaught exception: Shell.Subprocess_error [&quot;/bin/ls&quot;, Unix.WEXITED 1].
   # Buffer.contents b;;
   \- : string = &quot;/bin/ls: /a: No such file or directory\n&quot;</precode><newline/><title level="2">Final notes</title><newline/>Of course, all features can be combined arbitrarily.<newline/>Note that error reporting is better than in a traditional shell, because
the exit codes of all started commands are returned. (Shells usually only
return the exit code of the last command of a pipeline.)<newline/>For non-standard pipelines, you can also use the functions in
Shell_sys. &quot;call&quot; is a simple concatenation of Shell_sys invocations.</comment><stop/></unit>