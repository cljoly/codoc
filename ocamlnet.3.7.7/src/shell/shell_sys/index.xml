<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></html></base>Shell_sys</root><digest>c3c871471e040ad097ba823e433888c3</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><source><file>shell_sys.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell</dir><digest>91c5a21162bd77757cd93ccccbcaf7a9</digest></source><doc>Calls external programs, creates pipelines, etc. (full interface)</doc><comment>This module is now thread-safe (as of May 2009), provided the
threads do no share the same <code>Shell</code> or <code>Shell_sys</code> values.
Problems reported earlier here have been resolved.</comment><comment>If you get errors like &quot;Netsys_posix.watch_subprocess: uninitialized&quot;
you should call <reference><element><resolved><value><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/shell/shell_sys/index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root></identifier>install_job_handlers</value></resolved></element></reference>.</comment><comment><title level="1">Common exceptions</title></comment><exception><exception><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>Fatal_error</exception><doc>An error is fatal if it is not possible to recover from it in a
predictable manner. In this case, many function wrap such exceptions
<code>x</code> into <code>Fatal_error x</code>.</doc><arguments><path><resolved><identifier><type>exn</type></identifier></resolved></path></arguments></exception><comment><title level="1">Environments</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type><doc>The abstract type of a process environment</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>create_env</value><doc>Creates an empty environment</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>current_env</value><doc>Returns the environment of the current process as abstract environment
value</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>copy_env</value><doc>Copies an environment</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_env</value><doc>Sets the contents of the environment to the passed string array</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><arrow><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_env</value><doc>Gets the contents of the environment as string array</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>iter_env</value><doc>Iterates over the strings of the environment, and calls
<code>f s</code> for every string <code>s</code>.</doc><arrow><label>f</label><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_env_var</value><doc><code>set_env_var env varname varval</code>: Sets the value of the variable
<code>varname</code> in the environment <code>env</code> to <code>varval</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_env_var</value><doc>Returns the value of the variable in the environment</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>iter_env_vars</value><doc>Iterates over the variables of the environment, and calls
<code>f name value</code> for every variable with <code>name</code> and <code>value</code>.</doc><arrow><label>f</label><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><comment><title level="1">Commands</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type><doc>A command describes how to start a new process</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</value><doc>Creates a command from the passed arguments:<param><name>filename</name>The name of the executable to start. The executable
file is not searched, use <reference><element><dot><root>Shell_sys</root>lookup_executable</dot></element></reference> for this
purpose.</param><param><name>cmdname</name>The name of the command passed in <code>argv[0]</code>. By
default, this argument is derived from <code>filename</code>.</param><param><name>arguments</name>The arguments of the command (starting with the
first real argument, skipping <code>cmdname</code>). By default <code>[]</code>.</param><param><name>chdir</name>Before the command is executed it is changed to
this directory.</param><param><name>environment</name>The environment of the command. By default, the
current environment</param><param><name>assignments</name>A list of descriptor pairs <code>(fd_from,fd_to)</code>.
The descriptor <code>fd_from</code> in the current process will be assigned
to <code>fd_to</code> in the subprocess started for the command.
The list of assignments is executed sequentially, so
later assignments must take the effect of previous assignments
into account. For example, to make stderr of the subprocess write
to stdout of the parent process, pass <code>[(stdout; stderr)]</code>.<list><item>By default, there are no assignments.</item></list></param><param><name>descriptors</name>The list of file descriptors to share with the
current process. In the subprocess only those descriptors remain open
that are either mentioned in <code>descriptors</code>, or that are the final target
of assignments. By default, <code>[stdin; stdout; stderr]</code>.<newline/>Note that only the <bold>final targets</bold> of assignments remain open in the
subprocess (unless they are also listed in <code>descriptors</code>). If there
are cascaded assignments like <code>(fd1, fd2); (fd2, fd3)</code> the intermediate
descriptors like <code>fd2</code> are not considered as final targets; only <code>fd3</code>
would be a final target in this example.</param></doc><arrow><optional>cmdname</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><optional>arguments</optional><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><arrow><optional>chdir</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><optional>environment</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><arrow><optional>descriptors</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><arrow><optional>assignments</optional><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></tuple></path><arrow><label>filename</label><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></arrow></arrow></value><exception><exception><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>Executable_not_found</exception><doc>Raised when an executable file cannot be found; the argument is the
search name</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></exception><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>lookup_executable</value><doc>Searches an executable file. If the passed search name contains a
slash, it is expected that this name is already the path name of the
executable. If the search name does not contain a slash character,
it is searched in the directories enumerated by the search path.<param><name>path</name>The search path. By default, the contents of the
variable PATH of the current environment, split by ':', are
used (Win32: SearchPath is used)</param></doc><arrow><optional>path</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_cmdname</value><doc>Returns the name of the command</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_arguments</value><doc>Returns the argument array of the command (skipping the command name)</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_chdir</value><doc>Returns the <code>chdir</code> parameter of the command</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_environment</value><doc>Returns the designated environment of the command</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_descriptors</value><doc>Returns the list of active descriptors</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_assignments</value><doc>Returns the list of assignments <code>(fd_from,fd_to)</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></tuple></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>get_filename</value><doc>Returns the file name of the executable</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_cmdname</value><doc>Sets the command name</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_arguments</value><doc>Sets the argument array</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_chdir</value><doc>Sets the <code>chdir</code> parameter of the command</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_environment</value><doc>Sets the environment</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>environment</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_descriptors</value><doc>Sets the list of active descriptors</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_assignments</value><doc>Sets the list of assignments <code>(fd_from,fd_to)</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></tuple></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>set_filename</value><doc>Sets the file name of the executable to start</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>copy_command</value><doc>Returns a duplicate of the command description</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>is_executable</value><doc>Returns <code>true</code> if there is an executable file for the command, and
it is permitted to run this file (as stated by the file permissions).<newline/><code>false</code> means that the command can definitely not be executed. However,
even if the function returns <code>true</code> there may be still reasons that
execution will fail.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><comment><title level="1">Processes</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type><doc>A process is the running instance of a command (a Unix process)</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_action</type><doc>Determines in which process group the new process will run</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_action</type>New_bg_group</constructor><doc>Start process in new background process group</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_action</type>New_fg_group</constructor><doc>Start process in new foreground process group</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_action</type>Join_group</constructor><doc>Started process joins this existing process group</doc><arguments><path><resolved><identifier><type>int</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_action</type>Current_group</constructor><doc>Started process remains in the current group</doc></constructor></variant></type><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>fwd_mode</type><doc>Determines whether and how keyboard signals (SIGINT, SIGQUIT) are
forwarded from the caller to the new child. There is no forwarding
in Win32 - all console applications get the keyboard signals anyway.</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>fwd_mode</type>No_forward</constructor><doc>No forwarding of keyboard signals</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>fwd_mode</type>Forward_to_process</constructor><doc>Forward signals directly to subprocess</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>fwd_mode</type>Forward_to_group</constructor><doc>Forward signals to the process group of the subprocess</doc></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>run</value><doc>Executes the command concurrently with the current process. The function
does not wait until the process terminates; it returns immediately after
the <code>exec</code> system call has been successfully performed; errors that
occur until <code>exec</code> are caught and reported as exception (even errors
in the fresh subprocess).<newline/>On error, one can assume that the process state has been cleaned up:
any forked child process has terminated; any modifications of the global
process state has been restored.<newline/>File descriptor assignments: First, the assignments in <code>pipe_assignments</code>
are performed, then the assignments contained in the command. The
<code>pipe_assignments</code> are interpreted as parallel assignment, not
as sequential assignment.<newline/>Note: For users without very special needs, it is recommended to run
jobs instead of processes. See below for the job API.<param><name>group</name>Determines in which process group the new process will
run. By default <code>Current_group</code>.</param><param><name>forward_mode</name>Whether and how to forward keyboard signals
to the new child. By default <code>No_forward</code>. The Win32 implementation
ignores this argument.</param><param><name>pipe_assignments</name>A list of descriptor pairs <code>(fd_from,fd_to)</code>.
The descriptor <code>fd_from</code> in the current process will be assigned
to <code>fd_to</code> in the started subprocess. In order to
take effect, <code>fd_to</code> must also be passed in the <code>descriptors</code>
property of the started command.
Furthermore, <code>fd_from</code> may or may not be member of <code>descriptors</code>;
in the first case it will remain open, in the latter case it will
be closed. The list of assignments is executed in parallel. For
example, to swap the roles of stdout and stderr, pass the list
<code>[(stdout,stderr); (stderr,stdout)]</code>.</param></doc><arrow><optional>group</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_action</type></identifier></resolved></path><arrow><optional>forward_mode</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>fwd_mode</type></identifier></resolved></path><arrow><optional>pipe_assignments</optional><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path></tuple></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process_id</value><doc>Returns the process ID of the process</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>status</value><doc>Reports the status so far known: If the process
has terminated, the status of the process is returned.
If the process is still running, <code>Not_found</code> will be raised.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>process_status</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command_of_process</value><doc>Returns the command that is now running as the process</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>call</value><doc>Executes the command and waits until the process terminates
(synchronous execution a la <code>system</code>, but no intermediate shell).
<code>status</code> is guaranteed to return WEXITED or WSIGNALED.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>kill</value><doc>Sends a signal to the passed process.<param><name>signal</name>The signal to send, by default SIGTERM</param></doc><arrow><optional>signal</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><comment><title level="1">Jobs</title></comment><comment>A <code>job</code> is the description of how to run several commands which are
linked by pipelines (or which are just a logical unit). A <code>job_instance</code>
is the running instance of a job.<newline/>Jobs are implemented on a higher layer than commands; the
following means of the operating system are used by job
invocations:<list><item>Normally a <code>job_instance</code> corresponds to a Unix process group. In
this case the last added command will result in the process group
leader.</item><item>Controlling the execution of jobs requires that signal
handlers are set in many cases (see <code>install_job_handlers</code>)</item><item>The processes of jobs are often interconnected by pipelines
(see <code>add_pipeline</code>).</item><item>It is possible to handle pipelines between the current process and
processes of the job (see <code>add_producer</code> and <code>add_consumer</code>)</item></list></comment><comment><bold>Important:</bold><newline/>In order to run jobs efficiently (without busy waiting) and properly
it is strongly recommended to install the signal handlers using
<code>install_job_handlers</code></comment><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></type><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></type><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>new_job</value><doc>Creates a new job descriptor. Initially the job is empty, but you can
fill it with commands (<code>add_command</code>), pipelines (<code>add_pipeline</code>),
consumers (<code>add_consumer</code>) and producers (<code>add_producer</code>).
When the job is set up, you can start it (<code>run_job</code>/<code>finish_job</code> or
<code>call_job</code>).</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>add_command</value><doc>Adds a command to a job.<newline/>Note that you cannot add the same command twice; however you can
add a copy of a command already belonging to the job.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>add_pipeline</value><doc>Adds a pipeline which redirects the output of the command <code>src</code> to the
input of the command <code>dest</code>.<param><name>src_descr</name>determines the file descriptor of the source command
which is redirected. This is by default <code>stdout</code>.</param><param><name>dest_descr</name>determines the file descriptor of the destination
command to which the data stream is sent. This is by default <code>stdin</code>.</param><param><name>bidirectional</name>if <code>false</code> (default), a classical pipe is created
to connect the file descriptors. This normally restricts the data
flow to one direction. If <code>true</code>, a socketpair is created which is
roughly a bidirectional pipe. In this case, data flow in both
directions is possible.</param></doc><arrow><optional>bidirectional</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>src_descr</optional><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><optional>dest_descr</optional><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><label>src</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><label>dest</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>add_producer</value><doc>Adds a producer to the job. A producer transfers data to the
subprocess realizing the passed command. To do so, a pipe is created
between the file descriptor <code>descr</code> of the subprocess and another
descriptor <code>descr'</code> which is open in the current process. The
function <code>producer</code> is called when data can be written into the
pipe. The argument of <code>producer</code> is the writing end of the pipe
<code>descr'</code>. This file descriptor is in non-blocking mode. The
function <code>producer</code> must close <code>descr'</code> when all data are
transferred. The return value of <code>producer</code> indicates whether
the descriptor is still open.<param><name>descr</name>The descriptor of the subprocess to which the reading
end of the pipe is dup'ed. By default <code>stdin</code>.</param></doc><arrow><optional>descr</optional><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><label>producer</label><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>from_string</value><doc><code>from_string ?pos ?len ?epipe s</code> returns a function which can be
used as <code>producer</code> argument for <code>add_producer</code>. The data transferred
to the subprocess is taken from the string <code>s</code>. After these data
are sent, the pipeline is closed.<param><name>pos</name>The position in <code>s</code> where the data slice to transfer begins.
By default <code>0</code>.</param><param><name>len</name>The length of the data slice to transfer. By default,
all bytes from the start position <code>pos</code> to the end of the
string are taken.</param><param><name>epipe</name>This function is called when the pipeline breaks
(EPIPE). Default: the empty function. EPIPE exceptions are
always caught, and implicitly handled by closing the pipeline.</param></doc><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>epipe</optional><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>from_stream</value><doc><code>from_stream ?epipe s</code> returns a function which can be
used as <code>producer</code> argument for <code>add_producer</code>. The data transferred
to the subprocess is taken from the string stream <code>s</code>. After these data
are sent, the pipeline is closed.<param><name>epipe</name>This function is called when the pipeline breaks
(EPIPE). Default: the empty function. EPIPE exceptions are
always caught, and implicitly handled by closing the pipeline.</param></doc><arrow><optional>epipe</optional><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/stream/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/stream/index.xml"><cmti name="Stream" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/stream.cmti" digest="55948988e71c3ee1749feb21ccec9fc9"/></xml></html></base>Stream</root></identifier>t</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>add_consumer</value><doc>Adds a consumer to the job. A consumer transfers data from the
subprocess realizing the passed command to the current process.
To do so, a pipe is created between the file descriptor <code>descr</code>
of the subprocess and another descriptor <code>descr'</code> which is open
in the current process. The function <code>consumer</code> is called when
data can be read from the pipe. The argument of <code>consumer</code> is
reading end of the pipe <code>descr'</code>. This file descriptor is in
non-blocking mode. The function <code>consumer</code> must close <code>descr'</code>
after EOF is detected. The return value of <code>consumer</code> indicates whether
the descriptor is still open.<param><name>descr</name>The descriptor of the subprocess to which the writing
end of the pipe is dup'ed. By default <code>stdout</code>.</param></doc><arrow><optional>descr</optional><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><label>consumer</label><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>command</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>to_buffer</value><doc><code>to_buffer b</code> returns a function which can be
used as <code>consumer</code> argument for <code>add_consumer</code>. The data received
from the subprocess is added to the buffer <code>b</code>.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.xml"><cmti name="Buffer" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/buffer.cmti" digest="a579f4a57e300ec755f84af883c1e51b"/></xml></html></base>Buffer</root></identifier>t</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_mode</type><doc>Specifies how the job instance is related to process groups</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_mode</type>Same_as_caller</constructor><doc>The job runs in the same process group as the current process</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_mode</type>Foreground</constructor><doc>The job runs in a new foreground process group</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_mode</type>Background</constructor><doc>The job runs in a new background process group</doc></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>run_job</value><doc>Invokes the commands of the job such that they run concurrently
with the main process.<newline/>The function returns a <code>job_instance</code>, i.e. a value recording which
processes are started, and how they are related. Furthermore, the
function has the side effect of adding the
job to the global list of current jobs.<newline/>The <code>mode</code> argument specifies whether a new Unix process group is
created for the job instance. A process group has the advantage that
it is possible to send signals to all processes of the group at
once. For example, one can terminate a group by sending SIGTERM
to it: All member processes get the signal. Usually, these are not only
the subprocesses initially created, but also further processes
started by the initial members.<newline/>So if it is necessary to send signals to the processes of the job,
it will be advantegous to run it in a new process group. However,
this also means that signals sent to the current process group
are not automatically forwarded to the created process group. For
example, if the current process group is terminated, the job
will continue running, because it is member of a different process
group. One has to explicitly catch and forward signals to avoid
wild-running jobs.<newline/>The moral of the story is that one should only create new process
groups when it is necessary (e.g. the user must be able to stop
an action at any time). Furthermore, signal forwarding must be
configured.<newline/>The Unix shell also allows the programmer to specify process group
handling to a certain extent. Normally, commands are executed in the
same process group as the caller. The syntax &quot;command &amp;&quot; forces that
the command is run in a new background process group. There is another
situation when new process groups are created: when a new <bold>interactive</bold>
shell is started the commands are run in new foreground process groups
(so the keyboard signals like CTRL-C work).<param><name>mode</name>Specifies the process group handling. By default, the
job is executed in the same process group as the current process
(<code>Same_as_caller</code>). The value <code>Background</code> causes that a new
background process group is started. The value <code>Foreground</code> causes
that a new foreground process group is started. For the latter,
it is required that there is a controlling terminal (i.e. it
does not work for daemons). Any existing foreground process group
(there is at most one) is put into the background, but this is
not restored when the job is over (the caller must do this).
Foreground process groups should be avoided unless you are
writing an interactive shell interpreter.</param><param><name>forward_signals</name>If <code>true</code>, the default, keyboard signals
(SIGINT, SIGQUIT) delivered to the current process are forwarded to
the job. This has only a meaning if the job is running as
background process group. Furthermore, it is required that
<code>install_job_handlers</code> has been called to enable signal
forwarding.<newline/>The function returns normally if at least one process could be started.
If no process was startable (i.e. the first command was not startable),
an exception is raised. If one or more processes could be started but
not all, <code>job_status</code> will return <code>Job_partially_running</code>. The caller
should then discard the job and any intermediate result that might
already have been produced by the partial job.<newline/>When all processes could be started and no other exceptional condition
happened, the function sets <code>job_status</code> to <code>Job_running</code>.</param></doc><arrow><optional>mode</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_mode</type></identifier></resolved></path><arrow><optional>forward_signals</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path></arrow></arrow></arrow></value><class_type><class_type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_handler_engine_type</class_type><doc>This type of engine also returns the <code>job</code> and the <code>job_instance</code>.</doc><param>t</param><signature><inherit><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/uq_engines/index.xml"><cmti name="Uq_engines" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/uq_engines.cmti" digest="7eabb27fa86d9290a1fe2ef78547b48a"/></xml></base>Uq_engines</root></identifier>engine</class_type></resolved><var>t</var></path></inherit><method><method><class_type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_handler_engine_type</class_type>job</method><doc>Returns the called job</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_handler_engine_type</class_type>job_instance</method><doc>Returns the job instance</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path></method></signature></class_type><class><class><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_engine</class><doc>The <code>job_engine</code> watches the job, and looks whether the processes
are finished, and if so, it records the process statuses. Also,
the engine takes care of pumping producer data into the job,
and of collecting consumer data.</doc><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/unixqueue/index.xml"><cmti name="Unixqueue" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/unixqueue.cmti" digest="5ec5f57d46c5b3e908696c79a59232d4"/></xml></base>Unixqueue</root></identifier>event_system</class_type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_handler_engine_type</class_type></identifier></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></class><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>finish_job</value><doc>This creates a <code>job_engine</code> internally and runs until it is
finished, i.e. until the job has been executed.<newline/>In previous version of Ocamlnet there was an optional <code>sys</code>
argument. This is gone now. Also, the error handling is different.
It is no longer possible to restart <code>finish_job</code> when an error
happens.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>call_job</value><doc>Starts the job (see <code>run_job</code>) and waits until it finishes (see
<code>finish_job</code>); i.e. <code>call_job = run_job + finish_job</code>.
The function returns normally if all processes can be started; you can
examine <code>job_status</code> of the result to get the information whether all
processes returned the exit code 0.<param><name>onerror</name>If not all of the processes can be started, the
function passed by <code>onerror</code> is invoked. By default, this
function calls <code>abandon_job</code> to stop the already running
processes. After the <code>onerror</code> function has returned, the original
exception is raised again. Fatal error conditions are not caught.</param><param><name>mode</name>See <code>run_job</code></param><param><name>forward_signals</name>See <code>run_job</code></param></doc><arrow><optional>mode</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>group_mode</type></identifier></resolved></path><arrow><optional>forward_signals</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>onerror</optional><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>processes</value><doc>Returns the processes that have actually been started for this job
by <code>run_job</code>; note that the corresponding Unix process group
may have additional processes (e.g. indirectly started processes).</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type></identifier></resolved></path></path></arrow></value><exception><exception><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>No_Unix_process_group</exception><doc>Raised by functions referring to Unix process groups when the
job has not been started in its own process group.</doc></exception><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process_group_leader</value><doc>Returns the process group leader process.
This function is not available for jobs in the mode <code>Same_as_caller</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>process_group_id</value><doc>Returns the Unix ID of the process group as number &gt; 1.
This function is not available for jobs in the mode <code>Same_as_caller</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_status</type><doc>Indicates the status of the job</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_status</type>Job_running</constructor><doc>All commands could be started, and at least
one process is still running</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_status</type>Job_partially_running</constructor><doc>Not all commands could be started, and at least
one process is still running</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_status</type>Job_ok</constructor><doc>all processes terminated with exit code 0</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_status</type>Job_error</constructor><doc>all processes terminated but some abnormally</doc></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_status</type>Job_abandoned</constructor><doc>the job has been abandoned (see <code>abandon_job</code>)</doc></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_status</value><doc>Returns the status. The status may only change after <code>finish_job</code>
has been called:<newline/><list><item>after <code>run_job</code>: status is <code>Job_running</code> or <code>Job_partially_running</code></item><item>after <code>finish_job</code>: if returning normally: status is <code>Job_ok</code> or
<code>Job_error</code>. After an exception happened the other states are possible,
too</item></list></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_status</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>kill_process_group</value><doc>Kills the process group if it is still (at least partially) running.
This operation is not available if the mode is <code>Same_as_caller</code>
(exception <code>No_Unix_process_group</code>).<newline/>Note 1: In the Unix terminology, &quot;killing a job&quot; only means to send
a signal to the job. So the job may continue running, or it may
terminate; in general we do not know this. Because of this, the job
will still have an entry in the job list.<newline/>Note 2: Because sub-sub-processes are also killed, this function may send
the signal to more processes than kill_processes (below). On the other
hand, it is possible that sub-processes change their group ID such that
it is also possible that this function sends the signal to fewer processes
than kill_processes.<param><name>signal</name>The signal number to send (O'Caml signal numbers as
used by the <code>Sys</code> module). Default is <code>Sys.sigterm</code>.</param></doc><arrow><optional>signal</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>kill_processes</value><doc>Kills the individual processes of the job which are still running.<param><name>signal</name>The signal number to send (O'Caml signal numbers as
used by the <code>Sys</code> module). Default is <code>Sys.sigterm</code>.</param></doc><arrow><optional>signal</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>cancel_job</value><doc>Tries to get rid of a running job. If the mode is <code>Same_as_caller</code>, the
signal is sent to the processes individually. If the mode is
<code>Foreground</code> or <code>Background</code>, the signal is sent to the process group
corresponding to the job.<newline/>This function removes the job from the job list; i.e. it is no longer
watched. Because of some magic spells it is guaranteed that the job dies
immediately without becoming a zombie (provided you have a SIGCHLD
handler).<param><name>signal</name>The signal number to send (O'Caml signal numbers as
used by the <code>Sys</code> module). Default is <code>Sys.sigterm</code>.</param></doc><arrow><optional>signal</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>abandon_job</value><doc><bold>Deprecated</bold> name for <code>cancel_job</code></doc><arrow><optional>signal</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>job_instance</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><exception><exception><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>Already_installed</exception><doc>Raised when the job handlers are already installed</doc></exception><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>configure_job_handlers</value><doc>Configures signal and at_exit handlers for jobs:<list><item>The keyboard signals SIGINT and SIGQUIT are forwarded to all jobs
which are running in the background (and thus are not
automatically notified) and want to get such signals (<code>forward_signals</code>).</item><item>The signals SIGTERM and SIGHUP are (if the handler is installed)
forwarded to all dependent processes (regardless whether they are
running in their own Unix process group or not, and regardless of
<code>forward_signals</code>).</item><item>The <code>at_exit</code> handler sends a SIGTERM to all dependent processes, too.</item></list>In previous versions of Ocamlnet it was also possible to configure
<code>catch_sigchld</code> to set whether a SIGCHLD handler is installed. This
is now always done.<newline/>In previous versions of Ocamlnet there was also a <code>set_sigpipe</code> flag.
This flag is gone as a SIGPIPE handler is now always installed.<newline/>The handlers are now managed by <reference><element><root>Netsys_signal</root></element></reference>. The handlers of this
module set the <code>keep_default</code> flag for SIGINT, SIGQUIT, SIGTERM, and
SIGHUP, so that the default action for these signals is executed after
the forwarding to the child processes is done. By setting another
handler in <reference><element><root>Netsys_signal</root></element></reference> without that flag this behavior can be
overridden.<newline/>Note that if an uncaught exception leads to program termination,
this situation will not be detected; any running jobs will
not be terminated (sorry, this cannot be fixed).<newline/>This function sets only which handlers will be installed when
<code>install_job_handlers</code> (below) is invoked.
The function fails if the handlers are already installed.<newline/>Win32: No handlers are installed. It would be desirable to some extent
that at least <code>at_exit</code> is honoured, however, this is not yet done.<param><name>catch_sigint</name>whether to install a SIGINT handler (default: <code>true</code>)</param><param><name>catch_sigquit</name>whether to install a SIGQUIT handler (default: <code>true</code>)</param><param><name>catch_sigterm</name>whether to install a SIGTERM handler (default: <code>true</code>)</param><param><name>catch_sighup</name>whether to install a SIGHUP handler (default: <code>true</code>)</param><param><name>at_exit</name>whether to set the <code>at_exit</code> handler (default: <code>true</code>)</param></doc><arrow><optional>catch_sigint</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>catch_sigquit</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>catch_sigterm</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>catch_sighup</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>at_exit</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>install_job_handlers</value><doc>Installs handlers as configured before.
Raises <code>Already_installed</code> if the handlers are already installed.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><comment><title level="1">Removed functions</title></comment><comment>The functions <code>add_rd_polling</code> and <code>add_wr_polling</code> have been removed.
They were added prior to the merge with the equeue library. Use a
Unixqueue now, which is much more powerful.</comment><comment>Also no longer supported because the type <code>system_handler</code> is gone:<newline/><precode>type system_handler</precode><newline/><precode>type process_event</precode><newline/><precode>val wait : 
      ?wnohang:bool -&gt;                     (* default: false *)
      ?wuntraced:bool -&gt;                   (* default: false *)
      ?restart:bool -&gt;                     (* default: false *)
      ?check_interval:float -&gt;             (* default: 0.1 *)
      ?read:(Unix.file_descr list) -&gt;      (* default: [] *)
      ?write:(Unix.file_descr list) -&gt;     (* default: [] *)
      ?except:(Unix.file_descr list) -&gt;    (* default: [] *)
      process list -&gt;
        process_event list</precode>
<precode>val register_job : system_handler -&gt; job_instance -&gt; unit</precode><newline/><precode>val iter_job_instances : f:(job_instance -&gt; unit) -&gt;  unit</precode><newline/><precode>val watch_for_zombies : unit -&gt; unit</precode><newline/><precode>val process_group_expects_signals : job_instance -&gt; bool</precode></comment><comment><title level="1">Debugging</title></comment><module><module><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>Debug</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Shell_sys" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/shell/shell_sys.cmti" digest="c3c871471e040ad097ba823e433888c3"/></xml></base>Shell_sys</root>Debug</module>enable</value><doc>Enables <reference><element><root>Netlog</root></element></reference>-style debugging of this module</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value></signature></type></module></unit>