<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></html></base>Uq_ssl</root><digest>a904c36f024fd0baa1f820627c2e173e</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Equeue<digest>207ed21b384dd4f4ad91bce8a449f64c</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Netbuffer<digest>5f4225f2baeef1584e246c6ce1d32119</digest></import><import>Netchannels<digest>4e22bd1ba0cae4bd9bd1b6e69fc16ade</digest></import><import>Netexn<digest>845c6110cc81d957d9fc21c9e149d5fb</digest></import><import>Netlog<digest>2441459e41ceb77fc72d5714e0508958</digest></import><import>Netsockaddr<digest>514bc9294568dc3facaf49b96623c337</digest></import><import>Netsys<digest>4a0ae4cc74f10e8667e3b629e6907079</digest></import><import>Netsys_mem<digest>f19ef786301a8cbcfbf1a4fffee992f8</digest></import><import>Netsys_posix<digest>f5b674538a41e016bb4f0e731d114657</digest></import><import>Netsys_signal<digest>703311022efc5162433d614b9bef35af</digest></import><import>Netsys_types<digest>67b26630eaf4decaa483864d4d00a3a2</digest></import><import>Netsys_win32<digest>02161f9169b76f686b05a51ed2d9357c</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Ssl<digest>b359d7329d9a72711516b270097651a0</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Unixqueue<digest>5ec5f57d46c5b3e908696c79a59232d4</digest></import><import>Unixqueue_util<digest>f013da7473123405a6e2f9edc5dde5e1</digest></import><import>Uq_engines<digest>7eabb27fa86d9290a1fe2ef78547b48a</digest></import><source><file>uq_ssl.mli</file><dir>/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl</dir><digest>377f345a6a26086fb8878923c74d3cc9</digest></source><doc>Asynchronous SSL connections</doc><exception><exception><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>Ssl_error</exception><doc>Used in <code>when_done</code> callbacks to indicate an SSL-specific error code</doc><arguments><path><resolved><type><identifier><root><base><xml src="../../../../ssl.0.4.7/src/ssl/index.xml"><cmti name="Ssl" src="/home/dsheets/.opam/doc/build/ssl.0.4.7/src/ssl.cmti" digest="b359d7329d9a72711516b270097651a0"/></xml></base>Ssl</root></identifier>ssl_error</type></resolved></path></arguments></exception><type><type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_socket_state</type><poly_variant><fixed/><constructor>Unset<constant/></constructor><constructor>Client<constant/></constructor><constructor>Server<constant/></constructor><constructor>Unclean<constant/></constructor><constructor>Clean<constant/></constructor></poly_variant></type><class_type><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type><doc>The <code>ssl_multiplex_controller</code> is an extended multiplex controller
which can also control SSL handshakes.<newline/>Important note: SSL/TLS does not support half-open connections. When
one party closes the connection, the other party must immediately
close the connection, too, throwing away any pending writes. See
RFC 2246.</doc><signature><inherit><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/uq_engines/index.xml"><cmti name="Uq_engines" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/uq_engines.cmti" digest="7eabb27fa86d9290a1fe2ef78547b48a"/></xml></base>Uq_engines</root></identifier>multiplex_controller</class_type></resolved></path></inherit><method><method><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type>ssl_socket</method><path><resolved><type><identifier><root><base><xml src="../../../../ssl.0.4.7/src/ssl/index.xml"><cmti name="Ssl" src="/home/dsheets/.opam/doc/build/ssl.0.4.7/src/ssl.cmti" digest="b359d7329d9a72711516b270097651a0"/></xml></base>Ssl</root></identifier>socket</type></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type>ssl_socket_state</method><doc>Returns the socket state:<list><item><code>`Unset</code>: A fresh socket</item><item><code>`Client</code>: A socket playing the SSL client role</item><item><code>`Server</code>: A socket playing the SSL server role</item><item><code>`Unclean</code>: The socket state is unclean. The socket is no longer usable.</item><item><code>`Clean</code>: The SSL connection has been cleanly shut down.</item></list></doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_socket_state</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type>ssl_connecting</method><doc>Whether the initial SSL handshake is in progress that makes this
socket a client.</doc><path><resolved><identifier><type>bool</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type>ssl_accepting</method><doc>Whether the initial SSL handshake is in progress that makes this
socket a server.</doc><path><resolved><identifier><type>bool</type></identifier></resolved></path></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type>start_ssl_connecting</method><doc>Makes the socket an SSL client socket by initiating the handshake.
The <code>when_done</code> callback is invoked when the handshake is done.<newline/>One can neither read nor write before that.</doc><arrow><label>when_done</label><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>exn</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type>start_ssl_accepting</method><doc>Makes the socket an SSL server socket by initiating the handshake.
The <code>when_done</code> callback is invoked when the handshake is done.<newline/>One can neither read nor write before that.</doc><arrow><label>when_done</label><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>exn</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></method><method><method><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type>inactivate_no_close</method><doc>Inactivates the controller by deleting all event handlers. The
file descriptor, however, is not closed. Normal users should not
call this method.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></method></signature></class_type><value><value><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>create_ssl_multiplex_controller</value><doc>Creates a multiplex controller for an SSL socket. The descriptor must
be a connected socket descriptor.<newline/><code>close_inactive_descr</code>: Whether to close the file descriptor by
<code>inactivate</code>.<newline/><code>preclose</code>: This function is called immediately before closing
the descriptor<newline/><code>initial_state</code>: can be set to <code>`Client</code> or <code>`Server</code> if the context
is already established. Defaults to <code>`Unset</code><newline/><code>timeout</code>: if set to <code>(t, x)</code>, started operations time out after <code>t</code>
seconds and pass the exception <code>x</code> back. A timeout is only indicated
when all started operations are inactive for <code>t</code> seconds.<newline/><code>ssl_socket</code>: If passed, this socket is used instead of creating a
new one for the file descriptor. It is required that the descriptor
and the SSL context are connected with this SSL socket.</doc><arrow><optional>close_inactive_descr</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><optional>preclose</optional><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><optional>initial_state</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_socket_state</type></identifier></resolved></path><arrow><optional>timeout</optional><tuple><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>exn</type></identifier></resolved></path></tuple><arrow><optional>ssl_socket</optional><path><resolved><type><identifier><root><base><xml src="../../../../ssl.0.4.7/src/ssl/index.xml"><cmti name="Ssl" src="/home/dsheets/.opam/doc/build/ssl.0.4.7/src/ssl.cmti" digest="b359d7329d9a72711516b270097651a0"/></xml></base>Ssl</root></identifier>socket</type></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../ssl.0.4.7/src/ssl/index.xml"><cmti name="Ssl" src="/home/dsheets/.opam/doc/build/ssl.0.4.7/src/ssl.cmti" digest="b359d7329d9a72711516b270097651a0"/></xml></base>Ssl</root></identifier>context</type></resolved></path><arrow><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/unixqueue/index.xml"><cmti name="Unixqueue" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/unixqueue.cmti" digest="5ec5f57d46c5b3e908696c79a59232d4"/></xml></base>Unixqueue</root></identifier>event_system</class_type></resolved></path><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_connect_engine</value><doc>This engine performs the client handshake.</doc><arrow><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/uq_engines/index.xml"><cmti name="Uq_engines" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/uq_engines.cmti" digest="7eabb27fa86d9290a1fe2ef78547b48a"/></xml></base>Uq_engines</root></identifier>engine</class_type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_accept_engine</value><doc>This engine performs the server handshake.</doc><arrow><path><resolved><identifier><class_type><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>ssl_multiplex_controller</class_type></identifier></resolved></path><path><resolved><class_type><identifier><root><base><xml src="../../../../ocamlnet.3.7.7/src/equeue/uq_engines/index.xml"><cmti name="Uq_engines" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue/uq_engines.cmti" digest="7eabb27fa86d9290a1fe2ef78547b48a"/></xml></base>Uq_engines</root></identifier>engine</class_type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><comment><title level="1">Debugging</title></comment><module><module><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>Debug</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>Debug</module>enable</value><doc>Enables <reference><element><root>Netlog</root></element></reference>-style debugging of this module</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value><value><value><module><root><base><xml src="index.xml"><cmti name="Uq_ssl" src="/home/dsheets/.opam/doc/build/ocamlnet.3.7.7/src/equeue-ssl/uq_ssl.cmti" digest="a904c36f024fd0baa1f820627c2e173e"/></xml></base>Uq_ssl</root>Debug</module>dump_data</value><doc>If also <code>enable</code>, output a full dump of payload data</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value></signature></type></module></unit>