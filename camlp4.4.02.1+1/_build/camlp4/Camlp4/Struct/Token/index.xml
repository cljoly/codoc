<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Token" src="/home/dsheets/.opam/doc/build/camlp4.4.02.1+1/_build/camlp4/Camlp4/Struct/Token.cmti" digest="9bb0e28db24d69ebf386fe6fa6a8cd51"/></xml></html></base>Token</root><digest>9bb0e28db24d69ebf386fe6fa6a8cd51</digest><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Location<digest>f82fe26c67463f69beba6b78cef55df9</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Sig<digest>a41c5b2060f84e92f21b9949041de2f8</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>Warnings<digest>03dcdeaeb257a4b96114b2b765fdeb72</digest></import><source><file>camlp4/Camlp4/Struct/Token.mli</file><dir>/home/dsheets/.opam/doc/build/camlp4.4.02.1+1/_build</dir><digest>a1b3e8fd47fb38f8f4a51d916e3ee566</digest></source><module><module><root><base><xml src="index.xml"><cmti name="Token" src="/home/dsheets/.opam/doc/build/camlp4.4.02.1+1/_build/camlp4/Camlp4/Struct/Token.cmti" digest="9bb0e28db24d69ebf386fe6fa6a8cd51"/></xml></base>Token</root>Make</module><type><functor><argument><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Token" src="/home/dsheets/.opam/doc/build/camlp4.4.02.1+1/_build/camlp4/Camlp4/Struct/Token.cmti" digest="9bb0e28db24d69ebf386fe6fa6a8cd51"/></xml></base>Token</root>Make</module>Loc</argument><dot><resolved><identifier><root><base><xml src="../../../../../../ocamlgraph.1.8.5/src/sig/index.xml"><cmti name="Sig" src="/home/dsheets/.opam/doc/build/ocamlgraph.1.8.5/src/sig.cmti" digest="8b9e865b65c9f86e688acca882d4d25a"/></xml></base>Sig</root></identifier></resolved>Loc</dot></argument><with><dot><resolved><identifier><root><base><xml src="../../../../../../ocamlgraph.1.8.5/src/sig/index.xml"><cmti name="Sig" src="/home/dsheets/.opam/doc/build/ocamlgraph.1.8.5/src/sig.cmti" digest="8b9e865b65c9f86e688acca882d4d25a"/></xml></base>Sig</root></identifier></resolved>Camlp4Token</dot><module><dot><resolved><root/></resolved>Loc</dot><alias><resolved><identifier><argument pos="1"><module><root><base><xml src="index.xml"><cmti name="Token" src="/home/dsheets/.opam/doc/build/camlp4.4.02.1+1/_build/camlp4/Camlp4/Struct/Token.cmti" digest="9bb0e28db24d69ebf386fe6fa6a8cd51"/></xml></base>Token</root>Make</module>Loc</argument></identifier></resolved></alias></module></with></functor></type></module><module><module><root><base><xml src="index.xml"><cmti name="Token" src="/home/dsheets/.opam/doc/build/camlp4.4.02.1+1/_build/camlp4/Camlp4/Struct/Token.cmti" digest="9bb0e28db24d69ebf386fe6fa6a8cd51"/></xml></base>Token</root>Eval</module><type><signature><value><value><module><root><base><xml src="index.xml"><cmti name="Token" src="/home/dsheets/.opam/doc/build/camlp4.4.02.1+1/_build/camlp4/Camlp4/Struct/Token.cmti" digest="9bb0e28db24d69ebf386fe6fa6a8cd51"/></xml></base>Token</root>Eval</module>char</value><doc>Convert a char token, where the escape sequences (backslashes)
remain to be interpreted; raise <code>Failure</code> if an
incorrect backslash sequence is found; <code>Token.Eval.char (Char.escaped c)</code>
returns <code>c</code></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>char</type></identifier></resolved></path></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Token" src="/home/dsheets/.opam/doc/build/camlp4.4.02.1+1/_build/camlp4/Camlp4/Struct/Token.cmti" digest="9bb0e28db24d69ebf386fe6fa6a8cd51"/></xml></base>Token</root>Eval</module>string</value><doc><code>Taken.Eval.string strict s</code>
Convert a string token, where the escape sequences (backslashes)
remain to be interpreted; raise <code>Failure</code> if <code>strict</code> and an
incorrect backslash sequence is found;
<code>Token.Eval.string strict (String.escaped s)</code> returns <code>s</code></doc><arrow><optional>strict</optional><path><resolved><identifier><type>unit</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value></signature></type></module></unit>