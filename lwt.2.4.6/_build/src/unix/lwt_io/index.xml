<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></html></base>Lwt_io</root><digest>124fc3c0d1eecf72b3159461302e806c</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Lwt<digest>3ec18d03611d8f4576b577b743482a48</digest></import><import>Lwt_bytes<digest>ee02628bb9b453325873f9a6b27eb891</digest></import><import>Lwt_sequence<digest>ce3592bc901ce0c829f4f282ef54d80a</digest></import><import>Lwt_stream<digest>cb31901fda8c8b13d0212288d5f80b59</digest></import><import>Lwt_sys<digest>ef11f7b477bb51889a4cbe8954d8a15d</digest></import><import>Lwt_unix<digest>c749f0f828fd62fb0a12d7bbad6e6205</digest></import><import>Marshal<digest>6a7be818a4d43f06397faef2c6f9d35b</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>src/unix/lwt_io.mli</file><dir>/home/dsheets/.opam/doc/build/lwt.2.4.6/_build</dir><digest>82f217d23f1ca2ec49cfc14b48c6c5ee</digest></source><doc>Buffered byte channels</doc><comment>A <bold>channel</bold> is a high-level object for performing input/output
(IO). It allows to read/write from/to the outside world in an
efficient way, by minimising the number of system calls.<newline/>An <bold>output channel</bold> is used to send data and an <bold>input
channel</bold> is used to receive data.<newline/>If you are familiar with buffered channels you may be familiar too
with the <bold>flush</bold> operation. Note that byte channels of this
module are automatically flushed when there is nothing else to do
(i.e. before the program becomes idle), so this means that you no
longer have to write:<newline/><precode>      eprintf &quot;log message\n&quot;;
      flush stderr;</precode><newline/>to have your messages displayed.<newline/>Note about errors: input functions of this module raise
<code>End_of_file</code> when the end-of-file is reached (i.e. when the read
function returns <code>0</code>). Other exceptions are ones caused by the
backend read/write functions, such as <code>Unix.Unix_error</code>.</comment><exception><exception><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>Channel_closed</exception><doc>Exception raised when a channel is closed. The parameter is a
description of the channel.</doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></exception><comment><title level="2">Types</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type><doc>Type of buffered byte channels</doc><param>mode</param></type><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input</type><doc>Input mode</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output</type><doc>Output mode</doc></type><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type><doc>Channel mode</doc><param>a</param><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type>Input</constructor><result><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input</type></identifier></resolved></path></path></result></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type>Output</constructor><result><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output</type></identifier></resolved></path></path></result></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input</value><doc><code>input</code> input mode representation</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input</type></identifier></resolved></path></path></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output</value><doc><code>output</code> output mode representation</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output</type></identifier></resolved></path></path></value><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type><doc>Type of input channels</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input</type></identifier></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type><doc>Type of output channels</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output</type></identifier></resolved></path></path></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</value><doc><code>mode ch</code> returns the mode of a channel</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><var>a</var></path></arrow></value><comment><title level="2">Well-known instances</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>stdin</value><doc>The standard input, it reads data from <reference><element><resolved><value><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_unix/index.xml"><cmti name="Lwt_unix" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_unix.cmti" digest="c749f0f828fd62fb0a12d7bbad6e6205"/></xml></base>Lwt_unix</root></identifier>stdin</value></resolved></element></reference></doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>stdout</value><doc>The standard output, it writes data to <reference><element><resolved><value><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_unix/index.xml"><cmti name="Lwt_unix" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_unix.cmti" digest="c749f0f828fd62fb0a12d7bbad6e6205"/></xml></base>Lwt_unix</root></identifier>stdout</value></resolved></element></reference></doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>stderr</value><doc>The standard output for error messages, it writes data to
<reference><element><resolved><value><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_unix/index.xml"><cmti name="Lwt_unix" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_unix.cmti" digest="c749f0f828fd62fb0a12d7bbad6e6205"/></xml></base>Lwt_unix</root></identifier>stderr</value></resolved></element></reference></doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>zero</value><doc>Inputs which returns always <code>'\x00'</code></doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>null</value><doc>Output which drops everything</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path></value><comment><title level="2">Channels creation/manipulation</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>pipe</value><doc><code>pipe ?buffer_size ()</code> creates a pipe using <reference><element><resolved><value><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_unix/index.xml"><cmti name="Lwt_unix" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_unix.cmti" digest="c749f0f828fd62fb0a12d7bbad6e6205"/></xml></base>Lwt_unix</root></identifier>pipe</value></resolved></element></reference> and
makes two channels from the two returned file descriptors</doc><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path></tuple></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>make</value><doc><code>make ?buffer_size ?close ~mode perform_io</code> is the
main function for creating new channels.<param><name>buffer_size</name>size of the internal buffer. It must be
between 16 and <code>Sys.max_string_length</code></param><param><name>close</name>close function of the channel. It defaults to
<code>Lwt.return</code></param><param><name>seek</name>same meaning as <code>Unix.lseek</code></param><param><name>mode</name>either <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input</type></identifier></resolved></element></reference> or <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output</type></identifier></resolved></element></reference></param><param><name>perform_io</name>is the read or write function. It is called
when more input is needed or when the buffer need to be
flushed.</param></doc><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>close</optional><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow><arrow><optional>seek</optional><arrow><path><resolved><identifier><type>int64</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>seek_command</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int64</type></identifier></resolved></path></path></arrow></arrow><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><var>mode</var></path><arrow><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_bytes/index.xml"><cmti name="Lwt_bytes" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_bytes.cmti" digest="ee02628bb9b453325873f9a6b27eb891"/></xml></base>Lwt_bytes</root></identifier>t</type></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></arrow></arrow></arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>mode</var></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>of_bytes</value><doc>Create a channel from a byte array. Reading/writing is done
directly on the provided array.</doc><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><var>mode</var></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_bytes/index.xml"><cmti name="Lwt_bytes" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_bytes.cmti" digest="ee02628bb9b453325873f9a6b27eb891"/></xml></base>Lwt_bytes</root></identifier>t</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>mode</var></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>of_fd</value><doc><code>of_fd ?buffer_size ?close ~mode fd</code> creates a channel from a
file descriptor.<param><name>close</name>defaults to closing the file descriptor.</param></doc><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>close</optional><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><var>mode</var></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_unix/index.xml"><cmti name="Lwt_unix" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_unix.cmti" digest="c749f0f828fd62fb0a12d7bbad6e6205"/></xml></base>Lwt_unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>mode</var></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>of_unix_fd</value><doc><code>of_unix_fd ?buffer_size ?close ~mode fd</code> is a short-hand for:<newline/><code>of_fd ?buffer_size ?close (Lwt_unix.of_unix_file_descr fd)</code></doc><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>close</optional><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><var>mode</var></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_descr</type></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>mode</var></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>close</value><doc><code>close ch</code> closes the given channel. If <code>ch</code> is an output
channel, it performs all pending actions, flushes it and closes
it. If <code>ch</code> is an input channel, it just closes it immediately.<newline/><code>close</code> returns the result of the close function of the
channel. Multiple calls to <code>close</code> will return exactly the same
value.<newline/>Note: you cannot use <code>close</code> on channels obtained with
<reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>atomic</value></identifier></resolved></element></reference>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>abort</value><doc><code>abort ch</code> abort current operations and close the channel
immediately.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>atomic</value><doc><code>atomic f</code> transforms a sequence of io operations into one
single atomic io operation.<newline/>Note:<list><item>the channel passed to <code>f</code> is invalid after <code>f</code> terminates</item><item><code>atomic</code> can be called inside another <code>atomic</code></item></list></doc><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>file_length</value><doc>Returns the length of a file</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int64</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>buffered</value><doc><code>buffered oc</code> returns the number of bytes in the buffer</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>flush</value><doc><code>flush oc</code> performs all pending writes on <code>oc</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>flush_all</value><doc><code>flush_all ()</code> flushes all open output channels</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>buffer_size</value><doc>Returns the size of the internal buffer.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>resize_buffer</value><doc>Resize the internal buffer to the given size</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>is_busy</value><doc><code>is_busy channel</code> returns whether the given channel is currently
busy. A channel is busy when there is at least one job using it
that has not yet terminated.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><comment><title level="2">Random access</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>position</value><doc><code>position ch</code> Returns the current position in the channel.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>int64</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>set_position</value><doc><code>set_position ch pos</code> Sets the position in the output channel. This
does not work if the channel does not support random access.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type>int64</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>length</value><doc>Returns the length of the channel in bytes</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int64</type></identifier></resolved></path></path></arrow></value><comment><title level="2">Reading</title></comment><comment>Note: except for functions dealing with streams (<reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_chars</value></identifier></resolved></element></reference> and
<reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_lines</value></identifier></resolved></element></reference>) all functions are <bold>atomic</bold>.</comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_char</value><doc><code>read_char ic</code> reads the next character of <code>ic</code>.<raise><name>End_of_file</name>if the end of the file is reached</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>char</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_char_opt</value><doc>Same as <reference><element><root>read_byte</root></element></reference> but does not raise <code>End_of_file</code> on end of
input</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>char</type></identifier></resolved></path></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_chars</value><doc><code>read_chars ic</code> returns a stream holding all characters of
<code>ic</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>char</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_line</value><doc><code>read_line ic</code> reads one complete line from <code>ic</code> and returns it
without the end of line. End of line is either <code>&quot;\n&quot;</code> or
<code>&quot;\r\n&quot;</code>.<newline/>If the end of line is reached before reading any character,
<code>End_of_file</code> is raised. If it is reached before reading an end
of line but characters have already been read, they are
returned.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_line_opt</value><doc>Same as <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_line</value></identifier></resolved></element></reference> but do not raise <code>End_of_file</code> on end of
input.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_lines</value><doc><code>read_lines ic</code> returns a stream holding all lines of <code>ic</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read</value><doc><code>read ?count ic</code> reads at most <code>len</code> characters from <code>ic</code>. It
returns <code>&quot;&quot;</code> if the end of input is reached. If <code>count</code> is not
specified, it reads all bytes until the end of input.</doc><arrow><optional>count</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_into</value><doc><code>read_into ic buffer offset length</code> reads up to <code>length</code> bytes,
stores them in <code>buffer</code> at offset <code>offset</code>, and returns the
number of bytes read.<newline/>Note: <code>read_into</code> does not raise <code>End_of_file</code>, it returns a
length of <code>0</code> instead.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_into_exactly</value><doc><code>read_into_exactly ic buffer offset length</code> reads exactly
<code>length</code> bytes and stores them in <code>buffer</code> at offset <code>offset</code>.<raise><name>End_of_file</name>on end of input</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>read_value</value><doc><code>read_value ic</code> reads a marshaled value from <code>ic</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow></value><comment><title level="2">Writing</title></comment><comment>Note: as for reading functions, all functions except
<reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_chars</value></identifier></resolved></element></reference> and <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_lines</value></identifier></resolved></element></reference> are <bold>atomic</bold>.<newline/>For example if you use <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_line</value></identifier></resolved></element></reference> in two different threads, the
two operations will be serialized, and lines cannot be mixed.</comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_char</value><doc><code>write_char oc char</code> writes <code>char</code> on <code>oc</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>char</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_chars</value><doc><code>write_chars oc chars</code> writes all characters of <code>chars</code> on
<code>oc</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>char</type></identifier></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write</value><doc><code>write oc str</code> writes all characters of <code>str</code> on <code>oc</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_line</value><doc><code>write_line oc str</code> writes <code>str</code> on <code>oc</code> followed by a
new-line.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_lines</value><doc><code>write_lines oc lines</code> writes all lines of <code>lines</code> to <code>oc</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_from</value><doc><code>write_from oc buffer offset length</code> writes up to <code>length</code> bytes
to <code>oc</code>, from <code>buffer</code> at offset <code>offset</code> and returns the number
of bytes actually written</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_from_exactly</value><doc><code>write_from_exactly oc buffer offset length</code> writes all <code>length</code>
bytes from <code>buffer</code> at offset <code>offset</code> to <code>oc</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_value</value><doc><code>write_value oc ?flags x</code> marshals the value <code>x</code> to <code>oc</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><optional>flags</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/stdlib/marshal/index.html"><xml src="../../../../../ocaml.4.02.1+doc/stdlib/marshal/index.xml"><cmti name="Marshal" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/marshal.cmti" digest="6a7be818a4d43f06397faef2c6f9d35b"/></xml></html></base>Marshal</root></identifier>extern_flags</type></resolved></path></path><arrow><var>a</var><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></arrow></value><comment><title level="2">Printing</title></comment><comment>These functions are basically helpers. Also you may prefer
using the name <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>printl</value></identifier></resolved></element></reference> rather than <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>write_line</value></identifier></resolved></element></reference> because it is
shorter.<newline/>The general name of a printing function is <code>&lt;prefix&gt;print&lt;suffixes&gt;</code>,<newline/>where <code>&lt;prefix&gt;</code> is one of:<list><item><code>'f'</code>, which means that the function takes as argument a channel</item><item>nothing, which means that the function prints on <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>stdout</value></identifier></resolved></element></reference></item><item><code>'e'</code>, which means that the function prints on <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>stderr</value></identifier></resolved></element></reference></item></list>and <code>&lt;suffixes&gt;</code> is a combination of:<list><item><code>'l'</code> which means that a new-line character is printed after the message</item><item><code>'f'</code> which means that the function takes as argument a <bold>format</bold> instead
of a string</item></list></comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>fprint</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>fprintl</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>fprintf</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>format4</type></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></path><var>a</var></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>fprintlf</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>format4</type></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></path><var>a</var></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>print</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>printl</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>printf</value><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>format4</type></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></path><var>a</var></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>printlf</value><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>format4</type></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></path><var>a</var></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>eprint</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>eprintl</value><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>eprintf</value><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>format4</type></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></path><var>a</var></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>eprintlf</value><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>format4</type></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></path><var>a</var></arrow></value><comment><title level="2">Utilities</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>hexdump_stream</value><doc><code>hexdump_stream oc byte_stream</code> produces the same output as the
command <code>hexdump -C</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>char</type></identifier></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>hexdump</value><doc><code>hexdump oc str = hexdump_stream oc (Lwt_stream.of_string str)</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><comment><title level="2">File utilities</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>file_name</type><doc>Type of file names</doc><path><resolved><identifier><type>string</type></identifier></resolved></path></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>open_file</value><doc><code>open_file ?buffer_size ?flags ?perm ~mode filename</code> opens the
file with name <code>filename</code> and returns a channel for
reading/writing it.<raise><name>Unix.Unix_error</name>on error.</raise></doc><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>flags</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>open_flag</type></resolved></path></path><arrow><optional>perm</optional><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_perm</type></resolved></path><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>file_name</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>with_file</value><doc><code>with_file ?buffer_size ?flags ?perm ~mode filename f</code> opens a
file and passes the channel to <code>f</code>. It is ensured that the
channel is closed when <code>f ch</code> terminates (even if it fails).</doc><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>flags</optional><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>open_flag</type></resolved></path></path><arrow><optional>perm</optional><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>file_perm</type></resolved></path><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>file_name</type></identifier></resolved></path><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>open_connection</value><doc><code>open_connection ?fd ?buffer_size addr</code> opens a connection to the
given address and returns two channels for using it. If <code>fd</code> is
not specified, a fresh one will be used.<newline/>The connection is completly closed when you close both
channels.<raise><name>Unix.Unix_error</name>on error.</raise></doc><arrow><optional>fd</optional><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_unix/index.xml"><cmti name="Lwt_unix" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_unix.cmti" digest="c749f0f828fd62fb0a12d7bbad6e6205"/></xml></base>Lwt_unix</root></identifier>file_descr</type></resolved></path><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>sockaddr</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path></tuple></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>with_connection</value><doc><code>with_connection ?fd ?buffer_size addr f</code> opens a connection to
the given address and passes the channels to <code>f</code></doc><arrow><optional>fd</optional><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_unix/index.xml"><cmti name="Lwt_unix" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_unix.cmti" digest="c749f0f828fd62fb0a12d7bbad6e6205"/></xml></base>Lwt_unix</root></identifier>file_descr</type></resolved></path><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>sockaddr</type></resolved></path><arrow><arrow><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path></tuple><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow></arrow></arrow></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>server</type><doc>Type of a server</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>establish_server</value><doc><code>establish_server ?fd ?buffer_size ?backlog sockaddr f</code> creates a
server which will listen for incoming connections. New connections
are passed to <code>f</code>. Note that <code>f</code> must not raise any exception. If
<code>fd</code> is not specified, a fresh file descriptor will be created.<newline/><code>backlog</code> is the argument passed to <code>Lwt_unix.listen</code></doc><arrow><optional>fd</optional><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_unix/index.xml"><cmti name="Lwt_unix" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_unix.cmti" digest="c749f0f828fd62fb0a12d7bbad6e6205"/></xml></base>Lwt_unix</root></identifier>file_descr</type></resolved></path><arrow><optional>buffer_size</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>backlog</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.html"><xml src="../../../../../ocaml.4.02.1+doc/otherlibs/unix/unix/index.xml"><cmti name="Unix" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/unix/unix.cmti" digest="30a4cc8e5f4f902ea609c91caec48af7"/></xml></html></base>Unix</root></identifier>sockaddr</type></resolved></path><arrow><arrow><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path></tuple><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>server</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>shutdown_server</value><doc>Shutdown the given server</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>server</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>lines_of_file</value><doc><code>lines_of_file name</code> returns a stream of all lines of the file
with name <code>name</code>. The file is automatically closed when all
lines have been read.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>file_name</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>lines_to_file</value><doc><code>lines_to_file name lines</code> writes all lines of <code>lines</code> to
file with name <code>name</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>file_name</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>chars_of_file</value><doc><code>chars_of_file name</code> returns a stream of all characters of the
file with name <code>name</code>. As for <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>lines_of_file</value></identifier></resolved></element></reference> the file is
closed when all characters have been read.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>file_name</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>char</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>chars_to_file</value><doc><code>chars_to_file name chars</code> writes all characters of <code>chars</code> to
<code>name</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>file_name</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_stream/index.xml"><cmti name="Lwt_stream" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_stream.cmti" digest="cb31901fda8c8b13d0212288d5f80b59"/></xml></base>Lwt_stream</root></identifier>t</type></resolved><path><resolved><identifier><type>char</type></identifier></resolved></path></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><comment><title level="2">Input/output of integers</title></comment><module_type><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type><doc>Common interface for reading/writing integers in binary</doc><signature><comment><title level="3">Reading</title></comment><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>read_int</value><doc>Reads a 32-bits integer as an ocaml int</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>read_int16</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>read_int32</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int32</type></identifier></resolved></path></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>read_int64</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int64</type></identifier></resolved></path></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>read_float32</value><doc>Reads an IEEE single precision floating point value</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>float</type></identifier></resolved></path></path></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>read_float64</value><doc>Reads an IEEE double precision floating point value</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>input_channel</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>float</type></identifier></resolved></path></path></arrow></value><comment><title level="3">Writing</title></comment><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>write_int</value><doc>Writes an ocaml int as a 32-bits integer</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>write_int16</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>write_int32</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int32</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>write_int64</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int64</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>write_float32</value><doc>Writes an IEEE single precision floating point value</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type>write_float64</value><doc>Writes an IEEE double precision floating point value</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>output_channel</type></identifier></resolved></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value></signature></module_type><module><module><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>LE</module><doc>Reading/writing of numbers in little-endian</doc><type><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type></identifier></resolved></type></module><module><module><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>BE</module><doc>Reading/writing of numbers in big-endian</doc><type><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type></identifier></resolved></type></module><include><resolved><identifier><module_type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>NumberIO</module_type></identifier></resolved></include><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>byte_order</type><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_sys/index.xml"><cmti name="Lwt_sys" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_sys.cmti" digest="ef11f7b477bb51889a4cbe8954d8a15d"/></xml></base>Lwt_sys</root></identifier>byte_order</type></resolved></path><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>byte_order</type>Little_endian</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>byte_order</type>Big_endian</constructor><doc>Type of byte order</doc></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>system_byte_order</value><doc>Same as <reference><element><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_sys/index.xml"><cmti name="Lwt_sys" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_sys.cmti" digest="ef11f7b477bb51889a4cbe8954d8a15d"/></xml></base>Lwt_sys</root></identifier>byte_order</type></resolved></element></reference>.</doc><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>byte_order</type></identifier></resolved></path></value><comment><title level="2">Low-level access to the internal buffer</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>block</value><doc><code>block ch size f</code> pass to <code>f</code> the internal buffer and an
offset. The buffer contains <code>size</code> chars at <code>offset</code>. <code>f</code> may
read or write these chars. <code>size</code> must satisfy <code>0 &lt;= size &lt;=
      16</code></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_bytes/index.xml"><cmti name="Lwt_bytes" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_bytes.cmti" digest="ee02628bb9b453325873f9a6b27eb891"/></xml></base>Lwt_bytes</root></identifier>t</type></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow></arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow></arrow></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>direct_access</type><doc>Information for directly accessing the internal buffer of a
channel</doc><record><field><field><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>direct_access</type>da_buffer</field><doc>The internal buffer</doc><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/unix/lwt_bytes/index.xml"><cmti name="Lwt_bytes" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_bytes.cmti" digest="ee02628bb9b453325873f9a6b27eb891"/></xml></base>Lwt_bytes</root></identifier>t</type></resolved></path></field><field><field><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>direct_access</type>da_ptr</field><doc>The pointer to:<list><item>the beginning of free space for output channels</item><item>the beginning of data for input channels</item></list></doc><mutable/><path><resolved><identifier><type>int</type></identifier></resolved></path></field><field><field><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>direct_access</type>da_max</field><doc>The maximum offset</doc><mutable/><path><resolved><identifier><type>int</type></identifier></resolved></path></field><field><field><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>direct_access</type>da_perform</field><doc>- for input channels:
refills the buffer and returns how many bytes have been read<list><item>for output channels:
flush partially the buffer and returns how many bytes have been written</item></list></doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></arrow></field></record></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>direct_access</value><doc><code>direct_access ch f</code> passes to <code>f</code> a <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>direct_access</type></identifier></resolved></element></reference>
structure. <code>f</code> must use it and update <code>da_ptr</code> to reflect how
many bytes have been read/written.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>a</var></path><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>direct_access</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow></arrow></value><comment><title level="2">Misc</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>default_buffer_size</value><doc>Return the default size for buffers. Channels that are created
without a specific size use this one.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>set_default_buffer_size</value><doc>Change the default buffer size.<raise><name>Invalid_argument</name>if the given size is smaller than <code>16</code>
or greater than <code>Sys.max_string_length</code></raise></doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><stop/><value><value><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>of_string</value><arrow><label>mode</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>mode</type></identifier></resolved><var>mode</var></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_io" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_io.cmti" digest="124fc3c0d1eecf72b3159461302e806c"/></xml></base>Lwt_io</root>channel</type></identifier></resolved><var>mode</var></path></arrow></arrow></value></unit>