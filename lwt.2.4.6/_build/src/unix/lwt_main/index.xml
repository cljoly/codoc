<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Lwt_main" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_main.cmti" digest="1e751b4878942cfcd2271c5399de7ebc"/></xml></html></base>Lwt_main</root><digest>1e751b4878942cfcd2271c5399de7ebc</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Lwt<digest>3ec18d03611d8f4576b577b743482a48</digest></import><import>Lwt_sequence<digest>ce3592bc901ce0c829f4f282ef54d80a</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>src/unix/lwt_main.mli</file><dir>/home/dsheets/.opam/doc/build/lwt.2.4.6/_build</dir><digest>a18f4e7c7b83c7e13831ba66551489ad</digest></source><doc>Main loop and event queue</doc><comment>This module controls the ``main-loop'' of Lwt.</comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_main" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_main.cmti" digest="1e751b4878942cfcd2271c5399de7ebc"/></xml></base>Lwt_main</root>run</value><doc><code>run t</code> calls the Lwt scheduler repeatedly until <code>t</code> terminates,
then returns the value returned by the thread. It <code>t</code> fails with
an exception, this exception is raised.<newline/>Note that you should avoid using <code>run</code> inside threads<list><item>The calling threads will not resume before <code>run</code>
returns.</item><item>Successive invocations of <code>run</code> are serialized: an
invocation of <code>run</code> will not terminate before all
subsequent invocations are terminated.</item></list>Note also that it is not safe to call <code>run</code> in a function
registered with <code>Pervasives.at_exit</code>, use the <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_main" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_main.cmti" digest="1e751b4878942cfcd2271c5399de7ebc"/></xml></base>Lwt_main</root>at_exit</value></identifier></resolved></element></reference>
function of this module instead.</doc><arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path><var>a</var></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_main" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_main.cmti" digest="1e751b4878942cfcd2271c5399de7ebc"/></xml></base>Lwt_main</root>yield</value><doc><code>yield ()</code> is a threads which suspends itself and then resumes
as soon as possible and terminates.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_main" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_main.cmti" digest="1e751b4878942cfcd2271c5399de7ebc"/></xml></base>Lwt_main</root>enter_iter_hooks</value><doc>Functions that are called before the main iteration.</doc><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_sequence/index.xml"><cmti name="Lwt_sequence" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_sequence.cmti" digest="ce3592bc901ce0c829f4f282ef54d80a"/></xml></base>Lwt_sequence</root></identifier>t</type></resolved><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></path></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_main" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_main.cmti" digest="1e751b4878942cfcd2271c5399de7ebc"/></xml></base>Lwt_main</root>leave_iter_hooks</value><doc>Functions that are called after the main iteration.</doc><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_sequence/index.xml"><cmti name="Lwt_sequence" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_sequence.cmti" digest="ce3592bc901ce0c829f4f282ef54d80a"/></xml></base>Lwt_sequence</root></identifier>t</type></resolved><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></path></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_main" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_main.cmti" digest="1e751b4878942cfcd2271c5399de7ebc"/></xml></base>Lwt_main</root>exit_hooks</value><doc>Sets of functions executed just before the program exit.<newline/>Notes:<list><item>each hook is called exactly one time</item><item>exceptions raised by hooks are ignored</item></list></doc><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_sequence/index.xml"><cmti name="Lwt_sequence" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_sequence.cmti" digest="ce3592bc901ce0c829f4f282ef54d80a"/></xml></base>Lwt_sequence</root></identifier>t</type></resolved><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></path></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_main" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/unix/lwt_main.cmti" digest="1e751b4878942cfcd2271c5399de7ebc"/></xml></base>Lwt_main</root>at_exit</value><doc><code>at_exit hook</code> adds hook at the left of <code>exit_hooks</code></doc><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value></unit>