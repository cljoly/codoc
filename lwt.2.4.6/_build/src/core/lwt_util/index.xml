<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></html></base>Lwt_util</root><digest>729f71744b1aa1b3bf1209665a6b3114</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Lwt<digest>3ec18d03611d8f4576b577b743482a48</digest></import><import>Lwt_sequence<digest>ce3592bc901ce0c829f4f282ef54d80a</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>src/core/lwt_util.mli</file><dir>/home/dsheets/.opam/doc/build/lwt.2.4.6/_build</dir><digest>3fa6404e53caab3b7dbbd911862a6d61</digest></source><doc>Note: This lodule is deprecated. Use <reference><element><root>Lwt_list</root></element></reference> and <reference><element><root>Lwt_pool</root></element></reference>
instead.</doc><comment><title level="3">Lists iterators</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>iter</value><doc><code>iter f l</code> start a thread for each element in <code>l</code>. The threads
are started according to the list order, but then can run
concurrently. It terminates when all the threads are
terminated, if all threads are successful. It fails if any of
the threads fail.</doc><arrow><arrow><var>a</var><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>iter_serial</value><doc>Similar to <code>iter</code> but wait for one thread to terminate before
starting the next one.</doc><arrow><arrow><var>a</var><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>map</value><doc><code>map f l</code> apply <code>f</code> to each element in <code>l</code> and collect the
results of the threads thus created. The threads are started
according to the list order, but then can run concurrently.
<code>map f l</code> fails if any of the threads fail.</doc><arrow><arrow><var>a</var><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>list</type></identifier></resolved><var>b</var></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>map_with_waiting_action</value><doc><code>map_with_waiting_action f wa l</code> apply <code>f</code> to each element
in <code>l</code> and collect the results of the threads thus created.
The threads are started according to the list order, but
then can run concurrently. The difference with <code>map f l</code> is
that function wa will be called on the element that the
function is waiting for its termination.</doc><arrow><arrow><var>a</var><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow><arrow><arrow><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>list</type></identifier></resolved><var>b</var></path></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>map_serial</value><doc>Similar to <code>map</code> but wait for one thread to terminate before
starting the next one.</doc><arrow><arrow><var>a</var><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>b</var></path></arrow><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>list</type></identifier></resolved><var>b</var></path></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>fold_left</value><doc>Similar to <code>List.fold_left</code>.</doc><arrow><arrow><var>a</var><arrow><var>b</var><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow></arrow><arrow><var>a</var><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>b</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow></arrow></arrow></value><comment><title level="3">Regions</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>region</type></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>make_region</value><doc><code>make_region sz</code> create a region of size <code>sz</code>.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>region</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>resize_region</value><doc><code>resize_region reg sz</code> resize the region <code>reg</code> to size <code>sz</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>region</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>run_in_region</value><doc><code>run_in_region reg size f</code> execute the thread produced by the
function <code>f</code> in the region <code>reg</code>. The thread is not started
before some room is available in the region.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>region</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow></arrow></arrow></value><stop/><value><value><root><base><xml src="index.xml"><cmti name="Lwt_util" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_util.cmti" digest="729f71744b1aa1b3bf1209665a6b3114"/></xml></base>Lwt_util</root>join</value><doc>Same as <code>Lwt.join</code></doc><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value></unit>