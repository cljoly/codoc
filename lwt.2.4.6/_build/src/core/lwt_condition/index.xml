<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></html></base>Lwt_condition</root><digest>e3e5f5f22c48ef25c2d9d79365018421</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Lwt<digest>3ec18d03611d8f4576b577b743482a48</digest></import><import>Lwt_mutex<digest>79b0a246b7c4d76af9f38a5a8cf53b17</digest></import><import>Lwt_sequence<digest>ce3592bc901ce0c829f4f282ef54d80a</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>src/core/lwt_condition.mli</file><dir>/home/dsheets/.opam/doc/build/lwt.2.4.6/_build</dir><digest>6a19697ca2d7e882f102f491e7d65562</digest></source><doc>Conditions</doc><comment>Condition variables to synchronize between threads.</comment><type><type><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>t</type><doc>Condition variable type. The type parameter denotes the type of
value propagated from notifier to waiter.</doc><param>a</param></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>create</value><doc><code>create ()</code> creates a new condition variable.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>t</type></identifier></resolved><var>a</var></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>wait</value><doc><code>wait mutex condvar</code> will cause the current thread to block,
awaiting notification for a condition variable, <code>condvar</code>. If
provided, the <code>mutex</code> must have been previously locked (within
the scope of <code>Lwt_mutex.with_lock</code>, for example) and is
temporarily unlocked until the condition is notified. Upon
notification, <code>mutex</code> is re-locked before <code>wait</code> returns and
the thread's activity is resumed. When the awaited condition
is notified, the value parameter passed to <code>notify</code> is
returned.</doc><arrow><optional>mutex</optional><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt_mutex/index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root></identifier>t</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>t</type></identifier></resolved><var>a</var></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>signal</value><doc><code>signal condvar value</code> notifies that a condition is ready. A
single waiting thread will be awoken and will receive the
notification value which will be returned from <code>wait</code>. Note
that condition notification is not &quot;sticky&quot;, i.e. if there is
no waiter when <code>notify</code> is called, the notification will be
missed and the value discarded.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>t</type></identifier></resolved><var>a</var></path><arrow><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>broadcast</value><doc><code>broadcast condvar value</code> notifies all waiting threads. Each
will be awoken in turn and will receive the same notification
value.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_condition" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_condition.cmti" digest="e3e5f5f22c48ef25c2d9d79365018421"/></xml></base>Lwt_condition</root>t</type></identifier></resolved><var>a</var></path><arrow><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value></unit>