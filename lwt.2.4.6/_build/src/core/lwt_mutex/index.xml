<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></html></base>Lwt_mutex</root><digest>79b0a246b7c4d76af9f38a5a8cf53b17</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Lwt<digest>3ec18d03611d8f4576b577b743482a48</digest></import><import>Lwt_sequence<digest>ce3592bc901ce0c829f4f282ef54d80a</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>src/core/lwt_mutex.mli</file><dir>/home/dsheets/.opam/doc/build/lwt.2.4.6/_build</dir><digest>b775c280018d462abb4971aae83169cf</digest></source><doc>Cooperative locks for mutual exclusion</doc><type><type><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>t</type><doc>Type of Lwt mutexes</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>create</value><doc><code>create ()</code> creates a new mutex, which is initially unlocked</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>t</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>lock</value><doc><code>lock mutex</code> lockcs the mutex, that is:<newline/><list><item>if the mutex is unlocked, then it is marked as locked and
<reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>lock</value></identifier></resolved></element></reference> returns immediately</item></list><list><item>if it is locked, then <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>lock</value></identifier></resolved></element></reference> waits for all threads waiting on
the mutex to terminate, then it resumes when the last one
unlocks the mutex</item></list>Note: threads are woken up in the same order they try to lock the
mutex</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>t</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>unlock</value><doc><code>unlock mutex</code> unlock the mutex if no threads is waiting on
it. Otherwise it will eventually removes the first one and
resumes it.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>is_locked</value><doc><code>locked mutex</code> returns whether <code>mutex</code> is currently locked</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>is_empty</value><doc><code>is_empty mutex</code> returns <code>true</code> if they are no thread waiting on
the mutex, and <code>false</code> otherwise</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>with_lock</value><doc><code>with_lock lock f</code> is used to lock a mutex within a block scope.
The function <code>f ()</code> is called with the mutex locked, and its
result is returned from the call to <custom tag="with_lock"/>. If an exception
is raised from f, the mutex is also unlocked before the scope of
<custom tag="with_lock"/> is exited.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_mutex" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_mutex.cmti" digest="79b0a246b7c4d76af9f38a5a8cf53b17"/></xml></base>Lwt_mutex</root>t</type></identifier></resolved></path><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><var>a</var></path></arrow></arrow></value></unit>