<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></html></base>Lwt_switch</root><digest>9b9ebd378101e3e67fec3354abb49860</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Lwt<digest>3ec18d03611d8f4576b577b743482a48</digest></import><import>Lwt_sequence<digest>ce3592bc901ce0c829f4f282ef54d80a</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>src/core/lwt_switch.mli</file><dir>/home/dsheets/.opam/doc/build/lwt.2.4.6/_build</dir><digest>8b9f1cc64fd03cc7737bd9eb09b083e1</digest></source><doc>Lwt switches</doc><comment>Switch has two goals:<newline/><list><item>being able to free multiple resources at the same time,</item><item>offer a better alternative than always returning an id to free
some resource.</item></list>For example, consider the following interface:<newline/><precode>      type id

      val free : id -&gt; unit Lwt.t

      val f : unit -&gt; id Lwt.t
      val g : unit -&gt; id Lwt.t
      val h : unit -&gt; id Lwt.t</precode><newline/>Now you want to call <code>f</code>, <code>g</code> and <code>h</code> in parallel. You can
simply do:<newline/><precode>      lwt idf = f () and idg = g () and idh = h () in
      ...</precode><newline/>However, one may want to handle possible failures of <code>f ()</code>, <code>g
    ()</code> and <code>h ()</code>, and disable all allocated resources if one of
these three threads fails. This may be hard since you have to
remember which one failed and which one returned correctly.<newline/>Now if we change the interface a little bit:<newline/><precode>      val f : ?switch : Lwt_switch.t -&gt; unit -&gt; id Lwt.t
      val g : ?switch : Lwt_switch.t -&gt; unit -&gt; id Lwt.t
      val h : ?switch : Lwt_switch.t -&gt; unit -&gt; id Lwt.t</precode><newline/>the code becomes:<newline/><precode>      let switch = Lwt_switch.create () in
      try_lwt
        lwt idf = f ~switch ()
        and idg = g ~switch ()
        and idh = h ~switch () in
        ...
      with exn -&gt;
        lwt () = Lwt_switch.turn_off switch in
        raise_lwt exn</precode></comment><type><type><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>t</type><doc>Type of switches.</doc></type><value><value><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>create</value><doc><code>create ()</code> creates a new switch.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>t</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>is_on</value><doc><code>is_on switch</code> returns <code>true</code> if the switch is currently on, and
<code>false</code> otherwise.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>turn_off</value><doc><code>turn_off switch</code> turns off the switch. It calls all registered
hooks, waits for all of them to terminate, then returns. If
one of the hooks failed, it will fail with the exception raised
by the hook. If the switch is already off, it does nothing.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>t</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><exception><exception><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>Off</exception><doc>Exception raised when trying to add a hook to a switch that is
already off.</doc></exception><value><value><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>check</value><doc><code>check switch</code> does nothing if <code>switch</code> is <code>None</code> or contains an
switch that is currently on, and raises <reference><element><resolved><identifier><exception><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>Off</exception></identifier></resolved></element></reference> otherwise.</doc><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>t</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>add_hook</value><doc><code>add_hook switch f</code> registers <code>f</code> so it will be called when
<reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>turn_off</value></identifier></resolved></element></reference> is invoked. It does nothing if <code>switch</code> is
<code>None</code>. If <code>switch</code> contains an switch that is already off then
<reference><element><resolved><identifier><exception><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>Off</exception></identifier></resolved></element></reference> is raised.</doc><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>t</type></identifier></resolved></path></path><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>add_hook_or_exec</value><doc><code>add_hook_or_exec switch f</code> is the same as <reference><element><resolved><identifier><value><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>add_hook</value></identifier></resolved></element></reference> except
that if the switch is already off, <code>f</code> is called immediately.</doc><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Lwt_switch" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt_switch.cmti" digest="9b9ebd378101e3e67fec3354abb49860"/></xml></base>Lwt_switch</root>t</type></identifier></resolved></path></path><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow><path><resolved><type><identifier><root><base><xml src="../../../../../lwt.2.4.6/_build/src/core/lwt/index.xml"><cmti name="Lwt" src="/home/dsheets/.opam/doc/build/lwt.2.4.6/_build/src/core/lwt.cmti" digest="3ec18d03611d8f4576b577b743482a48"/></xml></base>Lwt</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></value></unit>