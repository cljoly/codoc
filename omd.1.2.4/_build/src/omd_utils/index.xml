<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></html></base>Omd_utils</root><digest>aed40af36da449348c39105f6a248ddb</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><source><file>src/omd_utils.mli</file><dir>/home/dsheets/.opam/doc/build/omd.1.2.4/_build</dir><digest>d52c22d3f85457ba81909d586308359f</digest></source><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>debug</value><doc>Equals <code>true</code> if the environment variable DEBUG is set,
or if the environment variable OMD_DEBUG is set to a string
that is not <code>&quot;false&quot;</code>.</doc><path><resolved><identifier><type>bool</type></identifier></resolved></path></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>trackfix</value><path><resolved><identifier><type>bool</type></identifier></resolved></path></value><exception><exception><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>Error</exception><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></exception><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>raise</value><doc>Same as <code>Pervasives.raise</code> except if <code>debug</code> equals true,
in which case it prints a trace on stderr before raising the exception.</doc><arrow><path><resolved><identifier><type>exn</type></identifier></resolved></path><var>a</var></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>warn</value><doc><code>warn we x</code> prints a warning with the message <code>x</code> if <code>we</code> is true,
else raises <code>Omd_utils.Error x</code>.</doc><arrow><optional>we</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><module><module><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>StringSet</module><doc>Set of <code>string</code>. Cf. documentation of <reference><element><resolved><module_type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/set/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/set/index.xml"><cmti name="Set" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/set.cmti" digest="487197ccd2fea64d52f1cd917061caf2"/></xml></html></base>Set</root></identifier>S</module_type></resolved></element></reference></doc><type><signature><include><with><resolved><module_type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/set/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/set/index.xml"><cmti name="Set" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/set.cmti" digest="487197ccd2fea64d52f1cd917061caf2"/></xml></html></base>Set</root></identifier>S</module_type></resolved><type><resolved><type><root/>elt</type></resolved><path><resolved><identifier><type>string</type></identifier></resolved></path></type></with></include><value><value><module><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>StringSet</module>of_list</value><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>StringSet</module>elt</type></identifier></resolved></path></path><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>StringSet</module>t</type></identifier></resolved></path></arrow></value></signature></type></module><type><type><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>split</type><doc>Type of a split function</doc><param>a</param><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>split_action</type></identifier></resolved><var>a</var></path></arrow></type><type><type><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>split_action</type><param>a</param><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>split_action</type>Continue</constructor></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>split_action</type>Continue_with</constructor><arguments><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>split_action</type>Split</constructor><doc>Type of a split action</doc><arguments><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path></arguments></constructor></variant></type><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>fsplit_rev</value><doc><code>fsplit_rev ?excl ~f l</code> returns <code>Some(x,y)</code> where <code>x</code> is the
*reversed** list of the consecutive elements of <code>l</code> that obey the
split function <code>f</code>.
Note that <code>f</code> is applied to a list of elements and not just an
element, so that <code>f</code> can look farther in the list when applied.
<code>f l</code> returns <code>Continue</code> if there're more elements to consume,
<code>Continue_with(left,right)</code> if there's more elements to consume
but we want to choose what goes to the left part and what remains
to process (right part), and returns <code>Split(left,right)</code> if
the splitting is decided.
When <code>f</code> is applied to an empty list, if it returns <code>Continue</code>
then the result will be <code>None</code>.<newline/>If <code>excl</code> is given, then <code>excl</code> is applied before <code>f</code> is, to check
if the splitting should be stopped right away. When the split
fails, it returns <code>None</code>.</doc><arrow><optional>excl</optional><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><label>f</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>split</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>option</type></identifier></resolved><tuple><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path></tuple></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>fsplit</value><doc><code>fsplit ?excl ~f l</code> returns <code>Some(List.rev x, y)</code>
if <code>fsplit ?excl ~f l</code> returns <code>Some(x,y)</code>, else it returns <code>None</code>.</doc><arrow><optional>excl</optional><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><label>f</label><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>split</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>option</type></identifier></resolved><tuple><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path></tuple></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>id_of_string</value><doc><code>id_of_string ids id</code> returns a mangled version of <code>id</code>, using the
method <code>ids#mangle</code>. If you don't need mangling, you may use
<code>object method mangle x = x end</code> for <code>ids</code>. However, the name
<code>ids</code> also means that your object should have knowledge of all IDs
it has issued, in order to avoid collision. This is why
<code>id_of_string</code> asks for an object rather than &quot;just a
function&quot;.</doc><arrow><object><name>mangle</name><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow><open/></object><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>htmlentities</value><doc><code>htmlentities s</code> returns a new string in which html-significant
characters have been converted to html entities. For instance,
&quot;&lt;Foo&amp;Bar&gt;&quot; is converted to &quot;&amp;lt;Foo&amp;amp;Bar&amp;gt;&quot;.</doc><arrow><optional>md</optional><path><resolved><identifier><type>bool</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>minimalize_blanks</value><doc><code>minimalize_blanks s</code> returns a copy of <code>s</code> in which the first and last
characters are never blank, and two consecutive blanks never happen.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>eat</value><doc><code>eat f l</code> returns <code>l</code> where elements satisfying <code>f</code> have been removed,
but it stops removing as soon as one element doesn't satisfy <code>f</code>.</doc><arrow><arrow><var>a</var><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>list</type></identifier></resolved><var>a</var></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>extract_html_attributes</value><doc>Takes some HTML and returns the list of attributes of the first
HTML tag.
Notes:
Doesn't check the validity of HTML tags or attributes.
Doesn't support backslash escaping.
Attribute names are delimited by the space and equal characters.
Attribute values are either delimited by the double quote
or the simple quote character.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>list</type></identifier></resolved><tuple><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></tuple></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>extract_inner_html</value><doc>Takes an HTML node and returns the contents of the node.
If it's not given a node, it returns something rubbish.</doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>html_void_elements</value><doc>HTML void elements</doc><path><resolved><type><identifier><module><root><base><xml src="index.xml"><cmti name="Omd_utils" src="/home/dsheets/.opam/doc/build/omd.1.2.4/_build/src/omd_utils.cmti" digest="aed40af36da449348c39105f6a248ddb"/></xml></base>Omd_utils</root>StringSet</module></identifier>t</type></resolved></path></value></unit>