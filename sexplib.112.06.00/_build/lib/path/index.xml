<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></html></base>Path</root><digest>a6431602c735fa5d6b281211d189cfbb</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Char<digest>60fd98ba6ff303baf9287e7bfb886f12</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lexer<digest>5bdc5a61bbe12cd7fe5ee8dc850923d9</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>List<digest>8988208489274193e4e3f69dc6ec2f75</digest></import><import>Nativeint<digest>d9e04753374f7110b66feda40414e5e3</digest></import><import>Parser<digest>66553801b5137adf6eead22b00c3f0b1</digest></import><import>Parser_with_layout<digest>a4bdc657279328237d48165d24536d6b</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Pre_sexp<digest>88a47148911378ba006648fdf087ddf1</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Random<digest>6d410ecc00aac669668fa399dbd6fca2</digest></import><import>Sexp<digest>891e7d1ecf3b3827b8367d17dfdaa92a</digest></import><import>Sexp_intf<digest>b6bfb52a5bc7828135cdc1ae2d96533d</digest></import><import>Src_pos<digest>eb31b0e714d864bc46e9b625ca401cb9</digest></import><import>String<digest>9cb286f2c4569fd32c379b1a05c7b590</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Type<digest>a9f442026b2a4454b1c72ee138f7739c</digest></import><import>Type_with_layout<digest>2a2b97b2bfcdaa7adc2d12e68d666e47</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>lib/path.mli</file><dir>/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build</dir><digest>073281aefea03d0ba0f66050c6c37e53</digest></source><doc>Path: Module for Substitutions within S-expressions</doc><comment><title level="6">Types</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>el</type><doc>Type of substitution elements</doc><variant><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>el</type>Pos</constructor><doc><code>Pos n</code> denotes <code>n</code>th element in a tuple</doc><arguments><path><resolved><identifier><type>int</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>el</type>Match</constructor><doc><code>Match (tag, n)</code> denotes <code>n</code>th argument of sum matching <code>tag</code></doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arguments></constructor><constructor><constructor><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>el</type>Rec</constructor><doc><code>Rec name</code> denotes the record field having <code>name</code></doc><arguments><path><resolved><identifier><type>string</type></identifier></resolved></path></arguments></constructor></variant></type><type><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>t</type><doc>Type of substitution paths</doc><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>el</type></identifier></resolved></path></path></type><comment><title level="6">High-level functions</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>parse</value><doc><code>parse str</code><return>a substitution path represented by string <code>str</code>.<newline/>Syntax:<newline/>&quot;.&quot; -&gt;
separates path elements; must be present at start of string.<newline/>&quot;[4]&quot; -&gt;
specifies the 4th element in a tuple.<newline/>&quot;some_tag[4]&quot; -&gt;
tries to match <code>some_tag</code>, then denotes its 4th argument.<newline/>&quot;name&quot; -&gt;
denotes record field having <code>name</code><newline/>Example from test code:<newline/>&quot;.t.x.B<code>1</code>&quot; -&gt; choose record field with name <code>t</code>, then subfield
<code>x</code>. Match this value against <code>B</code>, and denote its first argument.</return><raise><name>Failure</name>if the path is syntactically invalid.</raise></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>t</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>get</value><doc><code>get ?path ?str sexp</code> if <code>path</code> is provided, use it as path.
Otherwise, if <code>str</code> is provided, parse it as a path. If neither
is provided, assume an empty path.<return>the sub-expression from
S-expression <code>sexp</code> denoted by the path.</return><raise><name>Failure</name>if path is syntactically invalid or if the path
structure clashes with the structure of the data.</raise></doc><arrow><optional>path</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>t</type></identifier></resolved></path><arrow><optional>str</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>replace</value><doc><code>replace ?path ?str sexp ~subst</code> like <code>get</code>, but does not extract
a sub-expression but substitutes it with <code>subst</code>.<return>resulting
S-expression.</return><raise><name>Failure</name>if path is syntactically invalid or if the path
structure clashes with the structure of the data.</raise></doc><arrow><optional>path</optional><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>t</type></identifier></resolved></path><arrow><optional>str</optional><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><arrow><label>subst</label><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>replace_no_path</value><doc><code>replace_no_path ~str sexp ~subst</code> like <code>replace</code>, but does not take
optional arguments. <code>str</code> must be specified.<raise><name>Failure</name>if path is syntactically invalid or if the path
structure clashes with the structure of the data.</raise></doc><arrow><label>str</label><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><arrow><label>subst</label><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>subst_path</value><doc><code>subst_path sexp path</code><return>the tuple <code>(subst, sub)</code>, where <code>subst</code>
is a function that returns an S-expression in which the subexpression
denoted by <code>path</code> in <code>sexp</code> has been substituted by its argument.
<code>sub</code> is the denoted subexpression. Note that <code>subst sub = sexp</code>.</return><raise><name>Failure</name>if path is syntactically invalid or if the path
structure clashes with the structure of the data.</raise></doc><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>t</type></identifier></resolved></path><tuple><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></tuple></arrow></arrow></value><comment><title level="6">Low-level functions</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>extract_pos</value><doc><code>extract_pos n sexp</code><return>the tuple <code>(subst, sub)</code>, where <code>subst</code>
is a function that returns an S-expression in which the subexpression
denoted at position <code>n</code> in <code>sexp</code>, which must be a list, has been
substituted by <code>value</code> if the optional argument is <code>Some value</code>, or
removes the denoted subexpression if the optional argument is <code>None</code>.
<code>sub</code> is the denoted subexpression. Note that <code>subst (Some sub) =
    sexp</code>.</return><raise><name>Failure</name>if the position cannot be resolved within the given
S-expression.</raise></doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><tuple><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></path><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></tuple></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>extract_match</value><doc><code>extract_match tag n sexp</code><return>the tuple <code>(subst, sub)</code>, where
<code>subst</code> is a function that returns an S-expression in which the
subexpression denoted by matching <code>tag</code> and taking its <code>n</code>th argument
in <code>sexp</code> has been substituted by <code>value</code> if the argument is <code>Some
    value</code>, or removes the denoted subexpression if the optional argument
is <code>None</code>. <code>sub</code> is the denoted subexpression. Note that <code>subst
    (Some sub) = sexp</code>.</return><raise><name>Failure</name>if the S-expression does not represent a sum tag.</raise></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><tuple><arrow><path><resolved><identifier><type>option</type></identifier></resolved><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></path><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></tuple></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Path" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/path.cmti" digest="a6431602c735fa5d6b281211d189cfbb"/></xml></base>Path</root>extract_rec</value><doc><code>extract_rec name sexp</code><return>the tuple <code>(subst, sub)</code>, where
<code>subst</code> is a function that returns an S-expression in which the
subexpression denoted by matching field name <code>name</code> in <code>sexp</code> has
been substituted by its argument. <code>sub</code> is the denoted subexpression.
Note that <code>subst (Some sub) = sexp</code>.</return><raise><name>Failure</name>if the S-expression does not represent a record.</raise></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><tuple><arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></arrow><path><dot><resolved><identifier><root><base><xml src="../../../../sexplib.112.06.00/_build/lib/sexp/index.xml"><cmti name="Sexp" src="/home/dsheets/.opam/doc/build/sexplib.112.06.00/_build/lib/sexp.cmti" digest="891e7d1ecf3b3827b8367d17dfdaa92a"/></xml></base>Sexp</root></identifier></resolved>t</dot></path></tuple></arrow></arrow></value></unit>