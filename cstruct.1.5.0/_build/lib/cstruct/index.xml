<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></html></base>Cstruct</root><digest>e7c7cd9b343f0d41375c5b15339de767</digest><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Char<digest>60fd98ba6ff303baf9287e7bfb886f12</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lazy<digest>7dba0bf02f60e5ff44e9e4057263f28d</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>List<digest>8988208489274193e4e3f69dc6ec2f75</digest></import><import>Nativeint<digest>d9e04753374f7110b66feda40414e5e3</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Random<digest>6d410ecc00aac669668fa399dbd6fca2</digest></import><import>Sexplib<digest>edfea10cfcfd644a920e72e67cb0bbdd</digest></import><import>String<digest>9cb286f2c4569fd32c379b1a05c7b590</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>lib/cstruct.mli</file><dir>/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build</dir><digest>bf26e790d1c1ef3f8073487e443a23d5</digest></source><doc>Manipulate external memory buffers as C-like structures.<newline/>Cstruct is a library and syntax extension to make it easier to access C-like
structures directly from OCaml. It supports both reading and writing to these
memory buffers, and they are accessed via the <code>Bigarray</code> module.<newline/>The library interface below is intended to be used in conjunction with the
<code>pa_cstruct</code> camlp4 syntax extension that is also supplied with this library
(in the <code>cstruct.syntax</code> ocamlfind package).<newline/>An example description for the pcap packet format is:<newline/><precode>cstruct pcap_header {
  uint32_t magic_number;   (* magic number *)
  uint16_t version_major;  (* major version number *)
  uint16_t version_minor;  (* minor version number *)
  uint32_t thiszone;       (* GMT to local correction *)
  uint32_t sigfigs;        (* accuracy of timestamps *)
  uint32_t snaplen;        (* max length of captured packets, in octets *)
  uint32_t network         (* data link type *)
} as little_endian

cstruct pcap_packet {
  uint32_t ts_sec;         (* timestamp seconds *)
  uint32_t ts_usec;        (* timestamp microseconds *)
  uint32_t incl_len;       (* number of octets of packet saved in file *)
  uint32_t orig_len        (* actual length of packet *)
} as little_endian

cstruct ethernet {
  uint8_t        dst[6];
  uint8_t        src[6];
  uint16_t       ethertype
} as big_endian

cstruct ipv4 {
  uint8_t        hlen_version;
  uint8_t        tos;
  uint16_t       len;
  uint16_t       id;
  uint16_t       off;
  uint8_t        ttl;
  uint8_t        proto;
  uint16_t       csum;
  uint8_t        src[4];
  uint8_t        dst[4]
} as big_endian</precode><newline/>These will expand to get and set functions for every field, with types
appropriate to the particular definition. For instance:<newline/><precode>val get_pcap_packet_ts_sec : Cstruct.t -&gt; Cstruct.uint32
val set_pcap_packet_ts_sec : Cstruct.t -&gt; Cstruct.uint32 -&gt; unit
val get_pcap_packet_ts_usec : Cstruct.t -&gt; Cstruct.uint32
val set_pcap_packet_ts_usec : Cstruct.t -&gt; Cstruct.uint32 -&gt; unit
val get_pcap_packet_incl_len : Cstruct.t -&gt; Cstruct.uint32
val set_pcap_packet_incl_len : Cstruct.t -&gt; Cstruct.uint32 -&gt; unit
val get_pcap_packet_orig_len : Cstruct.t -&gt; Cstruct.uint32
val set_pcap_packet_orig_len : Cstruct.t -&gt; Cstruct.uint32 -&gt; unit
val hexdump_pcap_packet_to_buffer : Buffer.t -&gt; Cstruct.t -&gt; unit</precode><newline/>The buffers generate a different set of functions. For the <code>ethernet</code>
definitions, we have:<newline/><precode>val sizeof_ethernet : int
val get_ethernet_dst : Cstruct.t -&gt; Cstruct.t
val copy_ethernet_dst : Cstruct.t -&gt; string
val set_ethernet_dst : string -&gt; int -&gt; Cstruct.t -&gt; unit
val blit_ethernet_dst : Cstruct.t -&gt; int -&gt; Cstruct.t -&gt; unit
val get_ethernet_src : Cstruct.t -&gt; Cstruct.t
val copy_ethernet_src : Cstruct.t -&gt; string</precode><newline/>You can also declare C-like enums:<newline/><precode>cenum foo32 {
  ONE32;
  TWO32 = 0xfffffffel;
  THREE32
} as uint32_t

cenum bar16 {
  ONE = 1;
  TWO;
  FOUR = 4;
  FIVE
} as uint16_t</precode><newline/>This generates signatures of the form:<newline/><precode>type foo32 = | ONE32 | TWO32 | THREE32
val int_to_foo32 : int32 -&gt; foo32 option
val foo32_to_int : foo32 -&gt; int32
val foo32_to_string : foo32 -&gt; string
val string_to_foo32 : string -&gt; foo32 option
type bar16 = | ONE | TWO | FOUR | FIVE
val int_to_bar16 : int -&gt; bar16 option
val bar16_to_int : bar16 -&gt; int
val bar16_to_string : bar16 -&gt; string
val string_to_bar16 : string -&gt; bar16 option</precode></doc><comment><title level="2">Base types</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>buffer</type><doc>Type of a buffer. A cstruct is composed of an underlying buffer
and position/length within this buffer.</doc><path><resolved><type><module><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>Array1</module>t</type></resolved><path><resolved><identifier><type>char</type></identifier></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>int8_unsigned_elt</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.html"><xml src="../../../../ocaml.4.02.1+doc/otherlibs/bigarray/bigarray/index.xml"><cmti name="Bigarray" src="/home/dsheets/.opam/doc/build/ocaml/otherlibs/bigarray/bigarray.cmti" digest="0643187a8b562858118690c393d01c2e"/></xml></html></base>Bigarray</root></identifier>c_layout</type></resolved></path></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type><doc>Type of a cstruct.</doc><private/><record><field><field><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type>buffer</field><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>buffer</type></identifier></resolved></path></field><field><field><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type>off</field><path><resolved><identifier><type>int</type></identifier></resolved></path></field><field><field><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type>len</field><path><resolved><identifier><type>int</type></identifier></resolved></path></field></record></type><type><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>byte</type><doc>A single byte type</doc><path><resolved><identifier><type>char</type></identifier></resolved></path></type><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>byte</value><doc><code>byte v</code> convert <code>v</code> to a single byte.<raise><name>Invalid_argument</name>if <code>v</code> is negative or greater than 255.</raise></doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>byte</type></identifier></resolved></path></arrow></value><type><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint8</type><doc>8-bit unsigned integer. The representation is currently an
unboxed OCaml integer.</doc><path><resolved><identifier><type>int</type></identifier></resolved></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint16</type><doc>16-bit unsigned integer. The representation is currently an
unboxed OCaml integer.</doc><path><resolved><identifier><type>int</type></identifier></resolved></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint32</type><doc>32-bit unsigned integer. The representation is currently a
boxed OCaml int32.</doc><path><resolved><identifier><type>int32</type></identifier></resolved></path></type><type><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint64</type><doc>64-bit unsigned integer. The representation is currently a
boxed OCaml int64.</doc><path><resolved><identifier><type>int64</type></identifier></resolved></path></type><comment><title level="2">Creation and conversion</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>of_bigarray</value><doc><code>of_bigarray ~off ~len b</code> is the cstruct contained in <code>b</code> starting
at <code>off</code>, of length <code>len</code>.</doc><arrow><optional>off</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>buffer</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>to_bigarray</value><doc><code>to_bigarray t</code> converts a <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></element></reference> into a <reference><element><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>buffer</type></identifier></resolved></element></reference> Bigarray, using
the Bigarray slicing to allocate a fresh array that preserves
sharing of the underlying buffer.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>buffer</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>create</value><doc><code>create len</code> is a cstruct of size <code>len</code> with an offset of 0.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>of_string</value><doc><code>of_string ~allocator str</code> is the cstruct representation of <code>str</code>,
with the underlying buffer allocated by <code>alloc</code>. If <code>allocator</code> is not
provided, <code>create</code> is used.</doc><arrow><optional>allocator</optional><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow></arrow></value><comment><title level="2">Getters and Setters</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>byte_to_int</value><doc>Convert a byte to an integer</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>byte</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>check_bounds</value><doc><code>check_bounds cstr len</code> is <code>true</code> if <code>cstr.buffer</code>'s size is
greater or equal than <code>len</code>, <code>false</code> otherwise.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>get_char</value><doc><code>get_char t off</code> returns the character contained in the cstruct
at offset <code>off</code>.<raise><name>Invalid_argument</name>if the offset exceeds cstruct length.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>char</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>get_uint8</value><doc><code>get_uint8 t off</code> returns the byte contained in the cstruct
at offset <code>off</code>.<raise><name>Invalid_argument</name>if the offset exceeds cstruct length.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint8</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>set_char</value><doc><code>set_char t off c</code> sets the byte contained in the cstruct
at offset <code>off</code> to character <code>c</code>.<raise><name>Invalid_argument</name>if the offset exceeds cstruct length.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>char</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>set_uint8</value><doc><code>set_uint8 t off c</code> sets the byte contained in the cstruct
at offset <code>off</code> to byte <code>c</code>.<raise><name>Invalid_argument</name>if the offset exceeds cstruct length.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint8</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>sub</value><doc><code>sub cstr off len</code> is <code>{ t with off = t.off + off; len }</code><raise><name>Invalid_argument</name>if the offset exceeds cstruct length.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>shift</value><doc><code>shift cstr len</code> is <code>{ t with off=t.off+off; len=t.len-off }</code><raise><name>Invalid_argument</name>if the offset exceeds cstruct length.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>copy</value><doc><code>copy cstr off len</code> is the string representation of the segment of
<code>t</code> starting at <code>off</code> of size <code>len</code>.<raise><name>Invalid_argument</name>if <code>off</code> and <code>len</code> do not designate a
valid segment of <code>t</code>.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>blit</value><doc><code>blit src srcoff dst dstoff len</code> copies <code>len</code> characters from
cstruct <code>src</code>, starting at index <code>srcoff</code>, to cstruct <code>dst</code>,
starting at index <code>dstoff</code>. It works correctly even if <code>src</code> and
<code>dst</code> are the same string, and the source and destination
intervals overlap.<raise><name>Invalid_argument</name>if <code>srcoff</code> and <code>len</code> do not designate a
valid segment of <code>src</code>, or if <code>dstoff</code> and <code>len</code> do not designate
a valid segment of <code>dst</code>.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>blit_from_string</value><doc><code>blit_from_string src srcoff dst dstoff len</code> copies <code>len</code>
characters from string <code>src</code>, starting at index <code>srcoff</code>, to
string <code>dst</code>, starting at index <code>dstoff</code>.<raise><name>Invalid_argument</name>if <code>srcoff</code> and <code>len</code> do not designate a
valid substring of <code>src</code>, or if <code>dstoff</code> and <code>len</code> do not
designate a valid segment of <code>dst</code>.</raise></doc><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>blit_to_string</value><doc><code>blit_to_string src srcoff dst dstoff len</code> copies <code>len</code> characters
from cstruct <code>src</code>, starting at index <code>srcoff</code>, to string <code>dst</code>,
starting at index <code>dstoff</code>.<raise><name>Invalid_argument</name>if <code>srcoff</code> and <code>len</code> do not designate a
valid segment of <code>src</code>, or if <code>dstoff</code> and <code>len</code> do not designate
a valid substring of <code>dst</code>.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>len</value><doc>Returns the length of the current cstruct view. Note that this
length is potentially smaller than the actual size of the underlying
buffer, as the <code>sub</code> or <code>set_len</code> functions can construct a smaller view.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>set_len</value><doc><code>set_len t len</code> sets the length of the cstruct <code>t</code> to a new absolute
value, and returns a fresh cstruct with these settings.<raise><name>Invalid_argument</name>if <code>len</code> exceeds the size of the buffer.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>add_len</value><doc><code>add_len t l</code> will add <code>l</code> bytes to the length of the buffer, and return
a fresh cstruct with these settings.<raise><name>Invalid_argument</name>if <code>len</code> exceeds the size of the buffer.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>split</value><doc><code>split ~start cstr len</code> is a tuple containing the cstruct
extracted from <code>cstr</code> at offset <code>start</code> (default: 0) of length
<code>len</code> as first element, and the rest of <code>cstr</code> as second
element.</doc><arrow><optional>start</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><tuple><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></tuple></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>to_string</value><doc><code>to_string t</code> will allocate a fresh OCaml <code>string</code> and copy the
contents of the cstruct into it, and return that string copy.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><comment><title level="2">Debugging</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>hexdump</value><doc>When the going gets tough, the tough hexdump their cstructs
and peer at it until the bug disappears. This will directly
prettyprint the contents of the cstruct to the standard output.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>hexdump_to_buffer</value><doc><code>hexdump_to_buffer buf c</code> will append the pretty-printed hexdump
of the cstruct <code>c</code> to the buffer <code>buf</code>.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/buffer/index.xml"><cmti name="Buffer" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/buffer.cmti" digest="a579f4a57e300ec755f84af883c1e51b"/></xml></html></base>Buffer</root></identifier>t</type></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>debug</value><doc><code>debug t</code> will print out the internal details of a cstruct such
as its base offset and the length, and raise an assertion failure
if invariants have been violated. Not intended for casual use.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><module><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>BE</module><type><signature><comment>Get/set big-endian integers of various sizes. The second
argument of those functions is the position relative to the
current offset of the cstruct.</comment><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>BE</module>get_uint16</value><doc><code>get_uint16 cstr off</code> is the 16 bit long big-endian unsigned
integer stored in <code>cstr</code> at offset <code>off</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint16</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>BE</module>get_uint32</value><doc><code>get_uint32 cstr off</code> is the 32 bit long big-endian unsigned
integer stored in <code>cstr</code> at offset <code>off</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint32</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>BE</module>get_uint64</value><doc><code>get_uint64 cstr off</code> is the 64 bit long big-endian unsigned
integer stored in <code>cstr</code> at offset <code>off</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint64</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>BE</module>set_uint16</value><doc><code>set_uint16 cstr off i</code> writes the 16 bit long big-endian
unsigned integer <code>i</code> at offset <code>off</code> of <code>cstr</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint16</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>BE</module>set_uint32</value><doc><code>set_uint32 cstr off i</code> writes the 32 bit long big-endian
unsigned integer <code>i</code> at offset <code>off</code> of <code>cstr</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint32</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>BE</module>set_uint64</value><doc><code>set_uint64 cstr off i</code> writes the 64 bit long big-endian
unsigned integer <code>i</code> at offset <code>off</code> of <code>cstr</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint64</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value></signature></type></module><module><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>LE</module><type><signature><comment>Get/set little-endian integers of various sizes. The second
argument of those functions is the position relative to the
current offset of the cstruct.</comment><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>LE</module>get_uint16</value><doc><code>get_uint16 cstr off</code> is the 16 bit long little-endian unsigned
integer stored in <code>cstr</code> at offset <code>off</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint16</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>LE</module>get_uint32</value><doc><code>get_uint32 cstr off</code> is the 32 bit long little-endian unsigned
integer stored in <code>cstr</code> at offset <code>off</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint32</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>LE</module>get_uint64</value><doc><code>get_uint64 cstr off</code> is the 64 bit long little-endian unsigned
integer stored in <code>cstr</code> at offset <code>off</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint64</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>LE</module>set_uint16</value><doc><code>set_uint16 cstr off i</code> writes the 16 bit long little-endian
unsigned integer <code>i</code> at offset <code>off</code> of <code>cstr</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint16</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>LE</module>set_uint32</value><doc><code>set_uint32 cstr off i</code> writes the 32 bit long little-endian
unsigned integer <code>i</code> at offset <code>off</code> of <code>cstr</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint32</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>LE</module>set_uint64</value><doc><code>set_uint64 cstr off i</code> writes the 64 bit long little-endian
unsigned integer <code>i</code> at offset <code>off</code> of <code>cstr</code>.<raise><name>Invalid_argument</name>if the buffer is too small.</raise></doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>uint64</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></arrow></value></signature></type></module><comment><title level="2">List of buffers</title></comment><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>lenv</value><doc><code>lenv cstrs</code> is the combined length of all cstructs in <code>cstrs</code>.</doc><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>copyv</value><doc><code>copyv cstrs</code> is the string representation of the concatenation of
all cstructs in <code>cstrs</code>.</doc><arrow><path><resolved><identifier><type>list</type></identifier></resolved><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></path><path><resolved><identifier><type>string</type></identifier></resolved></path></arrow></value><comment><title level="2">Iterations</title></comment><type><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>iter</type><doc>Type of an iterator.</doc><param>a</param><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><var>a</var></path></arrow></type><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>iter</value><doc><code>iter lenf of_cstr cstr</code> is an iterator over <code>cstr</code> that returns
elements of size <code>lenf cstr</code> and type <code>of_cstr cstr</code>.</doc><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type>option</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path></arrow><arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><var>a</var></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>iter</type></identifier></resolved><var>a</var></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>fold</value><doc><code>fold f iter acc</code> is <code>(f iterN accN ... (f iter acc)...)</code>.</doc><arrow><arrow><var>b</var><arrow><var>a</var><var>b</var></arrow></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>iter</type></identifier></resolved><var>a</var></path><arrow><var>b</var><var>b</var></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>buffer_of_sexp</value><arrow><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>buffer</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>sexp_of_buffer</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>buffer</type></identifier></resolved></path><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t_of_sexp</value><arrow><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>sexp_of_t</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Cstruct" src="/home/dsheets/.opam/doc/build/cstruct.1.5.0/_build/lib/cstruct.cmti" digest="e7c7cd9b343f0d41375c5b15339de767"/></xml></base>Cstruct</root>t</type></identifier></resolved></path><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path></arrow></value></unit>