<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Only_in_test" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/only_in_test.cmti" digest="59abb64d7f168057974dc0c1fb372a0d"/></xml></html></base>Only_in_test</root><digest>59abb64d7f168057974dc0c1fb372a0d</digest><import>Arg<digest>1a93c52516966fe6a58564a4c4d9e4fa</digest></import><import>Array<digest>ae800d8cf9903f1d36856950940430e6</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Filename<digest>3817bec1dad20c6f594d3a85b13020b8</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>List<digest>8988208489274193e4e3f69dc6ec2f75</digest></import><import>Map<digest>770e6123e5460eeb42d3050f13c5ad53</digest></import><import>Monad<digest>c2faab2fa073d3588ae0da2799fe693c</digest></import><import>OUnit<digest>061c2b7c3576f155359af098da2b6cc4</digest></import><import>OUnit2<digest>c63c5d4e5d21b5a6e1c006ea3f6a9f40</digest></import><import>OUnitConf<digest>e9d7ac436b7c92024bd75e3ee9f66c27</digest></import><import>OUnitLogger<digest>2829f5e4133023ee1e1988da414aca56</digest></import><import>OUnitPropList<digest>00368900f7cfb75540524d6799d0501a</digest></import><import>OUnitShared<digest>272141ba126236b9846a49bb85586d03</digest></import><import>OUnitTest<digest>b2691574cfa63f167bc6f6ecaaf4805b</digest></import><import>OUnitUtils<digest>5471ffa587444f794375a4caab4e85fd</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pa_bench_lib<digest>49e35efd8e698dfeaeed8204f5445f77</digest></import><import>Pa_ounit_lib<digest>c6212c5c68dc085c7c3df6d5dbfc4532</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printexc<digest>fb616c60404add6295347001c01bfcaa</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Scanf<digest>31f1631ff7e3da78eabf4b08e91d2861</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>String<digest>9cb286f2c4569fd32c379b1a05c7b590</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>lib/only_in_test.mli</file><dir>/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build</dir><digest>792e3bb4f7b59c189fab958f0fb62d9a</digest></source><doc>This module can be used to safely expose functions and values in signatures
that can only be used in unit tests.<newline/>Under the hood, <code>'a t = (unit -&gt; 'a)</code> and the only thing that ever forces them
is the <code>run_tests_and_exit</code> function below which actually runs the unit tests.<newline/>For example, suppose in some module, <code>type t</code> is actually an <code>int</code>. You
want to keep the type definition opaque, but use the underlying
representation in unit tests. You could write in the ml:<newline/><precode>let test_to_int t = Only_in_test.return t
    [let test_of_int n = Only_in_test.return n</precode><newline/>You would then expose in the mli:<newline/><precode>type t
    ... functions for use in regular programming...
    val test_to_int : t -&gt; int Only_in_test.t
    val test_of_int : int -&gt; t Only_in_test.t</precode><newline/>Finally, if you have specific values that you might want to use in unit
tests, but that have top-level side-effects or take too long to compute, you
can delay the side-effects or computation until the unit tests are run by
writing, e.g.:<newline/><code>let (test_special_value : t Only_in_test.t) =
       Only_in_test.of_thunk (fun () -&gt;  (factorial 100))</code><newline/>instead of<newline/><code>let (test_special_value : t Only_in_test.t) =
       Only_in_test.return (factorial 100)</code></doc><type><type><root><base><xml src="index.xml"><cmti name="Only_in_test" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/only_in_test.cmti" digest="59abb64d7f168057974dc0c1fb372a0d"/></xml></base>Only_in_test</root>t</type><param>a</param></type><include><with><dot><root>Monad</root>S</dot><type_subst><dot><resolved><root/></resolved>t</dot><param>a</param><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Only_in_test" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/only_in_test.cmti" digest="59abb64d7f168057974dc0c1fb372a0d"/></xml></base>Only_in_test</root>t</type></identifier></resolved></type_subst></with></include><value><value><root><base><xml src="index.xml"><cmti name="Only_in_test" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/only_in_test.cmti" digest="59abb64d7f168057974dc0c1fb372a0d"/></xml></base>Only_in_test</root>of_thunk</value><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><var>a</var></arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Only_in_test" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/only_in_test.cmti" digest="59abb64d7f168057974dc0c1fb372a0d"/></xml></base>Only_in_test</root>t</type></identifier></resolved><var>a</var></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Only_in_test" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/only_in_test.cmti" digest="59abb64d7f168057974dc0c1fb372a0d"/></xml></base>Only_in_test</root>force</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Only_in_test" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/only_in_test.cmti" digest="59abb64d7f168057974dc0c1fb372a0d"/></xml></base>Only_in_test</root>t</type></identifier></resolved><var>a</var></path><var>a</var></arrow></value></unit>