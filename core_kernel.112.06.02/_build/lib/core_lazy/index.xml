<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></html></base>Core_lazy</root><digest>350331e5dba386e6976e78adada77908</digest><import>Arg<digest>1a93c52516966fe6a58564a4c4d9e4fa</digest></import><import>Array<digest>ae800d8cf9903f1d36856950940430e6</digest></import><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Bin_prot<digest>1eba8a056671767c0ff0de95b9d79cf0</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Char<digest>60fd98ba6ff303baf9287e7bfb886f12</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Filename<digest>3817bec1dad20c6f594d3a85b13020b8</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Lazy<digest>7dba0bf02f60e5ff44e9e4057263f28d</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>List<digest>8988208489274193e4e3f69dc6ec2f75</digest></import><import>Map<digest>770e6123e5460eeb42d3050f13c5ad53</digest></import><import>Monad<digest>c2faab2fa073d3588ae0da2799fe693c</digest></import><import>Nativeint<digest>d9e04753374f7110b66feda40414e5e3</digest></import><import>OUnit<digest>061c2b7c3576f155359af098da2b6cc4</digest></import><import>OUnit2<digest>c63c5d4e5d21b5a6e1c006ea3f6a9f40</digest></import><import>OUnitConf<digest>e9d7ac436b7c92024bd75e3ee9f66c27</digest></import><import>OUnitLogger<digest>2829f5e4133023ee1e1988da414aca56</digest></import><import>OUnitPropList<digest>00368900f7cfb75540524d6799d0501a</digest></import><import>OUnitShared<digest>272141ba126236b9846a49bb85586d03</digest></import><import>OUnitTest<digest>b2691574cfa63f167bc6f6ecaaf4805b</digest></import><import>OUnitUtils<digest>5471ffa587444f794375a4caab4e85fd</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Pa_bench_lib<digest>49e35efd8e698dfeaeed8204f5445f77</digest></import><import>Pa_ounit_lib<digest>c6212c5c68dc085c7c3df6d5dbfc4532</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Printexc<digest>fb616c60404add6295347001c01bfcaa</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Random<digest>6d410ecc00aac669668fa399dbd6fca2</digest></import><import>Scanf<digest>31f1631ff7e3da78eabf4b08e91d2861</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Sexplib<digest>edfea10cfcfd644a920e72e67cb0bbdd</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>String<digest>9cb286f2c4569fd32c379b1a05c7b590</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>Typerep_lib<digest>e6a610cd9119c4b89b2ecff18190c6e7</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><source><file>lib/core_lazy.mli</file><dir>/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build</dir><digest>69e4a7077e0e4b54280e7f581d9b538e</digest></source><doc>A value of type <code>'a Lazy.t</code> is a deferred computation, called
a suspension, that has a result of type <code>'a</code>. The special
expression syntax <code>lazy (expr)</code> makes a suspension of the
computation of <code>expr</code>, without computing <code>expr</code> itself yet.
&quot;Forcing&quot; the suspension will then compute <code>expr</code> and return its
result.<newline/>Note: <code>lazy_t</code> is the built-in type constructor used by the compiler
for the <code>lazy</code> keyword. You should not use it directly. Always use
<code>Lazy.t</code> instead.<newline/>Note: <code>Lazy.force</code> is not thread-safe. If you use this module in
a multi-threaded program, you will need to add some locks.<newline/>Note: if the program is compiled with the <code>-rectypes</code> option,
ill-founded recursive definitions of the form <code>let rec x = lazy x</code>
or <code>let rec x = lazy(lazy(...(lazy x)))</code> are accepted by the type-checker
and lead, when forced, to ill-formed values that trigger infinite
loops in the garbage collector and other parts of the run-time system.
Without the <code>-rectypes</code> option, such ill-founded recursive definitions
are rejected by the type-checker.</doc><type><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type><param>a</param><path><resolved><identifier><type>lazy_t</type></identifier></resolved><var>a</var></path></type><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>typerep_of_t</value><arrow><path><dot><dot><dot><root>Typerep_lib</root>Std</dot>Typerep</dot>t</dot><var>a</var></path><path><dot><dot><dot><root>Typerep_lib</root>Std</dot>Typerep</dot>t</dot><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>typename_of_t</value><arrow><path><dot><dot><dot><root>Typerep_lib</root>Std</dot>Typename</dot>t</dot><var>a</var></path><path><dot><dot><dot><root>Typerep_lib</root>Std</dot>Typename</dot>t</dot><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></path></arrow></value><include><with><dot><root>Monad</root>S</dot><type_subst><dot><resolved><root/></resolved>t</dot><param>a</param><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved></type_subst></with></include><exception><exception><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>Undefined</exception></exception><external><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>force</value><doc><code>force x</code> forces the suspension <code>x</code> and returns its result.
If <code>x</code> has already been forced, <code>Lazy.force x</code> returns the
same value again without recomputing it. If it raised an exception,
the same exception is raised again.
Raise <code>Undefined</code> if the forcing of <code>x</code> tries to force <code>x</code> itself
recursively.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path><var>a</var></arrow><primitive>%lazy_force</primitive></external><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>force_val</value><doc>Like <code>force</code> except that if the computation of <code>x</code> raises an exception, it is
unspecified whether <code>force_val x</code> raises the same exception or <code>Undefined</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path><var>a</var></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>from_fun</value><doc><code>from_fun f</code> is the same as <code>lazy (f ())</code> but slightly more efficient.</doc><arrow><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><var>a</var></arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>from_val</value><doc><code>from_val v</code> returns an already-forced suspension of <code>v</code>
This is for special purposes only and should not be confused with
<code>lazy (v)</code>.</doc><arrow><var>a</var><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>is_val</value><doc><code>is_val x</code> returns <code>true</code> if <code>x</code> has already been forced and
did not raise an exception.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t_of_sexp</value><arrow><arrow><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path><var>a</var></arrow><arrow><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>sexp_of_t</value><arrow><arrow><var>a</var><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>compare</value><arrow><arrow><var>a</var><arrow><var>a</var><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>bin_t</value><arrow><path><dot><dot><root>Bin_prot</root>Type_class</dot>t</dot><var>a</var></path><path><dot><dot><root>Bin_prot</root>Type_class</dot>t</dot><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>bin_read_t</value><arrow><path><dot><dot><root>Bin_prot</root>Read</dot>reader</dot><var>a</var></path><path><dot><dot><root>Bin_prot</root>Read</dot>reader</dot><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>__bin_read_t__</value><arrow><path><dot><dot><root>Bin_prot</root>Read</dot>reader</dot><var>a</var></path><path><dot><dot><root>Bin_prot</root>Read</dot>reader</dot><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></arrow></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>bin_reader_t</value><arrow><path><dot><dot><root>Bin_prot</root>Type_class</dot>reader</dot><var>a</var></path><path><dot><dot><root>Bin_prot</root>Type_class</dot>reader</dot><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>bin_size_t</value><arrow><path><dot><dot><root>Bin_prot</root>Size</dot>sizer</dot><var>a</var></path><path><dot><dot><root>Bin_prot</root>Size</dot>sizer</dot><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>bin_write_t</value><arrow><path><dot><dot><root>Bin_prot</root>Write</dot>writer</dot><var>a</var></path><path><dot><dot><root>Bin_prot</root>Write</dot>writer</dot><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>bin_writer_t</value><arrow><path><dot><dot><root>Bin_prot</root>Type_class</dot>writer</dot><var>a</var></path><path><dot><dot><root>Bin_prot</root>Type_class</dot>writer</dot><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Core_lazy" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_lazy.cmti" digest="350331e5dba386e6976e78adada77908"/></xml></base>Core_lazy</root>t</type></identifier></resolved><var>a</var></path></path></arrow></value></unit>