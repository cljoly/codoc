<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></html></base>Unpack_buffer</root><digest>7905606ff5d2d92d93ec759f9b33e3a1</digest><import>Arg<digest>1a93c52516966fe6a58564a4c4d9e4fa</digest></import><import>Array<digest>ae800d8cf9903f1d36856950940430e6</digest></import><import>ArrayLabels<digest>58a6628d1722d835ca71a7e76108549e</digest></import><import>Bigarray<digest>0643187a8b562858118690c393d01c2e</digest></import><import>Bigstring<digest>6af6b08b42bb92e36e39f3e91528cbfe</digest></import><import>Bin_prot<digest>1eba8a056671767c0ff0de95b9d79cf0</digest></import><import>Binable0<digest>0fe6364c01bd9377b6baf595be287f14</digest></import><import>Binary_searchable<digest>e7ae29784851b589b3c9a1e0f4eaab52</digest></import><import>Binary_searchable_intf<digest>883bca9fb2518f81cf82908ff8175f78</digest></import><import>Blit<digest>38cca5bb1ea14104396fcd0df027b225</digest></import><import>Blit_intf<digest>f48a85659cd6e269c3929d7515f39640</digest></import><import>Bool<digest>c4e577f8302f5bb8b9a46a1707611ac4</digest></import><import>Buffer<digest>a579f4a57e300ec755f84af883c1e51b</digest></import><import>Byte_units<digest>912405ec2e6d40a3f8025822bea678f5</digest></import><import>BytesLabels<digest>f6f25f5328b09c590f56c7e37005c501</digest></import><import>Callback<digest>deb9226b3de6bdba985bad268a5b7c51</digest></import><import>Caml<digest>01b089cee287c41f97b78e3ddf6bc738</digest></import><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>CamlinternalOO<digest>3d0b4eb4525ba4274c8885d7124f7bbc</digest></import><import>Char<digest>60fd98ba6ff303baf9287e7bfb886f12</digest></import><import>Common<digest>e6020f907921d65291cc76209ed50e87</digest></import><import>Commutative_group<digest>aa4494605afd29137f2593bdd461c267</digest></import><import>Comparable<digest>55231eb12c9894aac160d63db882c02b</digest></import><import>Comparable_intf<digest>878adaae9ba1d102814a3634b619ba2e</digest></import><import>Comparator<digest>ca98a1a2139034b6b365d48fefb3def4</digest></import><import>Complex<digest>d0dcc1da3c694cf9a7e924c7832d1528</digest></import><import>Container<digest>9063e144211a8276060de10d3e58e514</digest></import><import>Core_array<digest>2e519631f41e4445860667dc8eb92775</digest></import><import>Core_char<digest>7c9d6786dff7030fd21e29f7001bd85a</digest></import><import>Core_field<digest>4c7627c006ef7a3ad16205a68a337c6c</digest></import><import>Core_hashtbl<digest>2e3fb9f8848e52fdc2f18b9aa7da2b28</digest></import><import>Core_hashtbl_intf<digest>fe8a4de4a5df8e661b70bca95b622cea</digest></import><import>Core_int<digest>fd41db71b530260d3a8f0652a2c5ee0b</digest></import><import>Core_int32<digest>c7e98275f7b0e15cc8f6e225e8b976a3</digest></import><import>Core_int63<digest>1af9df6275aff5997e57807712662786</digest></import><import>Core_int64<digest>8464db01efeb287d2a3d3d43876ff298</digest></import><import>Core_lazy<digest>350331e5dba386e6976e78adada77908</digest></import><import>Core_list<digest>d9b325cab29fcb632954c72b9d266843</digest></import><import>Core_map<digest>62d019f2f220f288dd8294f2eb1b9e27</digest></import><import>Core_map_intf<digest>c58c46b48540ea9e80f28b0d26897ca6</digest></import><import>Core_nativeint<digest>201686f3c1e15477ac979ba5c5b4bede</digest></import><import>Core_queue<digest>f53ca3c0e2a917648c4a38e055000be4</digest></import><import>Core_random<digest>bbd98deba04115392c499062c07bd2aa</digest></import><import>Core_set<digest>6f21088f6d061770860f5c96d5092b0f</digest></import><import>Core_set_intf<digest>f3107b698c0fb7b072c0a37401330275</digest></import><import>Core_sexp<digest>ea0a8e264e9edf3978b8cd5304b0d391</digest></import><import>Core_string<digest>f296d26fe8d16ffcff325c8e43c8e538</digest></import><import>Digest<digest>eab54f58b34b8a6fdc763db6966614a1</digest></import><import>Doubly_linked<digest>ef6a3fcfa42efe6befd4aeb5f233f341</digest></import><import>Error<digest>02d0f933be0201d30aabef7a0eeb9065</digest></import><import>Exn<digest>52afb5810422a283909bd0dc734eb6df</digest></import><import>Fieldslib<digest>d78f9550b468f1166a617738859cc53d</digest></import><import>Filename<digest>3817bec1dad20c6f594d3a85b13020b8</digest></import><import>Float<digest>9ba4cf038a895e5953cc52e9184b588e</digest></import><import>Float_intf<digest>93f4a0a571c37efe657ca54909718f2f</digest></import><import>Floatable<digest>7126c55dfaf1ec824e05d820f8edcfbd</digest></import><import>Format<digest>61d4350242b30078d3ad96c904c9f7a1</digest></import><import>Gc<digest>b6fd17066fdc1a10189b41093e32d95d</digest></import><import>Genlex<digest>b273667d018eaee28be8ef8663aada02</digest></import><import>Hash_queue<digest>96cccf043a8a7295f7d68af1a2d9c6cb</digest></import><import>Hash_set<digest>254c900867a3fece1fe05f4efc77b962</digest></import><import>Hash_set_intf<digest>a1c33ee2656433853f1b0e4360cd162e</digest></import><import>Hashable<digest>27c85ba73bc3d6030f426ee992e59382</digest></import><import>Hashtbl<digest>bb8e269d690301a1c4ff14a08e96e83e</digest></import><import>Identifiable<digest>94f2c5f92ca4d5620df8211bd7ad49db</digest></import><import>Info<digest>da2e4e00893d36ca6c5b545c5bcfeffa</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Int_intf<digest>e95231c5ea84b84d8aac8436bd8fb712</digest></import><import>Intable<digest>dedb5bcbd84e6595576bea827349edb1</digest></import><import>Interfaces<digest>7d1e5a050599317263518d6f2711914b</digest></import><import>Invariant<digest>9d71ef007e46a29fad7976fa3c64c4de</digest></import><import>Invariant_intf<digest>01f78fe3f5ea1f3a94d0ba72cb7f8ebe</digest></import><import>Lazy<digest>7dba0bf02f60e5ff44e9e4057263f28d</digest></import><import>Lexing<digest>1be6a5484fb3cfb69d2c981438a7be62</digest></import><import>Linked_queue<digest>a3f4c24ddd767be33845f70bb08f3376</digest></import><import>List<digest>8988208489274193e4e3f69dc6ec2f75</digest></import><import>ListLabels<digest>f9c893b10648fae8e31ad7bfcd64248f</digest></import><import>Map<digest>770e6123e5460eeb42d3050f13c5ad53</digest></import><import>Marshal<digest>6a7be818a4d43f06397faef2c6f9d35b</digest></import><import>Monad<digest>c2faab2fa073d3588ae0da2799fe693c</digest></import><import>MoreLabels<digest>de38ed0a31c05b2d5f114679e33d4cad</digest></import><import>Nativeint<digest>d9e04753374f7110b66feda40414e5e3</digest></import><import>Never_returns<digest>4823561ceb8b8adb6baeae90909724ab</digest></import><import>Nothing0<digest>92a3ca72a247f89f8da41a42050c5925</digest></import><import>OUnit<digest>061c2b7c3576f155359af098da2b6cc4</digest></import><import>OUnit2<digest>c63c5d4e5d21b5a6e1c006ea3f6a9f40</digest></import><import>OUnitConf<digest>e9d7ac436b7c92024bd75e3ee9f66c27</digest></import><import>OUnitLogger<digest>2829f5e4133023ee1e1988da414aca56</digest></import><import>OUnitPropList<digest>00368900f7cfb75540524d6799d0501a</digest></import><import>OUnitShared<digest>272141ba126236b9846a49bb85586d03</digest></import><import>OUnitTest<digest>b2691574cfa63f167bc6f6ecaaf4805b</digest></import><import>OUnitUtils<digest>5471ffa587444f794375a4caab4e85fd</digest></import><import>Obj<digest>825c406ee2d12ed12fd12dc0e4de1d26</digest></import><import>Oo<digest>0977563fa9c23f2df2952b302bdba835</digest></import><import>Option<digest>6f50cf6a1a79827c990e1396bf3e2eca</digest></import><import>Or_error<digest>9501535b87ba0d5e423e14a726335381</digest></import><import>Ordering<digest>2f398e8893bd615066784d64c9e7f4a2</digest></import><import>Pa_bench_lib<digest>49e35efd8e698dfeaeed8204f5445f77</digest></import><import>Pa_ounit_lib<digest>c6212c5c68dc085c7c3df6d5dbfc4532</digest></import><import>Pa_test_lib<digest>9869606bf4a7705fc5a9fcc2bb324335</digest></import><import>Parsing<digest>4f8cd2d8537563c7ea7ee2e5dc94e427</digest></import><import>Perms<digest>da958215a5464ccca32d356260c501ba</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><import>Polymorphic_compare_intf<digest>e13c3fbc889c7d614a9863831952c326</digest></import><import>Pooled_hashtbl<digest>5cbd70801e69c83d5f7b5f80008c04a4</digest></import><import>Pretty_printer<digest>e27f937dbaf980055e07b66bfe64fdf8</digest></import><import>Printexc<digest>fb616c60404add6295347001c01bfcaa</digest></import><import>Printf<digest>eb49a17645c5ea2dd298430a3c986186</digest></import><import>Queue<digest>06a89c77a23c672d34cb97e6dfc5f30d</digest></import><import>Random<digest>6d410ecc00aac669668fa399dbd6fca2</digest></import><import>Ref<digest>72ce46d55c53dba30d32781132dbe2c2</digest></import><import>Result<digest>0916716eeafc152ab7d597a6b225102d</digest></import><import>Robustly_comparable<digest>a4821697574febd3572049f546a4a130</digest></import><import>Scanf<digest>31f1631ff7e3da78eabf4b08e91d2861</digest></import><import>Sequence<digest>d8431c681e7fc33d0019f6575d1e7a4c</digest></import><import>Set<digest>487197ccd2fea64d52f1cd917061caf2</digest></import><import>Sexpable<digest>44f203bca0fb9c732de5a39e43771d61</digest></import><import>Sexplib<digest>edfea10cfcfd644a920e72e67cb0bbdd</digest></import><import>Sort<digest>7f209dd54826e792b36c64d0a799f76b</digest></import><import>Source_code_position0<digest>dd1b468910e23123a1f7fcd84a7daff2</digest></import><import>Stable_unit_test_intf<digest>ebd37bc4989a2cc2b955ae68802706b6</digest></import><import>Stack<digest>3397768ddbaaa5d9fe72a4c82cdc6eb9</digest></import><import>Staged<digest>b9f50d484acb8f6bc46f61efdbfdf2a5</digest></import><import>StdLabels<digest>bde0996731d345de202224fb701f3910</digest></import><import>Std_internal<digest>d5c9c27dcb3989a721bbfc376a0ea331</digest></import><import>Stream<digest>55948988e71c3ee1749feb21ccec9fc9</digest></import><import>String<digest>9cb286f2c4569fd32c379b1a05c7b590</digest></import><import>StringLabels<digest>d53c23a5c85990103dbeef11dd5cf4f1</digest></import><import>Stringable<digest>b4f4de79e1a2570f977d5a0a05b2a4dc</digest></import><import>Sys<digest>0ce699458ce4430954d7e6a78874647c</digest></import><import>T<digest>cf35d97f682e76692d648dbe4fd968d0</digest></import><import>Typerep_lib<digest>e6a610cd9119c4b89b2ecff18190c6e7</digest></import><import>Unit<digest>e90bd537e82b7da5ae4559ba87d03f16</digest></import><import>Unix<digest>30a4cc8e5f4f902ea609c91caec48af7</digest></import><import>Validate<digest>13c95b83dccb7fdbd3d69bac4dd261f8</digest></import><import>Weak<digest>441c40816fe88175926465199a665458</digest></import><import>With_return<digest>97602245d75939eef6a80591b5372f93</digest></import><source><file>lib/unpack_buffer.mli</file><dir>/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build</dir><digest>b437baed80438b32f379fe35d7a1b908</digest></source><doc>A buffer for incremental decoding of an input stream.<newline/>An <code>Unpack_buffer.t</code> is a buffer to which one can <code>feed</code> strings, and then <code>unpack</code>
from the buffer to produce a queue of values.</doc><module><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module><type><signature><comment>If <code>unpack_one : ('value, 'partial_unpack) unpack_one</code>, then <code>unpack_one buf ?pos
      ?len ?partial_unpack</code> must unpack at most one value of type <code>'value</code> from <code>buf</code>
starting at <code>pos</code>, and not using more than <code>len</code> characters. <code>unpack_one</code> must
returns one the following:<newline/><list><item><code>`Ok (value, n)</code> -- unpacking succeeded and consumed <code>n</code> bytes, where <code>0 &lt;= n &lt;=
      len</code>. It is possible to have <code>n = 0</code>, e.g. for sexp unpacking, which can only tell
it has reached the end of an atom when it encounters the following punctuation
character, which if it is left paren, is the start of the following sexp.</item></list><list><item><code>`Not_enough_data (p, n)</code> -- unpacking encountered a valid proper prefix of a
packed value, and consumed <code>n</code> bytes, where <code>0 &lt;= n &lt;= len</code>. <code>p</code> is a &quot;partial
unpack&quot; that can be supplied to a future call to <code>unpack_one</code> to continue unpacking.</item></list><list><item><code>`Invalid_data</code> -- unpacking encountered an invalidly packed value.</item></list>A naive <code>unpack_one</code> that only succeeds on a fully packed value could lead to
quadratic behavior if a packed value's bytes are input using a linear number of
calls to <code>feed</code>.</comment><type><type><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>t</type><param>value</param><param>partial_unpack</param><arrow><optional>partial_unpack</optional><var>partial_unpack</var><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../core_kernel.112.06.02/_build/lib/bigstring/index.xml"><cmti name="Bigstring" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/bigstring.cmti" digest="6af6b08b42bb92e36e39f3e91528cbfe"/></xml></base>Bigstring</root></identifier>t</type></resolved></path><poly_variant><fixed/><constructor>Ok<tuple><var>value</var><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></constructor><constructor>Not_enough_data<tuple><var>partial_unpack</var><path><resolved><identifier><type>int</type></identifier></resolved></path></tuple></constructor><constructor>Invalid_data<path><resolved><type><identifier><root><base><xml src="../../../../core_kernel.112.06.02/_build/lib/error/index.xml"><cmti name="Error" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/error.cmti" digest="02d0f933be0201d30aabef7a0eeb9065"/></xml></base>Error</root></identifier>t</type></resolved></path></constructor></poly_variant></arrow></arrow></arrow></arrow></type><value><value><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>map</value><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>t</type></identifier></resolved><var>a</var><var>partial_unpack</var></path><arrow><label>f</label><arrow><var>a</var><var>b</var></arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>t</type></identifier></resolved><var>b</var><var>partial_unpack</var></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>create_bin_prot</value><doc><code>create_bin_prot reader</code> returns an unpacker that reads the &quot;size-prefixed&quot; bin_prot
encoding, in which a value is encoded by first writing the length of the bin_prot
data as a 64-bit int, and then writing the data itself. This encoding makes it
trivial to know if enough data is available in the buffer, so there is no need to
represent partially unpacked values, and hence <code>'partial_unpack = unit</code>.</doc><arrow><path><dot><dot><root>Bin_prot</root>Type_class</dot>reader</dot><var>a</var></path><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>t</type></identifier></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><type><type><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>partial_sexp</type><doc>Beware that when unpacking sexps, one cannot tell if one is at the end of an atom
until one hits punctuation. So, one should always feed a space (&quot; &quot;) to a sexp
unpack buffer after feeding a batch of complete sexps, to ensure that the final sexp
is unpacked.</doc></type><value><value><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>sexp</value><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>t</type></identifier></resolved><path><dot><dot><resolved><identifier><root><base><xml src="../../../../typerep.112.06.00/_build/lib/std_internal/index.xml"><cmti name="Std_internal" src="/home/dsheets/.opam/doc/build/typerep.112.06.00/_build/lib/std_internal.cmti" digest="0e2d685456326b7cfbb0f3afe54aa8d3"/></xml></base>Std_internal</root></identifier></resolved>Sexp</dot>t</dot></path><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module>partial_sexp</type></identifier></resolved></path></path></value></signature></type></module><type><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type><param>value</param><param>partial_unpack</param></type><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>invariant</value><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type></identifier></resolved><any/><any/></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>create</value><arrow><optional>partial_unpack</optional><var>partial_unpack</var><arrow><path><resolved><type><identifier><module><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>Unpack_one</module></identifier>t</type></resolved><var>value</var><var>partial_unpack</var></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type></identifier></resolved><var>value</var><var>partial_unpack</var></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>create_bin_prot</value><doc><code>create_bin_prot reader</code> returns an unpack buffer that unpacks the &quot;size-prefixed&quot;
bin_prot encoding, in which a value is encoded by first writing the length of the
bin_prot data as a 64-bit int, and then writing the bin_prot data itself. This
encoding makes it trivial to know if enough data is available in the buffer, so there
is no need to represent partially unpacked values, and hence <code>'partial_unpack =
    unit</code>.</doc><arrow><path><dot><dot><root>Bin_prot</root>Type_class</dot>reader</dot><var>a</var></path><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type></identifier></resolved><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>is_empty</value><doc><code>is_empty t</code> returns <code>true</code> if <code>t</code> has no unconsumed bytes, and <code>false</code> if it does.
<code>is_empty</code> returns an error if <code>t</code> has encountered an unpacking error.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type></identifier></resolved><any/><any/></path><path><resolved><type><identifier><root><base><xml src="../../../../core_kernel.112.06.02/_build/lib/or_error/index.xml"><cmti name="Or_error" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/or_error.cmti" digest="9501535b87ba0d5e423e14a726335381"/></xml></base>Or_error</root></identifier>t</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>feed</value><doc><code>feed t buf ?pos ?len</code> adds the specified substring of <code>buf</code> to <code>t</code>'s buffer. It
returns an error if <code>t</code> has encountered an unpacking error.</doc><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type></identifier></resolved><any/><any/></path><arrow><path><resolved><type><identifier><root><base><xml src="../../../../core_kernel.112.06.02/_build/lib/bigstring/index.xml"><cmti name="Bigstring" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/bigstring.cmti" digest="6af6b08b42bb92e36e39f3e91528cbfe"/></xml></base>Bigstring</root></identifier>t</type></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../core_kernel.112.06.02/_build/lib/or_error/index.xml"><cmti name="Or_error" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/or_error.cmti" digest="9501535b87ba0d5e423e14a726335381"/></xml></base>Or_error</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>feed_string</value><arrow><optional>pos</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><optional>len</optional><path><resolved><identifier><type>int</type></identifier></resolved></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type></identifier></resolved><any/><any/></path><arrow><path><resolved><identifier><type>string</type></identifier></resolved></path><path><resolved><type><identifier><root><base><xml src="../../../../core_kernel.112.06.02/_build/lib/or_error/index.xml"><cmti name="Or_error" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/or_error.cmti" digest="9501535b87ba0d5e423e14a726335381"/></xml></base>Or_error</root></identifier>t</type></resolved><path><resolved><identifier><type>unit</type></identifier></resolved></path></path></arrow></arrow></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>unpack</value><doc><code>unpack t</code> unpacks all the values that it can from <code>t</code>. The resulting queue will be
empty if nothing could be unpacked. If there is an unpacking error, <code>unpack</code> returns
an error, and subsequent <code>feed</code> and <code>unpack</code> operations on <code>t</code> will return that same
error. I.e. no more data can be fed to or unpacked from <code>t</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type></identifier></resolved><var>value</var><any/></path><path><resolved><type><identifier><root><base><xml src="../../../../core_kernel.112.06.02/_build/lib/or_error/index.xml"><cmti name="Or_error" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/or_error.cmti" digest="9501535b87ba0d5e423e14a726335381"/></xml></base>Or_error</root></identifier>t</type></resolved><path><dot><dot><resolved><identifier><root><base><xml src="../../../../typerep.112.06.00/_build/lib/std_internal/index.xml"><cmti name="Std_internal" src="/home/dsheets/.opam/doc/build/typerep.112.06.00/_build/lib/std_internal.cmti" digest="0e2d685456326b7cfbb0f3afe54aa8d3"/></xml></base>Std_internal</root></identifier></resolved>Queue</dot>t</dot><var>value</var></path></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>debug</value><doc><code>debug</code> controls whether invariants are checked at each call. Setting this to <code>true</code>
can make things very slow.</doc><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/pervasives/index.xml"><cmti name="Pervasives" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/pervasives.cmti" digest="0d015a5a2136659b0de431be7f1545be"/></xml></html></base>Pervasives</root></identifier>ref</type></resolved><path><resolved><identifier><type>bool</type></identifier></resolved></path></path></value><value><value><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>sexp_of_t</value><arrow><arrow><var>value</var><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path></arrow><arrow><arrow><var>partial_unpack</var><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path></arrow><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Unpack_buffer" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/unpack_buffer.cmti" digest="7905606ff5d2d92d93ec759f9b33e3a1"/></xml></base>Unpack_buffer</root>t</type></identifier></resolved><var>value</var><var>partial_unpack</var></path><path><dot><dot><root>Sexplib</root>Sexp</dot>t</dot></path></arrow></arrow></arrow></value></unit>