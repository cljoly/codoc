<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></html></base>Union_find</root><digest>280b0227f7cc5c97c60635ff9f24aea7</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>lib/union_find.mli</file><dir>/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build</dir><digest>f8f803c8d91a0b7831d3622fabcba7a7</digest></source><doc>Imperative data structure for representing disjoint sets.<newline/>Union find is used to implement an equivalence relation on objects, where
the equivalence relation can dynamically be coarsened by &quot;union&quot;ing two
equivalence classes together.<newline/>All of the operations are effectively (amortized) constant time.<see><url>en.wikipedia.org/wiki/Disjoint-set_data_structure</url>wikipedia.<newline/>This implementation is not thread-safe.</see></doc><type><type><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>t</type><doc><code>type 'a t</code> is the type of objects, where each object is part of an
equivalence class that is associated with a single value of type <code>'a</code>.</doc><param>a</param></type><value><value><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>create</value><doc><code>create v</code> returns a new object in its own equivalence class that has value <code>v</code>.</doc><arrow><var>a</var><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>t</type></identifier></resolved><var>a</var></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>get</value><doc><code>get t</code> returns the value of the class of <code>t</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>t</type></identifier></resolved><var>a</var></path><var>a</var></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>set</value><doc><code>set t v</code> sets the value of the class of <code>t</code> to <code>v</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>t</type></identifier></resolved><var>a</var></path><arrow><var>a</var><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>same_class</value><doc><code>same_class t1 t2</code> returns true iff <code>t1</code> and <code>t2</code> are in the same equivalence class.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>t</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>t</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>union</value><doc><code>union t1 t2</code> makes the class of <code>t1</code> and the class of <code>t2</code> be the same (if they are
already equal, then nothing changes). The value of the combined class is the value of
<code>t1</code> or <code>t2</code>; it is unspecified which. After <code>union t1 t2</code>, it will always be the
case that <code>same_class t1 t2</code>.</doc><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>t</type></identifier></resolved><var>a</var></path><arrow><path><resolved><identifier><type><root><base><xml src="index.xml"><cmti name="Union_find" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/union_find.cmti" digest="280b0227f7cc5c97c60635ff9f24aea7"/></xml></base>Union_find</root>t</type></identifier></resolved><var>a</var></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></arrow></value></unit>