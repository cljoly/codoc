<?xml version="1.0" encoding="UTF-8"?>
<unit><root><base><html src="index.html"><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></html></base>Core_random</root><digest>bbd98deba04115392c499062c07bd2aa</digest><import>CamlinternalFormatBasics<digest>ba1be62eb45abd435c75cb59cc46b922</digest></import><import>Int32<digest>f43b8a2972804b40e28b661b6fdf157a</digest></import><import>Int64<digest>3565b288ec68024088360805650448dd</digest></import><import>Nativeint<digest>d9e04753374f7110b66feda40414e5e3</digest></import><import>Pervasives<digest>0d015a5a2136659b0de431be7f1545be</digest></import><source><file>lib/core_random.mli</file><dir>/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build</dir><digest>41cb146728c618245d285d96928da024</digest></source><doc>Pseudo-random number generators (PRNG).</doc><comment><title level="6">Basic functions</title></comment><comment>Note that all of these &quot;basic&quot; functions mutate a global random state.</comment><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>init</value><doc>Initialize the generator, using the argument as a seed. The same seed will always
yield the same sequence of numbers.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>full_init</value><doc>Same as <reference><element><resolved><value><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/random/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/random/index.xml"><cmti name="Random" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/random.cmti" digest="6d410ecc00aac669668fa399dbd6fca2"/></xml></html></base>Random</root></identifier>init</value></resolved></element></reference> but takes more data as seed.</doc><arrow><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>self_init</value><doc>Initialize the generator with a more-or-less random seed chosen in a system-dependent
way.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>bits</value><doc>Return 30 random bits in a nonnegative integer.<before><name>3.12.0</name>used a different
algorithm (affects all the following functions)</before></doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>int</value><doc><code>Random.int bound</code> returns a random integer between 0 (inclusive) and <code>bound</code>
(exclusive). <code>bound</code> must be greater than 0 and less than 2<superscript>30</superscript>.</doc><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>int32</value><doc><code>Random.int32 bound</code> returns a random integer between 0 (inclusive) and <code>bound</code>
(exclusive). <code>bound</code> must be greater than 0.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/int32/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/int32/index.xml"><cmti name="Int32" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/int32.cmti" digest="f43b8a2972804b40e28b661b6fdf157a"/></xml></html></base>Int32</root></identifier>t</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/int32/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/int32/index.xml"><cmti name="Int32" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/int32.cmti" digest="f43b8a2972804b40e28b661b6fdf157a"/></xml></html></base>Int32</root></identifier>t</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>nativeint</value><doc><code>Random.nativeint bound</code> returns a random integer between 0 (inclusive) and <code>bound</code>
(exclusive). <code>bound</code> must be greater than 0.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/nativeint/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/nativeint/index.xml"><cmti name="Nativeint" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/nativeint.cmti" digest="d9e04753374f7110b66feda40414e5e3"/></xml></html></base>Nativeint</root></identifier>t</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/nativeint/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/nativeint/index.xml"><cmti name="Nativeint" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/nativeint.cmti" digest="d9e04753374f7110b66feda40414e5e3"/></xml></html></base>Nativeint</root></identifier>t</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>int64</value><doc><code>Random.int64 bound</code> returns a random integer between 0 (inclusive) and <code>bound</code>
(exclusive). <code>bound</code> must be greater than 0.</doc><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/int64/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/int64/index.xml"><cmti name="Int64" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/int64.cmti" digest="3565b288ec68024088360805650448dd"/></xml></html></base>Int64</root></identifier>t</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/int64/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/int64/index.xml"><cmti name="Int64" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/int64.cmti" digest="3565b288ec68024088360805650448dd"/></xml></html></base>Int64</root></identifier>t</type></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>float</value><doc><code>Random.float bound</code> returns a random floating-point number between 0 (inclusive) and
<code>bound</code> (exclusive). If <code>bound</code> is negative, the result is negative or zero. If
<code>bound</code> is 0, the result is 0.</doc><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>float</type></identifier></resolved></path></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>bool</value><doc><code>Random.bool ()</code> returns <code>true</code> or <code>false</code> with probability 0.5 each.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value><comment><title level="6">Advanced functions</title></comment><module><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module><doc>The functions from module <code>State</code> manipulate the current state
of the random generator explicitely.
This allows using one or several deterministic PRNGs,
even in a multi-threaded program, without interference from
other parts of the program.</doc><type><signature><type><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></type><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>default</value><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>make</value><doc>Create a new state and initialize it with the given seed.</doc><arrow><path><resolved><identifier><type>array</type></identifier></resolved><path><resolved><identifier><type>int</type></identifier></resolved></path></path><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>make_self_init</value><doc>Create a new state and initialize it with a system-dependent low-entropy seed.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>copy</value><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>bits</value><doc>These functions are the same as the basic functions, except that they use (and
update) the given PRNG state instead of the default one.</doc><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>int</value><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>int</type></identifier></resolved></path><path><resolved><identifier><type>int</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>int32</value><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/int32/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/int32/index.xml"><cmti name="Int32" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/int32.cmti" digest="f43b8a2972804b40e28b661b6fdf157a"/></xml></html></base>Int32</root></identifier>t</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/int32/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/int32/index.xml"><cmti name="Int32" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/int32.cmti" digest="f43b8a2972804b40e28b661b6fdf157a"/></xml></html></base>Int32</root></identifier>t</type></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>nativeint</value><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/nativeint/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/nativeint/index.xml"><cmti name="Nativeint" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/nativeint.cmti" digest="d9e04753374f7110b66feda40414e5e3"/></xml></html></base>Nativeint</root></identifier>t</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/nativeint/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/nativeint/index.xml"><cmti name="Nativeint" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/nativeint.cmti" digest="d9e04753374f7110b66feda40414e5e3"/></xml></html></base>Nativeint</root></identifier>t</type></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>int64</value><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path><arrow><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/int64/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/int64/index.xml"><cmti name="Int64" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/int64.cmti" digest="3565b288ec68024088360805650448dd"/></xml></html></base>Int64</root></identifier>t</type></resolved></path><path><resolved><type><identifier><root><base><html src="../../../../ocaml.4.02.1+doc/stdlib/int64/index.html"><xml src="../../../../ocaml.4.02.1+doc/stdlib/int64/index.xml"><cmti name="Int64" src="/home/dsheets/.opam/doc/build/ocaml/stdlib/int64.cmti" digest="3565b288ec68024088360805650448dd"/></xml></html></base>Int64</root></identifier>t</type></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>float</value><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path><arrow><path><resolved><identifier><type>float</type></identifier></resolved></path><path><resolved><identifier><type>float</type></identifier></resolved></path></arrow></arrow></value><value><value><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>bool</value><arrow><path><resolved><identifier><type><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module>t</type></identifier></resolved></path><path><resolved><identifier><type>bool</type></identifier></resolved></path></arrow></value></signature></type></module><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>get_state</value><doc>OCaml's <code>Random.get_state</code> makes a copy of the default state, which is almost
certainly not what you want. <code>State.default</code>, which is the actual default state, is
probably what you want.</doc><arrow><path><resolved><identifier><type>unit</type></identifier></resolved></path><poly_variant><fixed/><constructor>Consider_using_Random_State_default<constant/></constructor></poly_variant></arrow></value><value><value><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>set_state</value><doc>Set the state of the generator used by the basic functions.</doc><arrow><path><resolved><type><identifier><module><root><base><xml src="index.xml"><cmti name="Core_random" src="/home/dsheets/.opam/doc/build/core_kernel.112.06.02/_build/lib/core_random.cmti" digest="bbd98deba04115392c499062c07bd2aa"/></xml></base>Core_random</root>State</module></identifier>t</type></resolved></path><path><resolved><identifier><type>unit</type></identifier></resolved></path></arrow></value></unit>